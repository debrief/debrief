<?xml version="1.0" encoding="UTF-8"?>
<!-- This is the schema for datafiles used by the Debrief Maritime Analysis 
	Package (www.debrief.info) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified" targetNamespace="http://www.debrief.info/plot"
	xmlns="http://www.debrief.info/plot">
	<!-- data types -->
	<xs:simpleType name="labelLocationType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Top" />
			<xs:enumeration value="Left" />
			<xs:enumeration value="Bottom" />
			<xs:enumeration value="Centre" />
			<xs:enumeration value="Right" />
			<xs:enumeration value="Middle" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="calcModelType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Speed/Time" />
			<xs:enumeration value="Range/Time" />
			<xs:enumeration value="Range/Speed" />
		</xs:restriction>
	</xs:simpleType>	
	<xs:simpleType name="colourElement">
		<xs:restriction base="xs:integer">
			<xs:minInclusive value="0" />
			<xs:maxInclusive value="255" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="colourType">
		<xs:attribute name="CustomBlue" type="colourElement" />
		<xs:attribute name="CustomGreen" type="colourElement" />
		<xs:attribute name="CustomRed" type="colourElement" />
		<xs:attribute name="Value" use="required" type="xs:string" />
	</xs:complexType>
	<xs:complexType name="worldDistanceType">
		<xs:attribute name="Units" use="required" type="xs:string" />
		<xs:attribute name="Value" use="required" type="xs:double" />
	</xs:complexType>
	<xs:complexType name="locationType">
		<xs:choice maxOccurs="1" minOccurs="0">
			<xs:element name="shortLocation">
				<xs:complexType>
					<xs:attribute name="Depth" use="required" type="xs:double" />
					<xs:attribute name="Lat" use="required" type="xs:double" />
					<xs:attribute name="Long" use="required" type="xs:double" />
				</xs:complexType>
			</xs:element>
			<xs:element name="longLocation">
				<xs:complexType>
					<xs:attribute name="LatDeg" use="required" type="xs:integer" />
					<xs:attribute name="LatMin" use="required" type="xs:double" />
					<xs:attribute name="LatSec" use="required" type="xs:double" />
					<xs:attribute name="LatHem" use="required" type="xs:double" />
					<xs:attribute name="LongDeg" use="required" type="xs:integer" />
					<xs:attribute name="LongMin" use="required" type="xs:double" />
					<xs:attribute name="LongSec" use="required" type="xs:double" />
					<xs:attribute name="LongHem" use="required" type="xs:double" />
					<xs:attribute name="Depth" use="required" type="xs:double" />
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<!-- end of data types -->

	<!-- reusable elements -->
	<xs:complexType name="timeRange">
		<xs:attribute name="End" type="xs:string" />
		<xs:attribute name="Start" use="required" type="xs:string" />
	</xs:complexType>

	<xs:complexType name="font">
		<xs:attribute name="Bold" type="xs:boolean" />
		<xs:attribute name="Family" use="required" type="xs:string" />
		<xs:attribute name="Italic" type="xs:boolean" />
		<xs:attribute name="Size" use="required" type="xs:integer" />
	</xs:complexType>
	<xs:complexType name="textlabel">
		<xs:all>
			<xs:element minOccurs="0" name="font" type="font" />
			<xs:element minOccurs="0" name="colour" type="colourType" />
			<xs:element minOccurs="0" name="centre" type="locationType" />
			<xs:element minOccurs="0" name="timeRange" type="timeRange" />
		</xs:all>
		<xs:attribute name="Label" type="xs:string" />
		<xs:attribute name="LabelLocation" type="labelLocationType" />
		<xs:attribute name="LabelVisible" default="false" type="xs:boolean" />
		<xs:attribute name="Scale" type="xs:string" />
		<xs:attribute name="Symbol" type="xs:string" />
		<xs:attribute name="SymbolVisible" default="false" type="xs:boolean" />
		<xs:attribute name="Visible" default="false" type="xs:boolean" />
	</xs:complexType>
	<!-- end of reusable elements -->

	<!-- top elements plot -> (details, session) -->
	<xs:element name="plot">
		<xs:annotation>
			<xs:documentation>The plot is the top-level element in a Debrief data
				file
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:all>
				<xs:element minOccurs="1" name="session" type="session" />
				<xs:element minOccurs="0" name="details" type="details" />
			</xs:all>
			<xs:attribute name="Created" use="required" type="xs:string" />
			<xs:attribute name="Name" use="required" type="xs:string" />
			<xs:attribute name="PlotId" type="xs:string" />
		</xs:complexType>
	</xs:element>
	<xs:complexType name="details">
		<xs:attribute name="Text" type="xs:string" />
	</xs:complexType>
	<xs:complexType name="session">
		<xs:all>
			<xs:element name="layers" type="layers" />
			<xs:element minOccurs="0" name="projection" type="projection" />
			<xs:element minOccurs="0" name="gui" type="gui" />
		</xs:all>
	</xs:complexType>
	<!-- end of top elements plot -> (details, session) -->

	<!-- plot -> session -> projection -->
	<xs:complexType name="projection">
		<xs:sequence>
			<xs:element name="tl" type="locationType" />
			<xs:element name="br" type="locationType" />
		</xs:sequence>
		<xs:attribute name="Border" type="xs:double" default="1.0" />
		<xs:attribute name="PrimaryOrigin" default="false" type="xs:boolean" />
		<xs:attribute name="PrimaryOriented" default="false"
			type="xs:boolean" />
		<xs:attribute name="Relative" default="false" type="xs:boolean" />
		<xs:attribute name="Type" use="required" type="xs:string" />
	</xs:complexType>
	<!-- end of plot -> session -> projection -->

	<!-- plot -> session -> gui -->
	<xs:complexType name="gui">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element minOccurs="0" name="tote" type="tote" />
			<xs:element minOccurs="0" maxOccurs="unbounded" name="component"
				type="component" />
			<xs:element minOccurs="0" name="Background">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="colour" type="colourType" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="component">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="property">
				<xs:complexType>
					<xs:attribute name="Name" use="required" type="xs:string" />
					<xs:attribute name="Value" use="required" type="xs:string" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="Type" use="required" type="xs:string" />
	</xs:complexType>
	<xs:complexType name="tote">
		<xs:sequence>
			<xs:element minOccurs="0" name="primary">
				<xs:complexType>
					<xs:attribute name="Name" use="required" type="xs:string" />
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="secondary">
				<xs:complexType>
					<xs:attribute name="Name" use="required" type="xs:string" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- end of plot -> session -> gui -->

	<xs:complexType name="layers">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="externalDatafile" type="externalDatafile" />
			<xs:element name="topo" type="topo" />
			<xs:element name="etopo" type="etopo" />
			<xs:element name="narrative" type="narrative" />
			<xs:element name="pattern" type="pattern" />
			<xs:element name="track" type="track" />
			<xs:element name="layer" type="layer" />
			<xs:element name="dynamicShapeLayer" type="dynamicShapeLayer" />
			<xs:element name="dynamicLayer" type="dynamicLayer" />
			<xs:element name="ChartFolio" type="ChartFolio" />
			<xs:element name="satc_solution" type="satc_solution" />
			<xs:element name="composite_track" type="composite_track" />
		</xs:choice>
	</xs:complexType>

	<!-- plot -> session -> layers -> (externalDatafile, topo, etopo, narrative, 
		pattern) -->
	<xs:complexType name="externalDatafile">
		<xs:attribute name="DataType" type="xs:string" />
		<xs:attribute name="LayerName" use="required" type="xs:string" />
		<xs:attribute name="LayerPath" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>

	<xs:complexType name="topo">
		<xs:sequence>
			<xs:element name="colour" type="colourType" />
		</xs:sequence>
		<xs:attribute name="ContourDepths" type="xs:string" />
		<xs:attribute name="ScaleLocation" type="xs:integer" />
		<xs:attribute name="ShowBathy" type="xs:boolean" />
		<xs:attribute name="ShowContours" type="xs:boolean" />
		<xs:attribute name="ShowLand" type="xs:boolean" />
		<xs:attribute name="Visible" default="false" type="xs:boolean" />
	</xs:complexType>

	<xs:complexType name="etopo">
		<xs:sequence>
			<xs:element name="colour" type="colourType" />
		</xs:sequence>
		<xs:attribute name="LineThickness" default="1" type="xs:integer" />
		<xs:attribute name="ScaleLocation" type="xs:integer" />
		<xs:attribute name="ShowLand" default="true" type="xs:boolean" />
		<xs:attribute name="Visible" default="false" type="xs:boolean" />
	</xs:complexType>

	<xs:complexType name="narrative">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="narrative_entry"
				type="narrative_entry" />
		</xs:sequence>
		<xs:attribute name="Name" use="required" type="xs:string" />
	</xs:complexType>
	<xs:complexType name="narrative_entry">
		<xs:attribute name="Dtg" use="required" type="xs:string" />
		<xs:attribute name="Entry" use="required" type="xs:string" />
		<xs:attribute name="Track" use="required" type="xs:string" />
		<xs:attribute name="Type" use="required" type="xs:string" />
	</xs:complexType>
	<xs:complexType name="pattern">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="colour" type="colourType" />
			<xs:element name="timeRange" type="timeRange" />
			<xs:element name="font" type="font" />
			<xs:element name="textlabel" type="textlabel" />
		</xs:choice>
		<xs:attribute name="BuoySymbolSize" default="1.0" type="xs:double" />
		<xs:attribute name="BuoySymbolType" type="xs:string" />
		<xs:attribute name="Name" use="required" type="xs:string" />
		<xs:attribute name="NameLocation" default="Right" type="xs:string" />
		<xs:attribute name="NameVisible" default="true" type="xs:boolean" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<!-- plot -> session -> layers -> (externalDatafile, topo, etopo, narrative, 
		pattern) -->

	<!-- plot -> session -> layers -> track -->
	<xs:complexType name="track">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sensor" type="sensor" />
			<xs:element name="DynamicShapeSet" type="DynamicShapeSet" />
			<xs:element name="fix" type="fix" />
			<xs:element name="tma" type="tma" />
			<xs:element name="TrackSegment" type="TrackSegment" />
			<xs:element name="RelativeTMASegment" type="RelativeTMASegment" />
			<xs:element name="AbsoluteTMASegment" type="AbsoluteTMASegment" />
			<xs:element name="DynamicInfillSegment" type="DynamicInfillSegment" />
			<xs:element name="SegmentList" type="SegmentList" />
			<xs:element name="colour" type="colourType" />
			<xs:element name="SymbolColor" type="colourType" />
			<xs:element name="font" type="font" />
			<xs:element name="SYMBOL_WIDTH" type="worldDistanceType" />
			<xs:element name="SYMBOL_LENGTH" type="worldDistanceType" />
			<xs:element name="CustomTrailLength" type="unitsValueType">
			   <xs:annotation>
			     <xs:documentation>
			     	(Optionally) override the snail trail length
			     </xs:documentation>
			   </xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="InterpolatePoints" default="true"
			type="xs:boolean" />
		<xs:attribute name="LineThickness" default="1" type="xs:integer" />
		<xs:attribute name="LineStyle" default="1" type="xs:integer" />
		<xs:attribute name="LinkPositions" default="true" type="xs:boolean" />
		<xs:attribute name="Name" use="required" type="xs:string" />
		<xs:attribute name="NameAtStart" default="true" type="xs:boolean" />
		<xs:attribute name="NameLocation" default="Right" type="xs:string" />
		<xs:attribute name="NameVisible" default="true" type="xs:boolean" />
		<xs:attribute name="PlotArrayCentre" default="true" type="xs:boolean" />
		<xs:attribute name="PositionsLinked" default="true" type="xs:boolean" />
		<xs:attribute name="PositionsVisible" default="true"
			type="xs:boolean" />
		<xs:attribute name="SensorsVisible" default="true" type="xs:boolean" />
		<xs:attribute name="SolutionsVisible" default="true"
			type="xs:boolean" />
		<xs:attribute name="Symbol" default="SQUARE" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
		<xs:attribute name="CustomVectorStretch" use="optional"  default="1.0" type="xs:double">
		   <xs:annotation>
		     <xs:documentation>
		     	(Optionally) override the vector stretch, just for this track
		     </xs:documentation>
		   </xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndTimeLabels" default="true" type="xs:boolean">
		   <xs:annotation>
		     <xs:documentation>
		     Whether to show a 6-figure DTG at the start &amp; end of the track
		     </xs:documentation>
		   </xs:annotation>
		</xs:attribute>
	</xs:complexType>
	
	<xs:complexType name="composite_track">
		<xs:complexContent>
			<xs:extension base="track">
				<xs:sequence>
					<xs:element minOccurs="0" name="Origin" type="locationType" />
					<xs:element minOccurs="0" maxOccurs="unbounded" name="planning_segment" type="PlanningSegment" />
					<xs:element minOccurs="0" maxOccurs="unbounded" name="closing_segment" type="ClosingSegment" />
				</xs:sequence>
				<xs:attribute name="SymbolIntervalMillis" type="xs:integer" />
				<xs:attribute name="LabelIntervalMillis" type="xs:integer" />
				<xs:attribute name="StartTime" type="xs:string" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- worldDistanceType can be removed -->
	<xs:complexType name="unitsValueType">
		<xs:attribute name="Units" use="required" type="xs:string" />
		<xs:attribute name="Value" use="required" type="xs:double" />
	</xs:complexType>
	
	<xs:complexType name="PlanningSegment">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="fix" type="fix" />
			<xs:element minOccurs="0" name="WorldDistance" type="unitsValueType" />
			<xs:element minOccurs="0" name="Speed" type="unitsValueType" />
			<xs:element minOccurs="0" name="colour" type="colourType" />
			<xs:element minOccurs="0" name="Duration" type="unitsValueType" />
		</xs:sequence>
		<xs:attribute name="LineStyle" type="xs:string" />
		<xs:attribute name="Name" type="xs:string" />
		<xs:attribute name="calcModel" type="calcModelType" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
		<xs:attribute name="VectorLabelVisible" default="true" type="xs:boolean" />
		<xs:attribute name="course" type="xs:double" />
		<xs:attribute name="depth" type="xs:double" />
		
	</xs:complexType>

	<xs:complexType name="ClosingSegment">
		<xs:complexContent>
			<xs:extension base="PlanningSegment">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DynamicShapeSet">
		<xs:sequence>
			<xs:element name="DynamicCoverage" maxOccurs="unbounded"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A definable set of sectors that are centred on, and oriented with a Debrief track.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="colour">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attribute type="xs:string" name="Value" use="optional" />
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute type="xs:string" name="EndDtg" use="optional">
						<xs:annotation>
							<xs:documentation>
								If the end DTG isn't supplied, then the shape will be shown 
								permanently from the start DTG
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:string" name="LineStyle" use="optional" />
					<xs:attribute name="Label" use="required" type="xs:string" />
					<xs:attribute name="LabelLocation" default="Left" type="labelLocationType" />
					<xs:attribute name="LabelShowing" default="true" type="xs:boolean" />
					<xs:attribute type="xs:string" name="StartDtg" use="optional">
						<xs:annotation>
							<xs:documentation>
								If the start DTG isn't supplied, then the shape will be shown until 
								the time reaches any end DTG
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute type="xs:string" name="Visible" use="optional" />
					<xs:attribute type="xs:string" name="arcs" use="required">
						<xs:annotation>
							<xs:documentation>
								A series of 4-element integers, that specify start-angle, end-angle (both in degs from current
								ownship heading), then inner radius, outer radius (both in yds)
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:byte" name="LineThickness" use="optional" />
		<xs:attribute type="xs:string" name="Name" use="required" />
		<xs:attribute type="xs:string" name="TrackName" use="required">
			<xs:annotation>
				<xs:documentation>
					Name of the Debrief track that this shape annotation will be added to
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="Visible" use="optional" />
	</xs:complexType>
	<xs:complexType name="sensor">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="1" name="colour" type="colourType" />
			<xs:element minOccurs="0" maxOccurs="1" name="Offset" type="worldDistanceType" />
			<xs:element minOccurs="0" maxOccurs="unbounded" name="sensor_contact" type="sensor_contact" />
		</xs:sequence>
		<xs:attribute name="LineThickness" default="1" type="xs:integer" />
		<xs:attribute name="Name" use="required" type="xs:string" />
		<xs:attribute name="TrackName" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
		<xs:attribute name="WormInHole" default="false" type="xs:boolean" />
		<xs:attribute name="BaseFrequency" type="xs:float" use="optional">
			<xs:annotation>
				<xs:documentation>
					The radiated frequency (f-nought) for the tonal being tracked
				</xs:documentation>
			</xs:annotation>		
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="sensor_contact">
		<xs:all>
			<xs:element minOccurs="0" name="centre" type="locationType" />
			<xs:element minOccurs="0" name="colour" type="colourType" />
			<xs:element minOccurs="0" name="Range" type="worldDistanceType" />
		</xs:all>
		<xs:attribute name="AmbiguousBearing" type="xs:double" />
		<xs:attribute name="Bearing" type="xs:double" />
		<xs:attribute name="Dtg" use="required" type="xs:string" />
		<xs:attribute name="Frequency" type="xs:double" />
		<xs:attribute name="HasAmbiguousBearing" default="false"
			type="xs:boolean" />
		<xs:attribute name="HasFrequency" default="false" type="xs:boolean" />
		<xs:attribute name="Comment" use="optional" type="xs:string" />
		<xs:attribute name="Label" use="required" type="xs:string" />
		<xs:attribute name="LabelLocation" default="Left"
			type="labelLocationType" />
		<xs:attribute name="LabelShowing" default="true" type="xs:boolean" />
		<xs:attribute name="LineStyle" default="SOLID" type="xs:string" />
		<xs:attribute name="PutLabelAt" default="Left"
			type="labelLocationType" />
		<xs:attribute name="Range" type="xs:double" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="fix">
		<xs:all>
			<xs:element minOccurs="0" name="colour" type="colourType" />
			<xs:element minOccurs="0" name="font" type="font" />
			<xs:element minOccurs="0" name="centre" type="locationType" />
		</xs:all>
		<xs:attribute name="Course" use="required" type="xs:string" />
		<xs:attribute name="Dtg" use="required" type="xs:string" />
		<xs:attribute name="Label" use="required" type="xs:string" />
		<xs:attribute name="Comment" use="optional" type="xs:string" />
		<xs:attribute name="DisplayComment" use="optional" type="xs:boolean" />
		<xs:attribute name="LabelLocation" default="Left"
			type="labelLocationType" />
		<xs:attribute name="LabelShowing" default="true" type="xs:boolean" />
		<xs:attribute name="Speed" use="required" type="xs:string" />
		<xs:attribute name="SymbolShowing" default="true" type="xs:boolean" />
		<xs:attribute name="ArrowShowing" default="false" type="xs:boolean" />
		<xs:attribute name="LineShowing" default="true" type="xs:boolean" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="tma">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="colour" type="colourType" />
			<xs:element name="tma_solution" type="tma_solution" />
		</xs:choice>
		<xs:attribute name="BearingLineVisible" default="false"
			type="xs:boolean" />
		<xs:attribute name="LabelsVisible" default="true" type="xs:boolean" />
		<xs:attribute name="LineThickness" default="1" type="xs:integer" />
		<xs:attribute name="Name" use="required" type="xs:string" />
		<xs:attribute name="TrackName" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="tma_solution">
		<xs:all>
			<xs:element minOccurs="0" name="colour" type="colourType" />
			<xs:element minOccurs="0" name="centre" type="locationType" />
			<xs:element minOccurs="0" name="Range" type="worldDistanceType" />
			<xs:element minOccurs="0" name="Maxima" type="worldDistanceType" />
			<xs:element minOccurs="0" name="Minima" type="worldDistanceType" />
		</xs:all>
		<xs:attribute name="Bearing" type="xs:double" />
		<xs:attribute name="Course" type="xs:double" />
		<xs:attribute name="Depth" type="xs:double" />
		<xs:attribute name="Dtg" use="required" type="xs:string" />
		<xs:attribute name="EllipseShowing" default="true" type="xs:boolean" />
		<xs:attribute name="Label" use="required" type="xs:string" />
		<xs:attribute name="LabelLocation" default="Left"
			type="labelLocationType" />
		<xs:attribute name="LabelShowing" default="true" type="xs:boolean" />
		<xs:attribute name="LineShowing" default="true" type="xs:boolean" />
		<xs:attribute name="Maxima" type="xs:double" />
		<xs:attribute name="Minima" type="xs:double" />
		<xs:attribute name="Orientation" type="xs:double" />
		<xs:attribute name="Range" type="xs:double" />
		<xs:attribute name="Speed" type="xs:double" />
		<xs:attribute name="Symbol" type="xs:string" />
		<xs:attribute name="SymbolShowing" default="true" type="xs:boolean" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="SegmentList">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TrackSegment" type="TrackSegment" />
			<xs:element name="RelativeTMASegment" type="RelativeTMASegment" />
			<xs:element name="AbsoluteTMASegment" type="AbsoluteTMASegment" />
			<xs:element name="DynamicInfillSegment" type="DynamicInfillSegment" />
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="TrackSegment">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="fix"
				type="fix" />
		</xs:sequence>
		<xs:attribute name="LineStyle" type="xs:string" />
		<xs:attribute name="Name" type="xs:string" />
		<xs:attribute name="PlotRelative" default="false" type="xs:boolean" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>

	<xs:complexType abstract="true" name="BaseTMASegment">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="fix"
				type="fix" />
			<xs:element minOccurs="0" maxOccurs="unbounded" name="Speed"
				type="worldDistanceType" />
		</xs:sequence>
		<xs:attribute name="BaseFrequency" type="xs:double" />
		<xs:attribute name="CourseDegs" type="xs:double" />
		<xs:attribute name="LineStyle" type="xs:string" />
		<xs:attribute name="Name" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="RelativeTMASegment">
		<xs:complexContent>
			<xs:extension base="BaseTMASegment">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="Offset">
						<xs:complexType>
							<xs:sequence>
								<xs:element minOccurs="0" name="Range" type="worldDistanceType" />
							</xs:sequence>
							<xs:attribute name="BearingDegs" type="xs:double" />
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="HostTrack" use="required" type="xs:string" >
					<xs:annotation>
						<xs:documentation>
							The name of the host track that this segment is relative to
						</xs:documentation>
					</xs:annotation>						
				</xs:attribute>
				<xs:attribute name="HostSensor" use="optional" type="xs:string" >
					<xs:annotation>
						<xs:documentation>
							The name of the sensor used as an origin (this allows the solution to be referenced from a towed array sensor).
							If a host sensor isn't available, the relevant point on the host track will be used
						</xs:documentation>
					</xs:annotation>						
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AbsoluteTMASegment">
		<xs:complexContent>
			<xs:extension base="BaseTMASegment">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="Origin"
						type="locationType" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DynamicInfillSegment">
		<xs:annotation>
			<xs:documentation>
			This is an infill segment that Debrief inserts between straight TMA Legs. The 
			infill regenerates if/when either the before or after leg are changed.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BaseTMASegment">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="Origin"
						type="locationType" />
				</xs:sequence>
				<xs:attribute name="BeforeLeg" use="required" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Name of the leg TMA leg immediately before the infill
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="AfterLeg" use="required" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Name of the leg TMA leg immediately after the infill
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- end of plot -> session -> layers -> track -->

	<!-- reusable elements for (plot -> session -> layers -> layer) and (plot 
		-> session -> layers -> ChartFolio) -->
	<xs:complexType name="coastline">
		<xs:sequence>
			<xs:element minOccurs="0" name="colour" type="colourType" />
		</xs:sequence>
		<xs:attribute name="Name" type="xs:string" />
		<xs:attribute name="Visible" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="vpf_coastline">
		<xs:sequence>
			<xs:element minOccurs="0" name="colour" type="colourType" />
		</xs:sequence>
		<xs:attribute name="Name" type="xs:string" />
		<xs:attribute name="Visible" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="ChartReference">
		<xs:all>
			<xs:element minOccurs="0" name="font" type="font" />
			<xs:element minOccurs="0" name="colour" type="colourType" />
			<xs:element minOccurs="0" name="TopLeft" type="locationType" />
			<xs:element minOccurs="0" name="BottomRight" type="locationType" />
		</xs:all>
		<xs:attribute name="FileName" type="xs:string" />
		<xs:attribute name="Label" type="xs:string" />
		<xs:attribute name="LabelLocation" type="labelLocationType" />
		<xs:attribute name="LabelVisible" default="true" type="xs:boolean" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="scale">
		<xs:all>
			<xs:element minOccurs="0" name="colour" type="colourType" />
			<xs:element minOccurs="0" name="Background" type="colourType" />
			<xs:element minOccurs="0" name="font" type="font" />
		</xs:all>
		<xs:attribute name="AutoMode" type="xs:boolean" />
		<xs:attribute name="FillBackground" type="xs:boolean" default="false"/>
		<xs:attribute name="SemiTransparent" type="xs:boolean" default="false" />
		<xs:attribute name="DisplayUnits" type="xs:string" />
		<xs:attribute name="Location" type="xs:string" />
		<xs:attribute name="Name" type="xs:string" />
		<xs:attribute name="ScaleMax" type="xs:long" />
		<xs:attribute name="ScaleStep" type="xs:long" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="timeDisplay">
		<xs:all>
			<xs:element minOccurs="0" name="Color" type="colourType" /> 
			<xs:element minOccurs="0" name="BackgroundColor" type="colourType" />
			<xs:element minOccurs="0" name="NegativeColor" type="colourType" />
			<xs:element minOccurs="0" name="font" type="font"  />
		</xs:all>
		<xs:attribute name="Prefix" type="xs:string" />
		<xs:attribute name="Suffix" type="xs:string" />
		<xs:attribute name="FormatTime" type="xs:string" />
		<xs:attribute name="Location" type="xs:string" />
		<xs:attribute name="Origin" type="xs:string" />
		<xs:attribute name="Name" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
		<xs:attribute name="Absolute" default="true" type="xs:boolean" />
		<xs:attribute name="FillBackground" default="false" type="xs:boolean" />
		<xs:attribute name="SemiTransparent" default="false" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="grid">
		<xs:sequence>
			<xs:element minOccurs="0" name="font" type="font" />
			<xs:element minOccurs="0" name="Delta" type="worldDistanceType" />
			<xs:element minOccurs="0" name="colour" type="colourType" />
		</xs:sequence>
		<xs:attribute name="Delta" type="xs:double" />
		<xs:attribute name="Name" type="xs:string" />
		<xs:attribute name="PlotLabels" type="xs:boolean" />
		<xs:attribute name="Units" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="LocalGrid">
		<xs:complexContent>
			<xs:extension base="grid">
				<xs:sequence>
					<xs:element minOccurs="0" name="Origin" type="locationType" />
				</xs:sequence>
				<xs:attribute name="PlotOrigin" type="xs:boolean" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Grid4W">
		<xs:all>
			<xs:element minOccurs="0" name="Origin" type="locationType" />
			<xs:element minOccurs="0" name="colour" type="colourType" />
			<xs:element minOccurs="0" name="FillColor" type="colourType" />
			<xs:element minOccurs="0" name="FontColor" type="colourType" />
			<xs:element minOccurs="0" name="font" type="font" />
		</xs:all>
		<xs:attribute name="FillGrid" type="xs:boolean" />
		<xs:attribute name="Name" type="xs:string" />
		<xs:attribute name="Orientation" type="xs:double" />
		<xs:attribute name="PlotLabels" type="xs:boolean" />
		<xs:attribute name="PlotLines" type="xs:boolean" />
		<xs:attribute name="US_Standard" type="xs:boolean" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
		<xs:attribute name="xDelta" type="xs:double" />
		<xs:attribute name="xMax" type="xs:string" />
		<xs:attribute name="xMin" type="xs:string" />
		<xs:attribute name="yDelta" type="xs:double" />
		<xs:attribute name="yMax" type="xs:integer" />
		<xs:attribute name="yMin" type="xs:integer" />
		<xs:attribute name="LineStyle" type="xs:integer" />
	</xs:complexType>
	<xs:complexType name="vpf_database">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="vpf_library"
				type="vpf_library" />
		</xs:sequence>
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="vpf_library">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="vpf_coverage"
				type="vpf_coverage" />
		</xs:sequence>
		<xs:attribute name="Name" use="required" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="vpf_coverage">
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="vpf_feature"
				type="vpf_feature" />
		</xs:sequence>
		<xs:attribute name="Description" type="xs:string" />
		<xs:attribute name="Type" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="vpf_feature">
		<xs:sequence>
			<xs:element minOccurs="0" name="colour" type="colourType" />
		</xs:sequence>
		<xs:attribute name="Description" type="xs:string" />
		<xs:attribute name="Type" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<!-- end of reusable elements for (plot -> session -> layers -> layer) and 
		(plot -> session -> layers -> ChartFolio) -->

	<!-- plot -> session -> layers -> layer -->
	<xs:complexType name="layer">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="textlabel" type="textlabel" />
			<xs:element name="coastline" type="coastline" />
			<xs:element name="vpf_coastline" type="vpf_coastline" />
			<xs:element name="ChartReference" type="ChartReference" />
			<xs:element name="scale" type="scale" />
			<xs:element name="grid" type="grid" />
			<xs:element name="LocalGrid" type="LocalGrid" />
			<xs:element name="Grid4W" type="Grid4W" />
			<xs:element name="vpf_database" type="vpf_database" />
			<xs:element name="line" type="line" />
			<xs:element name="vector" type="vector" />
			<xs:element name="polygon" type="polygon" />
			<xs:element name="ellipse" type="ellipse" />
			<xs:element name="rectangle" type="rectangle" />
			<xs:element name="circle" type="circle" />
			<xs:element name="Arc" type="Arc" />
			<xs:element name="wheel" type="wheel" />
		</xs:choice>
		<xs:attribute name="LineThickness" default="1" type="xs:integer" />
		<xs:attribute name="Name" use="required" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="dynamicShapeLayer">
		<xs:annotation>
			<xs:documentation>
			  A layer that contains a series of time-stamped shapes. Debrief will only plot the shape
			  nearest to the current replay time
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="polygon" type="polygon" />
			<xs:element name="rectangle" type="rectangle" />
			<xs:element name="circle" type="circle" />
		</xs:choice>
		<xs:attribute name="LineThickness" default="1" type="xs:integer" />
		<xs:attribute name="Name" use="required" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
		<xs:attribute name="PlotAllShapes" use="optional" default="false" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>
				Whether to just plot all shapes, ignoring the time component
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="dynamicLayer">
		<xs:annotation>
			<xs:documentation>
			  A layer that contains a series of time display widgets.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="timeDisplay" type="timeDisplay" />
		</xs:choice>
		<xs:attribute name="Name" use="required" type="xs:string" />
		<xs:attribute name="Visible" default="true" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="shape" abstract="true">
		<xs:sequence>
			<xs:element minOccurs="0" name="colour" type="colourType" />
			<xs:element minOccurs="0" name="fontcolour" type="colourType" />
			<xs:element minOccurs="0" name="timeRange" type="timeRange" />
			<xs:element minOccurs="0" name="font" type="font" />
		</xs:sequence>
		<xs:attribute name="Label" type="xs:string" />
		<xs:attribute name="LabelLocation" type="labelLocationType" />
		<xs:attribute name="LabelVisible" type="xs:boolean" />
		<xs:attribute name="LineStyle" type="xs:integer" />
		<xs:attribute name="LineThickness" type="xs:integer" />
		<xs:attribute name="Visible" type="xs:boolean" />
		<xs:attribute name="SemiTransparent" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Whether to paint this object on-screen as semi-transparent.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="line">
		<xs:complexContent>
			<xs:extension base="shape">
				<xs:sequence>
					<xs:element name="tl" type="locationType" />
					<xs:element name="br" type="locationType" />
				</xs:sequence>
				<xs:attribute name="ArrowAtEnd" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>Whether to draw an arrow at the end of the line
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="ShowAutoCalc" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>Whether to show range/bearing in the middle of the line
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="vector">
		<xs:complexContent>
			<xs:extension base="shape">
				<xs:sequence>
					<xs:element name="tl" type="locationType" />
					<xs:element name="Distance" type="worldDistanceType" />
				</xs:sequence>
				<xs:attribute name="ArrowAtEnd" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>Whether to draw an arrow at the end of the line
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="Bearing" type="xs:double">
					<xs:annotation>
						<xs:documentation>Bearing (in Degrees) for the Vector
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="polygon">
		<xs:complexContent>
			<xs:extension base="shape">
				<xs:sequence>
					<xs:element name="WorldPath">
						<xs:complexType>
							<xs:sequence>
								<xs:element minOccurs="0" maxOccurs="unbounded" name="Point"
									type="locationType" />
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="Closed" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Whether to draw an extra line from the last
							point back to the origin
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="Filled" type="xs:boolean" />
				<xs:attribute name="LabelNodes" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>Whether to show a text label for each polygon
							node
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ellipse">
		<xs:complexContent>
			<xs:extension base="shape">
				<xs:sequence>
					<xs:element name="centre" type="locationType" />
					<xs:element minOccurs="0" name="Maxima" type="worldDistanceType" />
					<xs:element minOccurs="0" name="Minima" type="worldDistanceType" />
				</xs:sequence>
				<xs:attribute name="Filled" type="xs:boolean" />
				<xs:attribute name="Maxima" type="xs:string" />
				<xs:attribute name="Minima" type="xs:string" />
				<xs:attribute name="Orient" type="xs:string" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="rectangle">
		<xs:complexContent>
			<xs:extension base="shape">
				<xs:sequence>
					<xs:element name="tl" type="locationType" />
					<xs:element name="br" type="locationType" />
				</xs:sequence>
				<xs:attribute name="Filled" type="xs:boolean" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="circle">
		<xs:complexContent>
			<xs:extension base="shape">
				<xs:sequence>
					<xs:element name="centre" type="locationType" />
					<xs:element minOccurs="0" name="Radius" type="worldDistanceType" />
				</xs:sequence>
				<xs:attribute name="Filled" type="xs:boolean" />
				<xs:attribute name="Radius" type="xs:string" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Arc">
		<xs:complexContent>
			<xs:extension base="circle">
				<xs:attribute name="ArcWidth" type="xs:double" />
				<xs:attribute name="CentreBearing" type="xs:double" />
				<xs:attribute name="PlotOrigin" type="xs:boolean" />
				<xs:attribute name="PlotSpokes" type="xs:boolean" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="wheel">
		<xs:complexContent>
			<xs:extension base="shape">
				<xs:sequence>
					<xs:element name="centre" type="locationType" />
					<xs:element minOccurs="0" name="Inner" type="worldDistanceType" />
					<xs:element minOccurs="0" name="Outer" type="worldDistanceType" />
				</xs:sequence>
				<xs:attribute name="EmptyInner" type="xs:boolean" />
				<xs:attribute name="Inner" type="xs:string" />
				<xs:attribute name="Outer" type="xs:string" />
				<xs:attribute name="SpokeSize" type="xs:string" />
				<xs:attribute name="Orientation" type="xs:int" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- end of plot -> session -> layers -> layer -->

	<!-- plot -> session -> layers -> satc_solution -->
	<xs:complexType name="satc_solution" mixed="true">
		<xs:annotation>
			<xs:documentation>A scenario representing a SATC problem-set
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="colour">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute type="xs:string" name="Value" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute type="xs:boolean" name="LiveRunning">
			<xs:annotation>
				<xs:documentation>Whether the scenario auto-runs when the user changes a contribution
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute type="xs:string" name="NAME" />
		<xs:attribute type="xs:boolean" name="OnlyPlotEnds" />
		<xs:attribute type="xs:boolean" name="ShowAlterationBounds" />
		<xs:attribute type="xs:boolean" name="ShowBounds" />
		<xs:attribute type="xs:boolean" name="ShowSolutions" />
	</xs:complexType>
	<!-- end of plot -> session -> layers -> satc_solution -->

	<!-- plot -> session -> layers -> ChartFolio -->
	<xs:complexType name="ChartFolio">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="colour" type="colourType" />
			<xs:element name="coastline" type="coastline" />
			<xs:element name="vpf_coastline" type="vpf_coastline" />
			<xs:element name="ChartReference" type="ChartReference" />
			<xs:element name="scale" type="scale" />
			<xs:element name="grid" type="grid" />
			<xs:element name="LocalGrid" type="LocalGrid" />
			<xs:element name="Grid4W" type="Grid4W" />
			<xs:element name="vpf_database" type="vpf_database" />
		</xs:choice>
		<xs:attribute name="LineThickness" use="required" type="xs:integer" />
		<xs:attribute name="Name" use="required" type="xs:string" />
		<xs:attribute name="Visible" use="required" type="xs:boolean" />
		<xs:attribute name="SHOW_NAMES" use="required" type="xs:boolean" />
	</xs:complexType>
	<!-- end of plot -> session -> layers -> ChartFolio -->
</xs:schema>