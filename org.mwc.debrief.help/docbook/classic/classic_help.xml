<?xml version="1.0" encoding="UTF-8"?>
<!--<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN">-->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.docbook.org/xml/4.1.2/docbookx.dtd">
<!--<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V5//EN" "http://www.docbook.org/xml/5.0/dtd/docbook.dtd">-->
<?xml-stylesheet href="file:///C:/docbook/docbook-xsl-1.44/html/docbook.xsl" type="text/xsl"?>
<book> 
<bookinfo> 
<title>Debrief User Documentation</title> 
<mediaobject> 
<imageobject>
<imagedata fileref="figures/d2003_logo.gif" align="center"/> 
</imageobject> 
</mediaobject> 
<author> 
<firstname>Ian</firstname> 
<surname>Mayo</surname> 
<affiliation> 
<orgdiv> <inlinegraphic fileref="figures/d2003_logo.gif"/> </orgdiv> 
<orgdiv> <inlinegraphic fileref="figures/mwc_crest.gif"/> </orgdiv> 
<orgdiv> <inlinegraphic fileref="figures/planet.gif"/> </orgdiv> 
</affiliation> 
</author> 
<edition>Documentation for Debrief 2003</edition> 
<pubdate>July 2004</pubdate> <abstract id="contact_details"> 
<title>Contact details</title> 
<para>Should you wish to learn more about
        <application>Debrief</application> please contact one of the following:
      </para> 
<formalpara> 
<title>Debrief Project Sponsor</title> 
<para>
          <address>
            <firstname>Lt Cdr Andy Evans</firstname>
            <surname>SMTAC OA</surname>
            <lineage>Maritime Warfare Centre</lineage>
            <street>PO Box 325</street>
            <city>Cosham</city>
            <state>HANTS</state>
            <country>UK</country>
            <postcode>  PO6 3SX</postcode>
            <country>e-mail: smtac.oa@mwc.rn.mod.uk</country>
          </address>
        </para> 
</formalpara> 
<formalpara> 
<title>Debrief Project Manager</title> 
<para>
          <address>
            <firstname>Mr Ian A Mayo</firstname>
            <surname>Debrief Project Manager</surname>
            <lineage>PlanetMayo Ltd</lineage>
            <street>34 Shearwater Avenue</street>
            <city>Fareham</city>
            <state>HANTS</state>
            <country>UK</country>
            <postcode>  PO16 8YE</postcode>
            <country>e-mail: IanMayo@planetmayo.co.uk</country>
          </address>
        </para> 
</formalpara> </abstract> 
<revhistory> 
<revision> 
<revnumber>1.7</revnumber> <date>10th July 2004</date> 
<authorinitials>IM</authorinitials> 
<revremark>Include track-shifting</revremark> 
</revision> 
<revision> 
<revnumber>1.6</revnumber> <date>10th March 2003</date> 
<authorinitials>IM</authorinitials> 
<revremark>Update to Debrief 2003 functionality</revremark> 
</revision> 
<revision> 
<revnumber>1.5</revnumber> <date>10th Nov 2002</date> 
<authorinitials>IM</authorinitials> 
<revremark>Add ETOPO-2 data support</revremark> 
</revision> 
<revision> 
<revnumber>1.4</revnumber> <date>10th July 2002</date> 
<authorinitials>IM</authorinitials> 
<revremark>D2002 post-beta revisions, including starting with higher
memory allocation</revremark> 
</revision> 
<revision> 
<revnumber>1.3</revnumber> <date>7th May 2002</date> 
<authorinitials>IM</authorinitials> 
<revremark>Update to reflect Debrief 2002</revremark> 
</revision> 
<revision> 
<revnumber>1.2</revnumber> <date>13th February 2002</date> 
<authorinitials>IM</authorinitials> 
<revremark> Bought up to date with new features (per-fix colouring,
cascade/tile, x-y plot tracking bar)</revremark> 
</revision> 
<revision> 
<revnumber>1.1</revnumber> <date>25th October 2001</date> 
<authorinitials>IM</authorinitials> 
<revremark> Acknowledged Debrief users added, together with extended
Welcome/History </revremark> 
</revision> 
<revision> 
<revnumber>1.0</revnumber> <date>8th October 2001</date> 
<authorinitials>IM</authorinitials> 
<revremark> Initial version, following collation of existing HTML
pages to DocBook format, together with full review by SMTAC OA.
</revremark> 
</revision> 
</revhistory> 
<copyright> 
<year>2000, 2001, 2002, 2003, 2004</year> 
<holder>PlanetMayo Ltd. Permission is granted to copy, distribute
and/or modify this document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version published by
the Free Software Foundation. A copy of the license is included in
the section entitled "GNU Free Documentation License". </holder> 
</copyright> 
</bookinfo> 
<preface id="intro"> 
<title>Introduction</title> 
<sect1 id="intro_welcome"> 
<title>Welcome</title> 
<para>Welcome to the documentation for
        <application>Debrief</application>.
        <application>Debrief</application> has been produced by the Maritime Warfare Centre in Portsmouth UK, to support the analysis and reporting of maritime tactical exercises.
      </para> 
<para>In December 2000 the Maritime Warfare Centre decided to give
        <application>Debrief</application> an Open Source status, opening the application and its source code into the public domain.
      </para> 
<para>Debrief has been made
        <indexterm>
          <primary>Open Source</primary>
        </indexterm>Open Source to facilitate its wider use, encouraging adoption of standard file formats, presentation and practices between analysis agencies.
      </para> 
<para>Debrief provides the following features:
        <itemizedlist>
          <listitem>
            <para>2-Dimensional (top-down) view of vessel tracks</para> 
</listitem> 
<listitem> 
<para>Ability for user to
              <emphasis>step-through</emphasis> exercise serials
            </para> 
</listitem> 
<listitem> 
<para>Full formatting of data presented on screen</para> 
</listitem> 
<listitem> 
<para>Palette of tactical, vector map and chart-related features for insertion onto
              <glossterm linkend="g_plt">plot</glossterm>
            </para> 
</listitem> 
<listitem> 
<para>Export of plot images for insertion into word processor</para> 
</listitem> 
<listitem> 
<para>X-Y plotting of relationships between tracks</para> 
</listitem> 
<listitem> 
<para>3-Dimensional view of tracks using height/depth data</para> 
</listitem> 
<listitem> 
<para>Gridded database of bathymetry/elevation</para> 
</listitem> 
<listitem> 
<para>Display of time-stamped text and sensor data</para> 
</listitem> 
<listitem> 
<para>Video output (avi) facility</para> 
</listitem> 
</itemizedlist> </para> 
</sect1> 
<sect1 id="debrief_history"> 
<title>History</title> 
<sect2> 
<title>Pre-history</title> 
<para>
          <application>Debrief</application> was originally
          <indexterm>
            <primary>History</primary>
          </indexterm>produced in 1995 in the
          <glossterm linkend="g_MWC">Maritime Warfare Centre</glossterm> to act as a desktop viewer for results produced by the MWC&apos;s ASSET
          <indexterm>
            <primary>ASSET</primary>
          </indexterm> submarine simulator. In use, it quickly became
apparent that real exercise data could also be viewed in the application, removing the requirement
 for clerical staff to produce paper plots for use in analysis. The initial 
 version of
          <application>Debrief</application> was a 16-bit MS Windows C++ application.
        </para> 
<para>
          <application>Debrief</application> was updated in late 1996 to 32 bits, in order to exploit the richer user interface components available for 32 bit Windows applications. It was at this stage that the application was demonstrated and subsequently issued under license to
          <indexterm>
            <primary>COMSUBDEVRON 12</primary>
            <secondary>CSDS 12</secondary>
          </indexterm>COMSUBDEVRON 12 of the US Navy.
        </para> 
<para>
In 1999 development of an updated version of
          <application>Debrief</application>,
          <application>Debrief</application> 2000 was started. Over the previous four years a number of fresh requirements had arisen, requirements which could not be economically met using the existing architecture. Accordingly development of the
          <application>Debrief</application> 2000 application started from a fresh-whiteboard, adopting a modern modular approach to allow incremental implementation and insertion of future modules as they were required. The rapid maturity experienced by Java together with the availability of cheaply available development environments, rich application libraries (Serialisation, Java3D and XML in particular) and its platform independence made Java the natural choice for the application.
        </para> 
<para>
During 2000
          <application>Debrief</application> gained wider use within the Maritime Warfare Centre, being used for more varied types of submarine exercise analysis together with analysis in surface-related warfare areas.
        </para> 
</sect2> 
<sect2> 
<title>The switch to Open Source</title> 
<para>
In Summer 2000 the Maritime Warfare Centre committed to switching the
          <application>Debrief</application>
application to
          <indexterm significance="preferred">
            <primary>Open Source</primary>
          </indexterm>Open Source status. The adoption of the Open Source
licensing model affects MWC in a number of ways:
          <orderedlist>
            <listitem>
              <para>
Organisations that are currently using
                <application>Debrief</application> will have full access to the source code of
                <application>Debrief</application>, allowing them to identify and correct bugs provided they have sufficiently trained staff. The licensing is such that these modifications should be again made public through the re-insertion into the central, online "code base".
              </para> 
</listitem> 
<listitem> 
<para>
Organisations that are not currently using
                <application>Debrief</application> also have full access to the application and its source code. Since the application and its supporting documentation clearly describe its origins in MWC this will spread the name of the organisation together with enforcing its reputation as a centre of maritime tactical analysis.
              </para> 
</listitem> 
<listitem> 
<para>
Any organisation using
                <application>Debrief</application> that identifies a bug/algorithmic problem is able to independently correct the problem and submit the corrected code back into the central "code base". In time, this will greatly increase the accuracy and reliability of the application. MWC may then freely utilise these improvements, only incurring the administrative overhead of "checking-in" code modified by third party organisations.
              </para> 
</listitem> 
<listitem> 
<para>
The free, open source status of the application makes it easier for third party, commercial organisations to bid for development contracts to maintain or extend
                <application>Debrief</application>. This wider availability will only bring economic advantages to MWC and fellow organisations.
              </para> 
</listitem> 
<listitem> 
<para>
The wider national/international use of
                <application>Debrief</application> will also lead to easier exchange of exercise data between nations (through common file formats) and potentially offer an increase in efficiency and the general quality of naval exercise analysis
              </para> 
</listitem> 
</orderedlist> </para> 
</sect2> 
<sect2> 
<title>Debrief 2001 onwards</title> 
<para>At the end of 2000, Ian Mayo, the developer and
          <link linkend="project_manager">project manager</link> of
          <application>Debrief</application>, left full-time employment at the Maritime Warfare Centre to setup his own software development consultancy,
          <indexterm>
            <primary>PlanetMayo</primary>
          </indexterm>PlanetMayo Ltd.
        </para> 
<para>
 A competitive open tender process was conducted during late 2001 to supply the Maritime Warfare Centre with
          <application>Debrief</application> support.  The contract was won by PlanetMayo, who grouped up the implementation of the MWC&apos;s fresh requirements in a major update to
          <application>Debrief</application>, titled
          <application>Debrief  2001</application>.  This update bought new, large areas of functionality to
          <application>Debrief</application> including vectored chart data, display of narrative text, and display of sensor-data.
        </para> 
<para>Debrief development has continued in 2002, with the update to
          <application>Debrief 2002</application>, which has bought greatly improved 3-d plotting facilities and a number of incremental improvements to other areas of functionality.
        </para> 
<para>The year 2002 also saw the first conference paper extolling the virtues of Debrief and the Open Source principles behind it, at
          <indexterm>
            <primary>UDT</primary>
          </indexterm>Undersea Defence Technology 2002 in La Spetzia, Italy.  The paper itself is availble for viewing at the:
          <ulink url="http://www.debrief.info">Debrief web site</ulink>.
        </para> 
<para>Another significant step forward for Debrief in 2002 was the contribution from
          <indexterm>
            <primary>NUWC</primary>
          </indexterm>
          <link linkend="nuwc_address">NUWC</link> of an algorithm and code suitable for shifting tracks.  NUWC developed a set of experimental classes used to perform
          <link linkend="track_shifting">track-shifting</link>.  The algorithms used in these classes was taken and modified to complement the Debrief look and feel, and to provide greater useability resulting in the track-shifting editor included in Debrief 2002.
        </para> 
<para>Through 2003 and 2004 PlanetMayo has continued to provide MWC with contracted support for Debrief. This support has included user guidance, bug fixes and addition of new featueres.  Additionally this support contract was used to deliver Debrief 2003; including provision of a bathymetric bottom in 3-d views, presentation of TMA data, and improved time-variable graphs.</para> 
</sect2> 
</sect1> 
<sect1 id="users"> 
<title>Debrief users</title> 
<para>Whilst
        <application>Debrief</application> was originally developed for use within the Maritime Warfare Centre, the switch to Open Source licensing has led to its adoption by the following organisations and companies:
      </para> 
<para>

        <table frame="none">
          <title>List of acknowledged Debrief users</title>
          <tgroup cols="2">
            <colspec colname="col01" colnum="1" colwidth="1.30*"/>
            <colspec colname="col1" colnum="2" colwidth="1.5*"/>
            <tbody>
              <row id="mwc">
                <entry>
                  <para>
                    <inlinegraphic fileref="figures/mwc_cresta.gif"/>
                  </para> </entry> 
<entry id="project_sponsor"> 
<para>Debrief project sponsor.
                    <address>
                      <firstname>Lt Cdr Andy Evans RN</firstname>
                      <lineage>Maritime Warfare Centre</lineage>
                      <street>PO Box 325</street>
                      <city>Cosham</city>
                      <state>HANTS</state>
                      <postcode>  PO6 3SX</postcode>
                      <country>United Kingdom</country>
                      <email>smtac.oa@mwc.rn.mod.uk</email>
                    </address>
                  </para> </entry> 
</row> 
<row> 
<entry> 
<para>
                    <inlinegraphic fileref="figures/planet.gif"/>
                  </para> </entry> 
<entry id="project_manager"> 
<para>Debrief project manager.
                    <address>
                      <firstname>Mr Ian Mayo</firstname>
                      <lineage>PlanetMayo Ltd</lineage>


                      <street>PO Box 325</street>
                      <city>Cosham</city>
                      <state>HANTS</state>
                      <postcode>  PO6 3SX</postcode>
                      <country>United Kingdom</country>
                      <email>info@planetmayo.co.uk</email>
                    </address>
                  </para> </entry> 
</row> 
<row id="csds"> 
<entry> 
<para>
                    <inlinegraphic fileref="figures/csds12.gif"/>
                  </para> </entry> 
<entry> 
<para>COMSUBDEVRON 12
                    <address>
                      <firstname>Mr James Smith</firstname>
                      <street>Submarine Development Squadron Twelve</street>
                      <city>Naval Submarine Base New London</city>
                      <state>Groton, CT</state>
                      <postcode>  06349-5200</postcode>
                      <country>USA</country>
                    </address>
                  </para> </entry> 
</row> 
<row id="nuwc_address"> 
<entry> 
<para>
                    <inlinegraphic fileref="figures/nuwc.gif"/>
                  </para> </entry> 
<entry> 
<para>Naval Undersea Warfare Center (NUWC)
                    <address>
                      <firstname>Roger Howlett </firstname>
                      <lineage>Code 2212 Combat Systems</lineage>
                      <street>ICE Development Team</street>
Naval Undersea Warfare Center (NUWC)
                      <city>1176 Howell St</city>
                      <state>Bldg 1171 CSTL Laboratory</state>
                      <postcode>Newport, Rhode Island</postcode>
                      <country>USA</country>
                      <email>HowletRW@npt.nuwc.navy.mil</email>
                    </address>
                  </para> </entry> 
</row> 
<row id="poseidon"> 
<entry> 
<para>
                    <inlinegraphic fileref="figures/pos_logo.gif"/>
                  </para> </entry> 
<entry> 
<para>
                    <address>
                      <firstname>Erlend Helmersen</firstname>
                      <lineage>Poseidon Simulation AS</lineage>
                      <street>Lufthavnveien 11</street>
                      <city>P.O.Box 89</city>
                      <state>N-8376 Leknes</state>
                      <postcode></postcode>
                      <country>Norway</country>
                      <email>eh@poseidon.no</email>
                    </address>
                  </para> </entry> 
</row> 
<row id="comsubpac"> 
<entry> 
<para>
                    <inlinegraphic fileref="figures/CSP_LOGO_SM.gif"/>
                  </para> </entry> 
<entry> 
<para>
                    <address>
                      <firstname>Joe Sileo</firstname>
                      <lineage>COMSUBPAC Tactical Analysis Group (N7231)</lineage>
                      <street>Commander Submarine Force, U.S. Pacific Fleet</street>
                      <city>1430 Morton St, Bldg 619</city>
                      <state>Pearl Harbor</state>
                      <postcode>HI 96860-4664</postcode>
                    </address>
                  </para> </entry> 
</row> 
<row id="COMSEVENTHFLT"> 
<entry> 
<para></para> </entry> 
<entry> 
<para>
                    <address>
                      <firstname>Jay Spry</firstname>
                      <lineage>COMSEVENTHFLT/COMSUBGRU 7 </lineage>
                    </address>
                  </para> </entry> 
</row> 
</tbody> 
</tgroup> 
</table> </para> 
<para>
	If your organisation or company uses
        <application>Debrief</application> and wishes to be included as an acknowledged user please forward your details to the Debrief
        <link linkend="project_manager">Project Manager</link> as recorded above.
      </para> 
</sect1> 
<sect1 id="conventions"> 
<title>Document conventions</title> 
<para>This document uses the following conventions

        <table frame="none">
          <title>Document conventions</title>
          <tgroup cols="2">
            <colspec colname="col01" colnum="1" colwidth="1.00*"/>
            <colspec colname="col1" colnum="2" colwidth="3.0*"/>
            <thead>
              <row>
                <entry>Descriptions</entry>
                <entry>Appearance</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Warnings</entry>
                <entry>
                  <caution>
                    <para>Warnings.</para> 
</caution> </entry> 
</row> 
<row> 
<entry>Hint</entry> 
<entry> 
<tip> 
<para>Hint.</para> 
</tip> </entry> 
</row> 
<row> 
<entry>Notes</entry> 
<entry> 
<note> 
<para>Note.</para> 
</note> </entry> 
</row> 
<row> 
<entry>Information requiring special attention</entry> 
<entry> 
<warning> 
<para>Warning.</para> 
</warning> </entry> 
</row> 
<row> 
<entry>File Names</entry> 
<entry> <filename>file.extension</filename> </entry> 
</row> 
<row> 
<entry>Label of a screen item</entry> 
<entry> <guilabel>View Toolbar</guilabel> </entry> 
</row> 
<row> 
<entry>On-screen button</entry> 
<entry> <guibutton>Auto Generate</guibutton> </entry> 
</row> 
<row> 
<entry>Name of an applications</entry> 
<entry> <application>Internet Explorer</application> </entry> 
</row> 
<row> 
<entry>Emphasized text</entry> 
<entry> <emphasis>word</emphasis> </entry> 
</row> 
<row> 
<entry>An entry in the glossary (click to view)</entry> 
<entry> 
<glossterm linkend="g_plt">Plot</glossterm> </entry> 
</row> 
<row> 
<entry>Code Example</entry> 
<entry> 
<programlisting>
                    <sgmltag class="starttag">para</sgmltag>Beginning and end of paragraph
                    <sgmltag class="endtag">para</sgmltag>
                  </programlisting>

</entry> 
</row> 
</tbody> 
</tgroup> 
</table> </para> 
</sect1> 
</preface>

  <!-- ********************************************************************* -->
<!-- ********************************************************************** -->
<!--   Tutorial                                                            -->
<!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<part id="tutorial"> 
<title>Tutorial</title> 
<partintro> 
<para>This tutorial will lead you through
        <application>Debrief</application> right from the installation through to more advanced topics such as creating custom sets of layers for annotation fresh plots.
      </para> 
</partintro> 
<chapter id="get_start"> 
<title>Getting started</title> 
<sect1 id="pre_install_debrief"> 
<title>Before installing Debrief</title> 
<sect2> 
<title>Preparing your system</title> 
<para>
            <application>Debrief</application> and it&apos;s installer
            <indexterm>
              <primary>Installing Debrief</primary>
            </indexterm> are built using a software library named
            <application>Java</application>.
            <application>Java</application> is a product of
            <ulink url="http://java.sun.com">Sun Microsystems Limited</ulink>. Most version of Microsoft Windows ship with a version of
            <application>Java</application> sufficient to install the Debrief software, and once installed, the
            <application>Debrief</application> installation itself includes a copy of
            <application>Java</application>. For other operating systems, the newest version of
            <application>Java</application> for your operating system may be downloaded from the
            <application>Java</application>
            <ulink url="http://java.sun.com/j2se/1.4">download page</ulink>.
          </para> 
<para>
            <inlinegraphic fileref="figures/java.gif"/>
          </para> 
</sect2> 
<sect2> 
<title>Obtaining Debrief</title> 
<para>A number of project
            <indexterm>
              <primary>Debrief</primary>
              <secondary>Obtaining Debrief</secondary>
            </indexterm>support activities (news, feature-requests, bug-reports) for
            <application>Debrief</application> are conducted online, at a web-site known as
            <application>SourceForge</application>.
            <application>SourceForge</application> is also used to store the newest versions of Debrief, ready for download.
          </para> 
<para>The home page for
            <application>Debrief</application> on
            <application>SourceForge</application> is at:
            <ulink url="http://sourceforge.net/projects/debrief">http://sourceforge.net/projects/debrief</ulink>. From this home you can read the latest news on Debrief, request new features, report bugs, and download the most recent version.  To obtain the latest version, examine the table titled "Latest File Releases", and click on the
            <guilabel>Download</guilabel> link next to
            <guilabel>Debrief-Installation-Set</guilabel>. Then click on
            <guilabel>install.exe</guilabel> for a windows version of Debrief, or
            <guilabel>install.bin</guilabel> for a unix version.

          </para> 
<tip> 
<para>If you already have
              <application>Debrief</application> installed, but just want to install an update, look at the files listed in the
              <guilabel>Debrief-Updates</guilabel> section of the
              <guilabel>Latest File Releases</guilabel>. For each new release of Debrief, the significant files are located individually in the
              <guilabel>Latest File Releases</guilabel>.  If you do not wish to download the full Debrief installation, just download these individual files and replace your existing copies with these.  It is important to download and use all of the files provided to ensure compatibility.
            </para> 
</tip> 
<note> 
<para>Debrief is also available in source and binary distributions from the SourceForge web-site, in the Debrief-Developer package.  These distributions are suited to the software developer wishing to learn more about the structure of Debrief or wishing to extend its functionality.  Once either of these distributions are downloaded, unzip them and examine the
              <filename>readme.txt</filename> file in the top level directory.
            </para> 
</note> 
</sect2> 
<sect2> 
<title>Debrief on CD-Rom</title> 
<note> 
<para>If you are unable to download Debrief from the Internet, please contact the
              <link linkend="project_manager">Project Manager</link>, and a copy of Debrief on CD-ROM will be forwarded to you.
            </para> 
</note> 
</sect2> 
<sect2> 
<title>Running installation</title> 
<warning> 
<para>If you already have
              <application>Debrief</application> 2000, 2001 or 2002 installed on your machine you should attempt to remove it using the
              <guibutton>Add/Remove Programs</guibutton> button from the
              <guibutton>Settings</guibutton> button on the
              <application>Windows</application>
              <guibutton>Start</guibutton> menu.
            </para> 
</warning> 
<para>Once you have installed Java, and downloaded your
	    installation set you can continue to install the
	    application.  Double-click on
            <filename>install.exe</filename> and follow the steps
	    provided.  You are first met with the welcome screen:
            <figure float="0">
              <title>Welcome view of the installer</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/install1.gif"/>
                  </imageobject>
                  <textobject>
                    <phrase>Welcome view of the installer</phrase>
                  </textobject>
                </mediaobject>
              </screenshot>
            </figure> Click on the
            <guibutton>Next</guibutton> button to move forward through
	    the screens.  The first choice you are offered is the
	    destination of the
            <application>Debrief</application>
	    files.  Unless you have any strong objection this default
	    destination is normally acceptable.
            <figure float="0">
              <title>Select Debrief location</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/install2.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure> Next you will see the
            <guilabel>Pre-Installation Summary</guilabel> dialog
	    which will allow you step backwards to review installation settings prior to conducting the insatll.<figure float="0">
              <title>Pre-installation summary</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/install3.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>After this you will see Debrief being installed onto your machine</para> 
<para><figure float="0">
              <title>Debrief installation progress</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/install4.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Finally you will be greeted with the
            <guilabel>Installation Complete</guilabel> dialog
	    informing you that everything went ok.

          </para> 
<para>
            <figure float="0">
              <title>Debrief installation complete</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/install5.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>It&apos;s now time to start
            <application>Debrief</application>
          </para> 
</sect2> 
</sect1> 
<sect1 id="start_up"> 
<title>Start Debrief</title> 
<sect2 id="opening_application"> 
<title>Opening Application</title> 
<para>Open the application using the shortcut placed in the
	   Programs section of your Start menu. The application may
	   take a couple of seconds to load, but don&apos;t worry about the
	   speed; once the windows are open the application runs quite
	     quickly. If you are viewing this tutorial online, arrange this window and the
            <application>Debrief</application> window so
	   that both are visible (although you may need to let them
	   overlap if you have limited screen space).
          </para> 
<figure float="0"> 
<title>Debrief&apos;s initial view</title> 
<screenshot> 
<mediaobject> 
<imageobject> <imagedata fileref="figures/apptoolbar.gif"/> 
</imageobject> 
</mediaobject> 
</screenshot> 
</figure> 
<para>The title-bar of the window you see indicates the
	    build-date of the version you are using.  The menus you
	    see are similar to those you would see in any desktop
	    application, if a little more sparse (the
            <guilabel>New (default plot)</guilabel> command, used to load a default plot, is discussed further below).  The toolbar shown
	    has 4 buttons on it, to provide the following:


            <variablelist>
              <varlistentry>
                <term>New Plot</term>
                <listitem>
                  <para>To create a new,
		    blank
		    plot</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Open Plot</term> 
<listitem> 
<para>To re-open an
		    existing
		    plot</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Close Plot</term> 
<listitem> 
<para>To close the
		    current
		    plot</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Exit</term> 
<listitem> 
<para>To exit
                    <application>Debrief</application>
                  </para> 
</listitem> 
</varlistentry> 
</variablelist> Now click on <guilabel>New Plot</guilabel> ( <guiicon>
              <inlinegraphic fileref="figures/NewSession.gif"/>
            </guiicon>) to create a new session, which will be introduced in the
next section. </para> 
<note> 
<formalpara> 
<title>Loading default plot</title> 
<para>
                <indexterm>
                  <primary>Default Plot</primary>
                </indexterm>In addition to instructing
                <application>Debrief</application> to provide you with a new, blank, plot, you can request a plot containing a default plot suited to your current analysis.  To do this, customize an existing plot file by removing sufficient items to just leave the default, generic items you want to keep.  Perform this customisation as described below under
                <link linkend="how_to_create_default_layers">VPF Management</link> - noting that
                <emphasis>you must retain the &lt;plot&gt; and &lt;session&gt; objects</emphasis>.  Whilst for VPF management you strip out the high-level elements; only wanting to keep the &lt;layers&gt; object, whereas when defining the default set of layers to load you should keep the high-level elements (since these may contain the settings of interest to you). Store your default plot (with the
                <filename>default_plot.xml</filename> filename) in your Debrief installation directory (normally
                <filename>c:/program files/Debrief 2003</filename>)
              </para> 
</formalpara> 
</note> 
</sect2> 
<sect2 id="new_session"> 
<title>New Session</title> 
<para>The
            <glossterm linkend="g_session">Session</glossterm> window is broken down into three areas.  The
	   black-painted right-hand of the screen is named the
            <glossterm linkend="g_plt">Plot</glossterm>,
	   the left-hand side is split into two areas: at the top is a
	     set of toolbars used to control
            <application>Debrief</application>, whilst at the
	   bottom is an area used to display a number of different
            <glossterm linkend="g_property_window">property windows</glossterm> - the
            <glossterm linkend="g_tote">Tote</glossterm> is the window currently displayed - itself containing the
            <glossterm linkend="g_overview">Overview </glossterm>
          </para> 
<figure float="0"> 
<title>Debrief Screen</title> 
<screenshot> 
<mediaobject> 
<imageobject> <imagedata fileref="figures/LabelledScreen.gif"/> 
</imageobject> 
</mediaobject> 
</screenshot> 
</figure> 
<para>Note
            <indexterm>
              <primary>Screen</primary>
              <secondary>Initial View</secondary>
            </indexterm>that the toolbars are on separate tabs, grouped as
	   follows:
          </para> 
<variablelist> 
<varlistentry> 
<term>File</term> 
<listitem> 
<para>Commands related to loading/saving data, and
		   performing operations which result in file
		   output</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>View</term> 
<listitem> 
<para>Commands which change/refresh the current
		   view, but which do not make any changes to the data
		   itself</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Chart Features</term> 
<listitem> 
<para>Commands which add chart-related features to
		   the
                  <glossterm linkend="g_plt">plot</glossterm>, features which are not tactical or
		   exercise-generated data, but which provide a
                  &quot;backdrop&quot; to this
		   data
                </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Drawing</term> 
<listitem> 
<para>Commands which add new tactical or
		   exercise-related features to the
                  <glossterm linkend="g_plt">plot</glossterm>.
                </para> 
</listitem> 
</varlistentry> 
</variablelist> 
</sect2> 
</sect1> 
<sect1 id="import_range_data"> 
<title>Importing Track Data</title> 
<sect2> 
<title>Introduction to Replay files</title> 
<para>Debrief reads text files using a format named the
            <indexterm significance="preferred">
              <primary>Replay </primary>
              <secondary>Introduction</secondary>
            </indexterm>Replay file format (
            <glossterm linkend="g_replay">Replay</glossterm> was an application used in
            <application>Debrief</application>-style tasks in Royal Navy analysis in past years).
          </para> 
<para>Replay files are ASCII-FILES containing vessel position data in a flat-file format similar to that below:</para> 
<example> 
<title>Sample Replay file contents</title> 
<programlisting>
 951212 050000.000 CARPET @C 12 11 10.63 N 11 41 52.37 W 269.7 2.0 0
 951212 050100.000 CARPET @C 12 11 10.58 N 11 42 2.98 W 269.7 2.0 0
 ;NARRATIVE: 951212 095700.000 TOMATO SUSPECTED DETECTION OF RED
 951212 050200.000 CARPET @C 12 11 10.51 N 11 42 14.81 W 269.9 2.0 0
 951212 050300.000 CARPET @C 12 11 10.51 N 11 42 27.27 W 268.7 2.0 0
 951212 050400.000 CARPET @C 12 11 10.28 N 11 42 40.33 W 270.6 2.0 0
            </programlisting>

</example> 
<note> 
<para>Since Autumn 2004 mult-word track names can now be read in if they are
              <link linkend="quoted_track_names">surrounded by quotation marks</link>.
            </para> 
</note> 
<para>
 This data has a single vessel location per-line, with white-space separated columns containing this data:
          </para> 
<itemizedlist spacing="compact"> 
<listitem> 
<para>Date (year, month, day)</para> 
</listitem> 
<listitem> 
<para>Time (hours, minutes, seconds, decimal seconds))</para> 
</listitem> 
<listitem> 
<para>Vessel Name (single-word))</para> 
</listitem> 
<listitem> 
<para>Formatting to apply (see the
                <link linkend="maintainers_guide">maintainer documentation</link> for details of
	   this, but experiment with the second character to change the default
	   colour of the
                <glossterm linkend="g_track">track</glossterm>).)
              </para> 
</listitem> 
<listitem> 
<para>Latitude (deg, min, sec, hemisphere))</para> 
</listitem> 
<listitem> 
<para>Longitude (deg, min, sec, hemisphere))</para> 
</listitem> 
<listitem> 
<para>Course (degrees))</para> 
</listitem> 
<listitem> 
<para>Speed (knots))</para> 
</listitem> 
<listitem> 
<para>Depth (m))</para> 
</listitem> 
</itemizedlist> 
<para>Note the third line, which contains a
            <glossterm linkend="g_narrative">narrative</glossterm> entry.  This entry represents one of a group of types of data called
            <glossterm linkend="g_annotation">Annotation</glossterm> Entries.  These entries allow inclusion of data other than vessel locations, and can be interspersed with positional data throughout the file.
          </para> 
<para>Multiple vessel tracks can be contained sequentially in a single Replay file.</para> 
<para>For more detail regarding this file format, including how to represent annotations which are only visible for a defined time period, together with lines, ellipses and rectangles, examine the
            <link linkend="maintainers_guide">maintainers</link> section of the this document.
          </para> 
</sect2> 
<sect2> 
<title>Import</title> 
<para>
	     You must now
            <indexterm>
              <primary>Data</primary>
              <secondary>Inserting Data</secondary>
            </indexterm>import some data into
            <application>Debrief</application>, so click on the Import Data button (it&apos;s on the
            <guilabel>File</guilabel> toolbar), which looks like this:
            <guiicon>
              <inlinegraphic fileref="figures/ImportReplay.gif"/>
            </guiicon>
          </para> 
</sect2> 
<sect2> 
<title>File Open</title> 
<para>
	     A file-open dialog will now open, containing a filter to only show Replay files. Navigate to the demonstration files (
            <filename>boat1.rep</filename> &amp;
            <filename>boat2.rep</filename>) which should be stored in the installation directory (which on
            <application>Windows</application> is normally in
            <filename>C:\Program Files\Debrief 2003</filename>).
          </para> 
<para>
	    The
            <guilabel>File-Open</guilabel> dialog is more complex than others you may be familiar with.  The left-hand side works as expected, showing the list of files and directories in the current directory.  Change directory using the drop-down list at the top of the dialog.  When you single-click on a
            <filename>REP</filename> or
            <filename>XML</filename> file (the file types accepted by
            <application>Debrief</application>), the contents of the file appear in the
            <guilabel>Navigation</guilabel> window on the right-hand side.  The drop-down list at the top of the
            <guilabel>Navigation</guilabel> window (labelled
            <guilabel>C:\D3</guilabel> in this example) provides a list of the directories most recently accessed by
            <application>Debrief</application>.
          </para> 
<para>
	   Behind the
            <guilabel>Navigation</guilabel> window is the
            <guilabel>Find Files</guilabel> window.  This collection of forms allow you to search for files by name, date or contents.
            <figure float="0">
              <title>File open dialog</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/FileOpen.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
</sect2> 
<sect2 id="load_initial_data"> 
<title id="load_initial_data.title">Select files</title> 
<para>
	     Back to the tutorial, navigate to the directory where
            <application>Debrief</application> was installed, then select both
            <filename>BOAT1.REP</filename> and
            <filename>BOAT2.REP</filename> files using the
            <keycap>Control</keycap> key, then press
            <guibutton>Open</guibutton>.
          </para> 
<para>
	     A progress bar will flash up to illustrate the import process.  On completion the screen will still show as blank - since Debrief does not change the area being viewed after loading new data.  Change to the View toolbar and click the
            <link linkend="Fit_To_Win">Fit-To-Window</link> button (second along),  and  the track data will appear in the plot area on the right-hand side of the screen.
          </para> 
<para>
	    You will see that the Red track, named CARPET is plotted in several different colours.  This is an illustration of per-position colouring for tracks.  The colours can be specified inside the REP file, as we see here, or can be specified within Debrief using the Track/Time toolbox,
            <xref linkend="reformat_positions"/> under
            <link linkend="reformat_positions" endterm="reformat_positions.title"></link>

            <figure float="0">
              <title>Debrief immediately after opening file</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/FileJustOpened.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
</sect2> 
<sect2> 
<title>Default labels</title> 
<para>When data is imported,
            <application>Debrief</application> applies default values to the time labels for positions. The first point in a
            <glossterm linkend="g_track">track</glossterm>, together with the first point every day includes the day, otherwise just hours and minutes are displayed.
          </para> 
<para>
 Of course though, you haven&apos;t learnt how to show the labels, so that&apos;s still to follow - but remember, when you switch on the labels for a
            <glossterm linkend="g_track">track</glossterm>, it was at the import stage that the default labels were set.
          </para> 
</sect2> 
</sect1> 
<sect1 id="moving_around"> 
<title>Moving around the view</title> 
<sect2> 
<title>Introduction</title> 
<para>Once data is loaded into
            <application>Debrief</application>, there are a number of ways of controlling the view of the track data by use of the buttons on the View toolbar.
            <figure float="0">
              <title>View toolbar</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/PaletteButtons3.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<tip> 
<para>For most of Debrief's operations (such as adding drawing features) it needs to have an area to look at.  When re-opening an existing plot file, or importing data, Debrief can determine the area covered by the plot.  However, when starting a new, blank session, Debrief does not know what area to cover.  In this circumstance Debrief sets the origin to its own origin, at Fort Blockhouse, HMS Dolphin, Portsmouth, United Kingdom - the plot will be centered approximately on 50 degrees 49 minutes North, 1 degree 19 minutes West.</para> 
</tip> 
</sect2> 
<sect2 id="toggle_buttons"> 
<title id="toggle_buttons.title">Mouse mode buttons</title> 
<para>
 The first three modes of use are selectable individually, only one may be selected at a time.  When one is clicked, it remains depressed, popping up the button  previously in use.
            <variablelist>
              <varlistentry>
                <term>
                  <guiicon>
                    <inlinegraphic fileref="figures/Pan.gif" align="center"/>
                  </guiicon>Pan
                </term>
                <listitem>
                  <para>The Pan control lets you move your current viewpoint. Click on the Pan button, and then drag the mouse around the
                    <glossterm linkend="g_plt">plot</glossterm> -- you will see the view change as you do it.
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>
                  <guiicon>
                    <inlinegraphic fileref="figures/RngBrg.gif" align="center"/>
                  </guiicon>Range Bearing
                </term> 
<listitem> 
<para>Whilst the Range and Bearing control does not allow you to move around the view, it does merit discussion at this point, since it is the third in this group of selectable mouse modes. Select the Range and Bearing control, then drag the mouse to measure the range and bearing between two points - you will see the calculated results displayed at the foot of the
                    <glossterm linkend="g_tote">Tote</glossterm> panel, as shown below.  The default units are yards, but if you wish to change them double-click on the calculated range results: the units editor will open, allowing you to change the default units (your selection is saved in the
                    <link linkend="debrief_props" endterm="debrief_props_title"/> section of the Maintainer&apos;s Guide).
                  </para> 
<para>
                    <guiicon>
                      <inlinegraphic fileref="figures/RngDisplay.gif" align="center"/>
                    </guiicon>
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term id="zoom_in.title">
                  <guiicon>
                    <inlinegraphic fileref="figures/ZoomIn.gif" align="center"/>
                  </guiicon>Zoom in
                </term> 
<listitem> 
<para>You are in the Zoom In mode by default. So, click and drag  the mouse across the area where the two
                    <glossterm linkend="g_track">track</glossterm>s are located near the centre of the
                    <glossterm linkend="g_plt">plot</glossterm>. When you release the mouse button you will see a zoomed in view of the data.
                  </para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
<tip id="middle_controls"> 
<para>In addition to the mouse mode buttons described above, the middle mouse button may be used to navigate irrespective of the current mouse mode.  Hold the middle mouse button down and drag the cursor to pan around the plot, or hold down the
              <guibutton>CTRL</guibutton> key and roll your mouse backwards and forwards to zoom in and out of the plot
            </para> 
</tip> 
</sect2> 
<sect2> 
<title>Click buttons</title> 
<para>
The next set of buttons do not rely on mouse activity over the plot, they just require mouse clicks
            <variablelist>
              <varlistentry>
                <term>
                  <guiicon>
                    <inlinegraphic fileref="figures/ZoomOut.gif" align="center"/>
                  </guiicon>Zoom out
                </term>
                <listitem>
                  <para>If you now click on the Zoom out button, you will "zoom out" of the
                    <glossterm linkend="g_plt">plot</glossterm> (surprise, surprise). This button works well in conjunction with the Zoom in button, since this does not take the mouse out of "zoom in" mode -- therefore you can zoom in on areas, click zoom out a couple of times, then zoom in again, all with the minimum of mouse clicks.  The wheel-mouse may also be used to zoom out as described above in
                    <link endterm="zoom_in.title" linkend="zoom_in.title"></link>
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry id="Fit_To_Win"> 
<term>
                  <guiicon>
                    <inlinegraphic fileref="figures/FitToWin.gif"/>
                  </guiicon>Fit to Window
                </term> 
<listitem> 
<para>Whilst the meaning of the icon on this button is not all that clear (it&apos;s meant to be a combination of zoom in, zoom out, and all of the pan/move buttons), it fits the view to display all of the currently visible data. Note that there may be data on the
                    <glossterm linkend="g_plt">plot</glossterm> which is not visible (hidden layers), the area covered by the hidden items of information is not included in the "Fit to window" operation.  Additionally this phenomenon relates to the data once you have pressed "Filter to time period" from the
                    <link linkend="track_toolbox">Track &amp; Time toolbox</link> - the
                    <glossterm linkend="g_plt">plot</glossterm> is resized to fit the data contained in the indicated time period (yes, you&apos;ll learn about this later).
                  </para> 
<para>

                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>
                  <guiicon>
                    <inlinegraphic fileref="figures/repaint.gif"/>
                  </guiicon>Refresh View
                </term> 
<listitem> 
<para>This button refreshes the current view. Refreshing is occasionally required when switching between display modes</para> 
</listitem> 
</varlistentry> 
</variablelist> Select the Fit to Window button now to make sure all
of the data is visible. </para> 
</sect2> 
<sect2> 
<title>Others</title> 
<para>
Lastly we have the overview button:
            <variablelist>
              <varlistentry>
                <term>
                  <guiicon>
                    <inlinegraphic fileref="figures/overview.gif" align="center"/>
                  </guiicon>Overview
                </term>
                <listitem>
                  <para>This button controls whether the overview button is currently visible.  Click once to show the overview (in which case the button will remain depressed), and click again to hide the overview (when the button will return to its "up" state). When you have a very complex plot showing the overview chart can slow down
                    <application>Debrief </application>, particularly when you are showing
                    <link linkend="etopo_gridded_bathy">ETOPO</link> data.
                  </para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
</sect2> 
<sect2 id="overview_window"> 
<title>Overview chart</title> 
<para>Why not have play with the overview chart
            <indexterm>
              <primary>Overview Chart</primary>
            </indexterm> at this point?  Click on the overview button, and the overview chart will be shown in the Tote.  Note the shaded grey rectangle over the view.  This shows the portion of the data currently shown on the main plot.  This shaded rectangle is automatically updated when the view in the main plot is changed, and the overview itself is automatically updated when any formatting changes in the main plot.
            <figure float="0">
              <title>Overview chart in use</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/OverviewInUse.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Now drag the mouse to select an area within the overview chart, and observe that both the shaded rectangle shrinks and the data visible in the main plot changes.
            <figure float="0">
              <title>Overview chart after zoom operation</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/OverviewZoomedIn.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Now try double-clicking on a point of interest in the overview, the main plot will recenter on this point.  Lastly try using the tools on the View toolbar to move around the main plot, and observe that the shaded area in the overview chart updates accordingly.</para> 
</sect2> 
<sect2> 
<title>Floating toolbars</title> 
<para>This seems a good point to introduce the floating toolbars.  You see the dotted rectangle at the left-hand end of the
            <guilabel>Shapes</guilabel> toolbar?  Click on it with the mouse and drag it away from
            <application>Debrief</application> - the toolbar will now float above
            <application>Debrief</application>.  Once floating, the toolbar can be moved or resized,  and closed by clicking on it&apos;s
            <guibutton>Close</guibutton> icon.
          </para> 
<para>Where-ever you see this dotted texture along the left-hand side of a
            <application>Debrief</application> panel, remember it can be dragged out.  In some of the larger panels, such as properties windows, you have to "grab" the dotted area right at the top, but be assured it becomes second nature with practice.
          </para> 
</sect2> 
<sect2> 
<title>Undo</title> 
<para>Briefly experiment with moving around inside the
            <glossterm linkend="g_plt">plot</glossterm>, zooming in and out of the view.  Also experiment with the Undo operation on the Edit toolbar.  This will return you to the previous state.
          </para> 
<para>
            <application>Debrief</application> contains a never-ending list of operations which are undo-able.  The list is only cleared when you close the current session.
          </para> 
</sect2> 
<sect2> 
<title>Formatting the plot</title> 
<para>The background color for the Debrief plot can be
            <indexterm>
              <primary>Formatting</primary>
              <secondary>Plot (background color)</secondary>
            </indexterm>changed to suit different projection/printing mediums, or to suit the analysts personal choice.  Additionally, the width at which lines of tactical obects are drawn can also be changed.  Either of these options are accessed by right-clicking on the plot background and selecting
            <guilabel>Edit Appearance</guilabel>.  A properties panel will appear, use the drop-down list to change the background colour, or move the slider to change the line width itself.
          </para> 
</sect2> 
</sect1>
      <!-- formatting track data -->
</chapter> 
<chapter id="formatting_data"> 
<title>Formatting Track Data</title> 
<para>Before you are able to analyse or export plots from your data you need to know how to format
        <indexterm>
          <primary>Formatting</primary>
          <secondary>Track data</secondary>
        </indexterm> what you see to improve its legibility, as covered in this part of the tutorial.
      </para> 
<sect1 id="editing_track"> 
<title>Editing a track</title> 
<sect2> 
<title>Right-click editing</title> 
<para>A number of entities in
            <application>Debrief</application> allow right-click editing using the mouse. For example, if you right-click over the Red
            <glossterm linkend="g_track">track</glossterm> in the
            <glossterm linkend="g_plt">plot</glossterm>, a popup menu will appear:
            <figure float="0">
              <title>Menu shown after right-clicking on the
                <glossterm linkend="g_plt">plot</glossterm>
              </title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/PopupMenu.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>
 The first item in this menu allows you to edit the individual vessel position (in this case the position at 0533z). The second menu item contains an expanding list of items. These items are "commands" which may be applied to the selected position item (although when you open the menu more items may appear):
            <figure float="0">
              <title>Right-click menu commands</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/EditPositionMenu.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>

          </para> 
</sect2> 
<sect2> 
<title>On-off Settings</title> 
<para>The items in this first part of this drop-down list are on/off settings for characteristics of this position item; in this case settings which specify whether the label or symbol are plotted.  Selecting one of these items "toggles" that setting.</para> 
<para>Following these on/off toggles may be a number of characteristics for which the value can be selected from a list (such as the colour of the point, the location of the text label in relation to the data point, the size of any symbol to plot at this point, and the format of the text for the label at this point).</para> 
<para>The items in the last part of the menu are actual "commands". The three commands displayed reset the colour of the position to that of the whole
            <glossterm linkend="g_track">track</glossterm>, reset the label used for the item to its DTG, and export the details of the position in Replay format to the clipboard.
          </para> 
<para>Experiment with changing the value of "Symbol Showing" from this menu, you will see the symbol for the current point appear and disappear accordingly, you can also experiment with changing the colour of the symbol.</para> 
</sect2> 
</sect1> 
<sect1 id="property_editing"> 
<title>Property editing</title> 
<sect2> 
<title>Edit track</title> 
<para>If you once again right-click on the red
            <glossterm linkend="g_track">track</glossterm>, and select the third item: "Edit Track CARPET", a properties window will open in the
            <glossterm linkend="g_tote">Tote</glossterm> which allows you to change individual characteristics of this
            <glossterm linkend="g_track">track</glossterm>

            <figure float="0">
              <title>Formatting a track</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/FormatTrack.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>At the top of the property window is a row of buttons which run actions on the Track. In this case there is just one button, the one to export the
            <glossterm linkend="g_track">track</glossterm> to the clipboard.
          </para> 
<para>Beneath the button is a list of editable properties for the
            <glossterm linkend="g_track">track</glossterm>, and at the bottom are three buttons to Close the properties panel, Apply the current changes, and Reset the properties to their original values.
          </para> 
<para>As the mouse is hovered over the names of these properties you will see tooltips appear giving more information about each property.</para> 
<para>The first editable property provided for tracks is not actually editable, it is an accessor to allow you to drag the track around the chart.  Click on the
            <guibutton>Drag</guibutton> button, then drag the track around the chart with the mouse.  Click the
            <guibutton>Drag</guibutton> button (whose label has now changed to
            <guibutton>Cancel</guibutton>) again to return to the previous mouse-drag mode (such as zoom-in). Please read the section below on track-shifting. The
            <guibutton>DTG</guibutton> toggle-button indicates whether DTG information should be plotted on the track being dragged.
          </para> 
</sect2> 
<sect2> 
<title>Track Shifting</title> 
<para>
            <emphasis>Track-Shifting.</emphasis>The track-shifting
            <indexterm>
              <primary>Track Shifting</primary>
            </indexterm>
            <indexterm>
              <primary>Reconstruction</primary>
              <secondary>Track Shifting</secondary>
            </indexterm>function has been incorporated to allow users to move a track and its associated sensor data.  The principle requirement for this functionality is to enable the user to move the track to a specific geographic reference point (i.e. GPS fix) or to lock the relative position of one track to another using sensor data.  This positioning relative to another track is sometimes termed plot-lock
            <indexterm>
              <primary>Reconstruction</primary>
              <secondary>Plot-lock</secondary>
            </indexterm> or tie-point
            <indexterm>
              <primary>Reconstruction</primary>
              <secondary>Tie-point</secondary>
            </indexterm>.
          </para> 
<para>
            <note id="track_shifting">
              <para>The Track-shifting implementation was originally provided by Mr David Gong at
                <link linkend="nuwc_address">NUWC</link>.
              </para> 
</note> </para> 
<para>A
            <link linkend="show_time_vars">time-variable plot</link> is used to show bearing-errors when the track-shift is being conducted to line up one or two sets of
            <link linkend="sensor_data">sensor data</link>. For each
            <link linkend="g_sensor_contact">sensor bearing</link> on a track,
            <application>Debrief</application> identifies the point on the opposing track nearest to that time.  Each time the track is shifted (dragged)
            <application>Debrief</application> calculates the error between the sensor bearing and the current measured bearing, showing these in a plot (bearing error against time).
          </para> 
<para>
            <application>Debrief</application> displays a symbol for each visible sensor data, with the symbol being plotted the same colour as the sensor data.  When track-shifting a long exercise serial, the time-variable plot may become difficult to use due to the y-axis always auto-scaling to accomodate all available data.  Overcome this by using Debrief to
            <link linkend="filter_to_period">filter-to-time-period</link> (from the
            <link linkend="track_toolbox">track time toolbox</link>) for the plot-lock period, thus viewing a much smaller data-set in the time-variable plot.   Additionally, you can zoom in on a particular area (by dragging an area downward and to the right) of the time-variable plot for detailed analysis, dragging the mouse up and to the left to clear the zoom.
          </para> 
<figure float="0"> 
<title>Bearing error plot</title> 
<screenshot> 
<mediaobject> 
<imageobject> <imagedata fileref="figures/brg_error.gif"/> 
</imageobject> 
</mediaobject> 
</screenshot> 
</figure> 
<warning> 
<para>Note that in order to see the new location of the dragged track, the offset is permanently applied as soon as the track is dropped. The operation does not wait for the
              <guibutton>Apply </guibutton>button to be pressed, nor is it cancelled when the
              <guibutton>Cancel</guibutton> button is pressed.  This is contrary to the normal edit-process, where any changes made may still be Cancelled prior to closing the property editor.
            </para> 
</warning> 
<tip> 
<para>To prevent repeatedly switching between
              <link linkend="toggle_buttons">mouse-drag modes</link> whilst track-shifting is performed by dragging the mouse, it is easier to used the mouse
              <link linkend="middle_controls">middle-button controls</link> to change view whilst dragging.
            </para> 
</tip> 
</sect2> 
<sect2> 
<title>Set colour</title> 
<para>For the colour of the
            <glossterm linkend="g_track">track</glossterm>,  a drop-down list of colours are provided. This list
consists of the colour set traditionally provided by
            <application>Debrief</application> (for backwards compatibility)
followed by a number of grey shades suited to grids, scales and the
background colour of the
            <glossterm linkend="g_plt">plot</glossterm>.  At the bottom of the list of colours is a
            <guilabel>Custom...</guilabel> entry.  Selecting this value opens up a colour selector dialog allowing a wide range of colours to be chosen using three different mechanisms.  Each of the mechanisms may be used to select a Debrief colour.
            <figure float="0">
              <title>Custom colour editor</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/ColorEditor.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
            <note>
              <para>Apologies in advance to the British users of
                <application>Debrief</application> for the American-spelling of colour.  The software environment within which
                <application>Debrief</application> is developed is American, and in this case superimposing the UK spelling upon it&apos;s not a battle worth fighting.
              </para> 
</note> </para> 
<para>Try changing the colour of the
            <glossterm linkend="g_track">track</glossterm> from red to green.
          </para> 
<para>Note that nothing happens to the
            <glossterm linkend="g_plt">plot</glossterm> at this point, but the colour in the property window has changed. Click the Apply button at the foot of the Properties window to apply the change, and the
            <glossterm linkend="g_plt">plot</glossterm> will update.
          </para> 
<para>Note that if you press Undo on the Edit menu, the track will switch back to red both on the
            <glossterm linkend="g_plt">plot</glossterm> and on the
            <glossterm linkend="g_property_window">property editor</glossterm>.  Now press Redo from the Edit menu and your updates will be re-applied.
          </para> 
</sect2> 
<sect2> 
<title>Set label and symbol display intervals</title> 
<para>Also experiment with setting the display interval of labels and symbols.  The symbols and labels for positions are switched on at a whole multiple of the indicated interval:  so if you select 5 minutes the positions at minutes 0, 5, 10, 15... are switched on, regardless of the Date-Time of the first point on the track.</para> 
</sect2> 
</sect1> 
<sect1 id="new_chart_features"> 
<title>Adding chart features</title> 
<sect2> 
<title>Chart features toolbar</title> 
<para>Debrief also allows you to add items to the
            <glossterm linkend="g_plt">plot</glossterm>.
          </para> 
<para>These items are contained in two toolbars;
            <guilabel>Chart Features</guilabel> and
            <guilabel>Drawing</guilabel>. In
            <application>Debrief</application>, hover the mouse over them to see what type of item they create.
            <figure float="0">
              <title>Chart features toolbar</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/PaletteButtons2.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<important> 
<para> It is important to note that each time you click on an item from the toolbar, a new instance of it is created, it does not re-open an existing item.</para> 
</important> 
<para>Back to the palette items, experiment with the buttons by putting new features on the
            <glossterm linkend="g_plt">plot</glossterm>.
          </para> 
</sect2> 
<sect2> 
<title>Scale</title> 
<para>The Scale button provides a scale, indicating
            <indexterm>
              <primary>Scale</primary>
            </indexterm> to the viewer the current area of coverage of the plot.  Once created the scale values can be set automatically or manually, as described below:
            <variablelist>
              <varlistentry>
                <term>Auto Mode</term>
                <listitem>
                  <para>In auto-mode Debrief assesses the current screen size and area of data covered, and attempts to set the most appropriate range of values and step size for the scale.  A good working practice is to switch to auto-mode to allow Debrief to estimate the optimal values, then switch out of auto-mode to fine-tune the
                    <guilabel>ScaleMax</guilabel> and
                    <guilabel>ScaleStep</guilabel> values provided.
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Color</term> 
<listitem> 
<para>The colour used to draw the scale.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Location</term> 
<listitem> 
<para>The corner of the plot where the scale is placed.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>ScaleMax</term> 
<listitem> 
<para>The maximum value of the scale (in yards)</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>ScaleStep</term> 
<listitem> 
<para>The size of the steps used to break up the scale (again in yards)</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Visible</term> 
<listitem> 
<para>You can clear the visibility flag to temporarily hide a scale, allowing you to switch between scales, for example.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Units</term> 
<listitem> 
<para>Use this list to select the units displayed in the scale</para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
<para>
            <figure float="0">
              <title>Sample scale</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/scale_demo.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
</sect2> 
<sect2> 
<title>Grid</title> 
<para>Next, try with a new grid:
            <guiicon>
              <inlinegraphic fileref="figures/GridBtn.gif"/>
            </guiicon>
          </para> 
<para>A properties
            <indexterm>
              <primary>Grid</primary>
              <secondary>Inserting Grid</secondary>
            </indexterm>panel will open, in this panel change the Delta (the space between the lines) to 5 (minutes), and make it visible. Now Apply. The grid will now appear on the
            <glossterm linkend="g_plt">plot</glossterm>.
            <figure float="0">
              <title>Properties for a grid</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/GridProps.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Note the option provided to allow you to select to
            <glossterm linkend="g_plt">plot</glossterm> labels on the grid lines.  Decimal seconds will be displayed when the delta requested is less than one second.
            <warning>
              <para>Two methods are used to produce grid lines:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis>Lat/Long Grid</emphasis>. Where geographic related delta units are selected (degrees, minutes), vertical and horizontal grid lines are calculated relative to the latitude of the plot (thus a 1 degree grid requested at 60 degrees North will have grid lines of   60nm separation in latitude, but with lines of longitude at 30nm separation).
                    </para> 
</listitem> 
<listitem> 
<para>
                      <emphasis>Square Grid</emphasis>. Where distance related delta units are selected (m, yd, km, nm, etc), the vertical and horizontal grid lines are constructed using the same delta distance (thus a selected delta of 1 kyd will have lines of 1 kyd separation in the horizontal and vertical).
                    </para> 
</listitem> 
</itemizedlist> </para> 
</warning> </para> 
</sect2> 
<sect2> 
<title>Local Grid</title> 
<para>The Local Grid (
            <guiicon>
              <inlinegraphic fileref="figures/local_grid.gif"/>
            </guiicon>) is a modified grid for which the origin has been over-ridden. Change the
            <guilabel>Origin</guilabel> attribute to move the grid origin.  The
            <guilabel>PlotOrigin</guilabel> attribute has been provided to draw a small point at the origin of the grid - useful when initially designing/recording the grid.
          </para> 
</sect2> 
<sect2> 
<title>Coastline</title> 
<para>The
            <application>Debrief</application> installation includes a
            <indexterm>
              <primary>Coastline Data</primary>
              <secondary>Introduction</secondary>
            </indexterm>low-resolution coastline datafile.  Whilst it does cover the whole globe, it does so at a low resolution, so is only useful for an overview.  The vectored chart data discussed later provides a much lower resolution of data.
          </para> 
<para>
Have a go at adding a
            <glossterm linkend="g_coastline_file">Coastline</glossterm>, although you may need to zoom out to see it (
            <application>Debrief</application> veterans will be please to see the tracks no longer appear over desert).  The screenshot shows the British coastline, which you can view by zooming out and panning upwards from the sample tracks.
            <figure float="0">
              <title>Sample of default coastline data.</title>
              <screenshot>
                <mediaobject>

                  <imageobject>
                    <imagedata fileref="figures/old_coastline.gif"/>
                  </imageobject>

                </mediaobject>
              </screenshot>
            </figure>
          </para> 
</sect2>
        <!--                             -->
<sect2> 
<title>Vectored data</title> 
<para>The addition of vectored chart data is covered later in this document, in
            <link linkend="view_vpf">Viewing VPF data</link> The image below provides a sample of the level of detail supplied.
            <figure float="0">
              <title>Sample of vectored coastline data.</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/VPF_Layer9.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
</sect2> 
<sect2 id="etopo_gridded_bathy"> 
<title>ETOPO gridded bathy</title> 
<para>  Whilst the VPF dataset
            <indexterm>
              <primary>ETOPO Data</primary>
            </indexterm>provides a contoured bathymetry within broad depth steps, the ETOPO dataset  provides a gridded bathymetry in 5' or 2' steps. The 5' dataset is downloadable with Debrief, but the 2' dataset (weighing in at 80Mb compressed) must be downloaded/purchased (in November 2002 the ETOPO2 dataset on CD-ROM cost around $80) separately.  When you ask Debrief to plot an ETOPO background, Debrief will try to load an ETOPO-2 dataset first, followed by an ETOPO-5 dataset  if that is unavailable.  The image below provides a sample of the level of detail supplied.
            <figure float="0">
              <title>Sample of ETOPO gridded bathymetry.</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/etopo_data.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>
            <note id="etopo_description">
              <para>The 'ETOPO-5' data set is originally from the U.S. National Geophysical Data Center (NGDC) in Boulder, Colorado (USA), and represents the "best" available digital terrain values as integrated from existing five and ten-minute digital sources. The data set has elevation values spaced at every five-minute latitude/longitude crossing on the global grid (approx. nine km.-sq. spatial resolution, or 12 x 12 pixels/degree), and a one-meter contour interval. Bathymetric values are included in this data set, starting at approximately 10,000 meters below sea level, while the elevation values extend up to heights of approximately 8,000 meters above sea level. Some original sources of the data used include the U. S. Defense Mapping Agency for the conterminous USA, Japan and Western Europe; the Australian Bureau of Mineral Resources, and the New Zealand Department of Scientific and Industrial Research.

              </para> 
<para>GRID has reformatted the original NGDC data file to place the origin at 180 degrees West longitude, instead of at 0 degrees Greenwich Meridian. The 'ETOPO-5' data file has 2160 records of data with a length of 8640 bytes each: the size of the data array is 2160 lines by 4320 elements, but this is a l6-bit or two bytes per element data file. The origin of the data file is at 90 degrees North latitude and 180 West longitude, and it extends to 90 degrees South latitude and 180 degrees East longitude. The data file comprises 18.66 Megabytes. The version of this data file at GRID has been discovered to contain two records (lines) of flawed data values; that is, portions of lines 2055 and 2056, beginning at the Weddell Sea north of Antarctica and continuing eastward. GRID is currently waiting for a response from the data supplier (NGDC) before attempting any replacement of what appear to be anomalous data values.

              </para> 
<para>There are two useful references for the 'ETOPO-5' data set. These are: "Edwards, Margaret Helen, 1986. Digital Image Processing of Local and Global Bathymetric Data. Master's Thesis. Department of Earth and Planetary Sciences, Washington Univ., St. Louis, Missouri, USA, 106 p." and "Haxby, W. F. et al., 1983. Digital Images of Combined Oceanic and Continental Data Sets and their Use in Tectonic Studies. EOS Trans- actions of the American Physical Union, vol. 64, no. 52, pp. 995-1004."
              </para> 
</note> </para> 
<para>
            <note id="etopo2_description">
              <para>In November 2002 the capability to read the US NOAA 'ETOPO-2' data set has been added to
                <application>Debrief</application>.  The ETOPO-2 dataset may be purchased from the
                <ulink url="http://www.ngdc.noaa.gov/mgg/gdas/gx_announce.Html">NOAA</ulink>, and is delivered on CD-ROM.  The ETOPO-2 CD-ROM itself contains several datasets.  The Dataset supported by Debrief is the
                <filename>ETOPO2.RAW	</filename> file containing data in the
                <emphasis>big-endian</emphasis> format.  This file must be copied into an
                <filename>etopo</filename> sub-directory of the Debrief installation. This 2-minute dataset offers more than 6 times the detail of the ETOPO-5 dataset. This 2-minute data is derived from the following sources:
                <itemizedlist>
                  <listitem>
                    <para>The seafloor data between latitides 64 North and 72 South is from the work of
                      <emphasis>Smith and Sandwell, 1997</emphasis>. These data were obtained from satellite altimetry observations combined with shipboard echo-sounding measurements.
                    </para> 
</listitem> 
<listitem> 
<para>Seafloor data southward of 72 South are from the US Naval Oceanographic (NAVOCEANO) DBDBV version 4.1 at 5 minute spacing.</para> 
</listitem> 
<listitem> 
<para>Seafloor data northward from 64 North are from the new International Bathymetric Chart of the Arctic Ocean (IBCAO) Version 1.</para> 
</listitem> 
<listitem> 
<para>Land data is from the GLOBE Project, an internationally designed, and independently peer-reviewed global digital elevation model (DEM).</para> 
</listitem> 
</itemizedlist> </para> 
<para>These sources are summarised below:
                <figure float="0">
                  <title>ETOPO2 Data Sources</title>
                  <screenshot>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="figures/etopo2src.jpg"/>
                      </imageobject>

                    </mediaobject>
                  </screenshot>
                </figure>
              </para> 
<para>This information has been taken from the
                <ulink url="http://www.ngdc.noaa.gov/mgg/fliers/01mgg04.html">NOAA Web-site</ulink>
              </para> 
</note> </para> 
<para>The following options are provided for plotting ETOPO data:
            <variablelist>
              <varlistentry>
                <term>Color</term>
                <listitem>
                  <para>The color to plot the key itself.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Key location</term> 
<listitem> 
<para>This option determines where (and whether) to show the key for the depth data.  Note that the ETOPO data will always appear behind other data, so it may be necessary to experiment with the key location.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Show land</term> 
<listitem> 
<para>Whether to plot land as land, or as very shallow water.  Plotting the land as very shallow water is the favoured way of combining ETOPO data with VPF data.  The VPF coastline data is of much higher resolution, differences being highlighted when ETOPO land is shown.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Visible</term> 
<listitem> 
<para>Whether to plot the ETOPO data</para> 
</listitem> 
</varlistentry> 
</variablelist> The ETOPO-5 dataset provides a few more customizable
attributes, which allow you to choose between enhanced performance
over appearance in the plot: 
<variablelist> 
<varlistentry> 
<term>Bathy Res</term> 
<listitem> 
<para>This is the size of each bathy square to be plotted in screen pixels.  A resolution (Res) of 1 pixel provides the most detailed bathymetric plot, though it takes the longest time.  Frequently it is possible to increase the bathy-res without any visible degradation in the data displayed - whilst providing performance benefits</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term> Bathy Visible</term> 
<listitem> 
<para>This flag indicates whether the bathymetric plot should be shown or not (sometimes the set of contours are sufficient).</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Contour Depths</term> 
<listitem> 
<para>Into this box provide a comma-separated list of depth contours (in metres) to plot.  The values should expressed in ascending order as whole numbers.  If Debrief encounters a problem whilst reading the values it will return to the last valid set of depths</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Contour Grid Interval</term> 
<listitem> 
<para>The contour plotting algorithm is very processor-intensive, calculating the contours when zoomed out over a large area can take many minutes.  The contour plotting algorithm inspects every depth datum in the data area whilst finding contours.  The speed of calculation can be improved by directing the algorithm to skip a number of depth values before performing the next calculation.  This may make the contours themselves very slightly more blocky, though still useable.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Contour Optimise Grid</term> 
<listitem> 
<para>Setting this switch instructs Debrief to automatically increase the Contour Grid Interval as you zoom from the plot.  This prevents the exponential increase in time take to conduct the contouring, ensuring that no more than 10000 calculations are performed, and when zooming in it ensures that where applicable at least 2000 calculations are performed.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Contours Visible</term> 
<listitem> 
<para>This flag indicates whether the contours should be plotted or not - not showing contours substantially speeds up the redraw time.</para> 
</listitem> 
</varlistentry> 
</variablelist> 
<tip> 
<para>The ETOPO-5 dataset uses a significant amount of memory on your PC, typically 30Mb, though this only gets loaded once per Debrief session,  however many plots are loaded. Writing a WMF file with ETOPO data visible requires even more memory, and can cause
                <application>Debrief</application> to hang or crash.  This problem can be overcome by following the advice described in
                <link linkend="starting_debrief">Starting Debrief</link>
              </para> 
<para>The ETOPO-2 dataset is many times larger than ETOPO-5, thus is not read into memory but accessed on the fly. For this reason it does not consume as much memory, but does require a fast PC to produce acceptable screen updates.</para> 
</tip> </para> 
</sect2> 
</sect1> 
<sect1 id="drawing_features"> 
<title>Adding drawing features</title> 
<para>
	  The
          <guilabel>Drawing Toolbar</guilabel> is used to place geographic features on the plot; features which are geographically fixed.  In general, when you create them, their corners must be specified. To do this, click on the
          <guibutton>Select Point</guibutton> button, then double-click on the
          <glossterm linkend="g_plt">plot</glossterm> to set the point..
          <figure float="0">
            <title>Drawing toolbar</title>
            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/PaletteButtons1.gif"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>
        </para> 
<sect2> 
<title>Buoyfield</title> 
<para>Debrief provides a
            <emphasis>builder</emphasis> dialog to assist
 in the creation of buoyfields.  The creation of
            <glossterm linkend="g_buoyfields">buoyfields</glossterm> is covered later in
            <link linkend="handling_buoyfields">Handling Buoyfields</link>.
          </para> 
</sect2> 
<sect2> 
<title>Label</title> 
<para>The Label
            <indexterm>
              <primary>Annotations</primary>
              <secondary>Label</secondary>
            </indexterm>drawing item allows you to place a labelled symbol on the plot.  Typically this may be used to annotate events on the plot, or to add an extra feature which did not warrant its own Debrief file.  Like all annotations Labels have time start and end properties.  Because of this they can be placed on the Tote and used in analysis, as you will learn later.
          </para> 
<para>Try adding a Label to the plot.  When you press the Label button, a properties window will open, showing you the variety of editable properties of a Label.  These range from the label&apos;s appearance (Color, Font, Visible), the label&apos;s content (Label, SymbolType, SymbolSize), through to data describing the label (Location, TimeStart, Time_End).  Experiment with changing the formatting on a label.</para> 
<para>
            <tip>
              <para>Be sure to experiment with setting the Location of the Label. A custom editor is supplied (see below) for editing locations of data items, it is used frequently in
                <application>Debrief</application>.
 Clicking on the button labelled
                <guibutton>Edit</guibutton> will allow you to type in the exact location of the label (useful when you have received the location in printed form), but clicking on
                <guibutton>Select Point</guibutton> button will let you double-click on the chart to set the Label location.
              </para> 
</tip> 
<figure float="0"> 
<title>Location Editor</title> 
<screenshot> 
<mediaobject> 
<imageobject> <imagedata fileref="figures/LocationEditor.gif"/> 
</imageobject> 
</mediaobject> 
</screenshot> 
</figure> </para> 
<note> 
<para>Note that the text for the label itself can be a multi-line piece of text.  When in the text-editor box for the label, just press the return key on your keyboard to move to the next line.  The multi-line piece of text will be centre formatted on screen according to the
              <guilabel>Label Location</guilabel> property.  The multi-line label is also available for  all labels on the
              <application>Debrief</application> plot.  Note that when the label is stored to disk in the
              <application>Debrief</application> plot-file format, the '\n' character used internally to represent the new line is converted to a '\\n' string to allow its easy storage.
            </para> 
</note> 
</sect2> 
<sect2> 
<title>Ellipse</title> 
<para>The Ellipse shape works in much
            <indexterm>
              <primary>Annotations</primary>
              <secondary>Ellipse</secondary>
            </indexterm> the same way as a Label, except an ellipse is drawn on the plot instead of the labelled symbol.  The size of the ellipse is dictated by the Maxima and Minima values which specify the lengths of its semi-major and semi-minor axes, expressed in kiloyards.  These values are the distances from the centre of the ellipse to the furthest and closest points on it&apos;s perimeter, respectively.  The direction of the ellipse is specified by the orientation, expressed in degrees.
            <application>Debrief</application> does not check that the maxima is larger that the minima, it merely plots an ellipse oriented about the semi-major axis.
            <tip>
              <para>If you find you have forgotten the units used to express any of the data values used in Debrief property editors, just hover your mouse over the name of the property.  The tooltip which appears will indicate the units.</para> 
</tip> </para> 
</sect2> 
<sect2> 
<title>Polygon</title> 
<para>The Polygon drawing feature
            <indexterm>
              <primary>Annotations</primary>
              <secondary>Polygon</secondary>
            </indexterm>allows more varied shapes to be plotted within Debrief.  A series of points (called a Path) are added to a Shape which are the connected up to create a Polygon.  The points in the path may be typed in, double-clicked, or dragged to produce the correct polygon.
          </para> 
<para>When a new polygon is created, its editor panel will open as shown below:
            <figure float="0">
              <title>Initial view of polygon</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/EditPolygon.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>The properties shown are similar to those shown for most other shapes, with the
exception of the actual location of the polygon.  Instead of being able to directly edit 
the points in the polygon, an indication of the number of points is provided, together with a 
button which will take you to the Path editor.  The Path editor is shown below:
            <figure float="0">
              <title>Path editor</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/PathEditor.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>When it opens, the Path editor contains a single point (incidentally, this point it is placed a the centre of the current dataset).  The four buttons at the top-right of the panel allow you to move the points up and down, create a new point, and delete a point.</para> 
<para>To edit a point, first single-click on it, it will then be shown in the lower panel.  You may then click on the Edit or Select Point buttons to either type-in the location of the point or to double-click the new location for the point.  Additionally you may click on the Drag button to enter Drag mode.  In Drag mode  any point may be picked up with the mouse and dragged around the plot.</para> 
<note> 
<para>In the Path editor it is a copy of the polygon which is being edited, and not the actual polygon.  This is why it is sometimes possible to see both the yellow polygon being edited and as the original one.  The original polygon only gets updated when the
              <guibutton>Apply</guibutton> is pressed.
            </para> 
</note> 
</sect2> 
<sect2> 
<title>Rectangle, Circle, Line, Arc</title> 
<para>The Rectangle, Circle and Line shapes
            <indexterm>
              <primary>Annotations</primary>
              <secondary>Rectangle, Circle, Line, Arc</secondary>
            </indexterm>work in the same way as the others described here, the Location Editor described above being used to set the corners, centre, or ends as required.  Experiment with adding them to the plot.

            <note>
              <para>Some of the more basic drawing items have a single
                <guilabel>DTG</guilabel> parameter instead of
                <guilabel>TimeStart</guilabel> and
                <guilabel>Time_End</guilabel> properties.  Where there is a single time, the time-analytical features of Debrief (such as Snail mode) treat the feature as
                <emphasis>alive</emphasis> for three minutes either side of the time value.
              </para> 
</note> </para> 
<tip> 
<para>To draw  a line created from an origin with values of range and bearing, first create the line, and put the start point of the line at the origin.  Now switch the mouse mode to
              <guilabel>Range/Bearing</guilabel> (
              <guiicon>
                <inlinegraphic fileref="figures/RngBrg.gif" align="center"/>
              </guiicon>). Now click on the button labelled
              <guilabel>Select Point</guilabel> for
              <guilabel>LineStart</guilabel>, and drag the mouse out from the origin point.  The current range and bearing will be displayed at the bottom-left of the screen.  When the mouse is at the desired range and bearing double-click on the screen, setting the correct
              <guilabel>LineEnd</guilabel> value.
            </para> 
</tip> 
</sect2> 
<sect2> 
<title>General</title> 
<para>Try adding a few more features to the
            <glossterm linkend="g_plt">plot</glossterm>.
   To edit an existing annotation right-click on it on the
            <glossterm linkend="g_plt">plot</glossterm> and select
            <guibutton>Edit..</guibutton>. Alternatively an item may be edited by navigating to it using the
            <guilabel>Layer Manager</guilabel> (you&apos;ll learn about that very soon), and right-click on it there, selecting
            <guibutton>Edit..</guibutton> from the list provided.
          </para> 
</sect2> 
</sect1>

      <!--         layer manager                     -->
<sect1 id="layer_mgr"> 
<title>Layer management</title> 
<sect2> 
<title>Layer Manager</title> 
<para>If you right-click on the
            <glossterm linkend="g_plt">plot</glossterm>, another editable item listed is the Layer Manager. Selecting this opens the Layer Manager in the
            <glossterm linkend="g_tote">Tote</glossterm>.
          </para> 
<para>Right-click on the layer named
            <guilabel>Chart Features</guilabel> (which should now have a number of items added to it, including the grid), and from the drop-down menu labelled
            <guilabel>Layer: Chart Features</guilabel> &gt;, de-select the toggle-item labelled
            <guilabel>Visible</guilabel>.
            <figure float="0" id="right_click_layer">
              <title>Right-clicking in a Layer Manager</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/EditLayerItem.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
	 The Grid will now disappear. Right-click on "Chart Features" again and make the grid visible.
          </para> 
<para>You may also expand any of the Layers to see the items they contain. This is a particularly good way of editing individual position fixes where you know their DTG; simply double-click on the relevant DTG and it will open in a
            <glossterm linkend="g_property_window">property editor</glossterm> window.
          </para> 
<para> There is also a button to open the Layer Manager from the Stepper Control, which you&apos;ll learn more about shortly.
            <guiicon>
              <inlinegraphic fileref="figures/layer_mgr.gif"/>
            </guiicon>
          </para> 
</sect2> 
<sect2> 
<title>Layer buttons</title> 
<para>There are two buttons at the top of the
            <indexterm>
              <primary>Layer Manager</primary>
            </indexterm>Layer Manager.  The first of these allows you to create and name a new, empty, top-level layer.  This can be used to tidy up large numbers of annotations.  New annotations (drawings) are always placed on the
            <guilabel>Misc</guilabel> layer.  You can tidy them up by creating a layer dedicated to a set of annotations and cut/paste them into it.  Once on a layer these annotations can be switched on and off at once (using the Layer/Visible property), a useful analysis feature.
          </para> 
<para>Once you are more familiar with the
            <application>Debrief</application>
            <glossterm linkend="g_xml">XML</glossterm> format, custom layers can be created to contain, for example, exercise areas or underwater hazards.  Information in these custom layers can be dropped into new
            <glossterm linkend="g_plt">plot</glossterm>s and switched on and off as required.
          </para> 
<para>
 The second button is to update the "tree" of data you are looking at, although normally the Layer Manager is good at recognizing changes and it updates itself.
          </para> 
</sect2> 
<sect2> 
<title>Cut/Copy Paste</title> 
<para>Finally, items may be cut, copied and pasted between Layers using the commands contained in the menus obtained by right-clicking on the item. The cut command may be used on it&apos;s own to delete an item. Copying items is a quick way of making duplicates of a correctly formatted annotation or screen item such as a rectangle or ellipse.
          </para> 
<para>In addition to copying/moving items between layers, items and layers themselves can be copied or moved between sessions within Debrief.</para> 
<para>To paste a layer (or track) into the top level of the layer manager just click on the white space below the displayed layers and select
            <guibutton>Paste Item</guibutton> form the popup menu.
          </para> 
<note> 
<para>All top-level layers (that it screen items which appear at the top level in Layer Manager, such as Tracks, ETOPO data and Layers themselves) can have a line width assigned to them. This setting is observed when plotting all items in that layer.  The smallest line width supported is
              <emphasis>hairwidth</emphasis>, which plots the finest line the particular output device (screen or printer) can produce.  The line-width parameter can be accessed by right-clicking on the screen item directly in addition to via the Layer Manager.
            </para> 
</note> 
</sect2> 
<sect2> 
<title>Line thickness</title> 
<para>The thickness used for plotting lines on the plot is controlled on a per-layer basis.  Hence, on the popup menu shown above in
            <link linkend="right_click_layer"><?xm-replace_text {link}?></link> a drop-down list of line thicknesses is shown. Within the list of line thicknesses available is the
            <emphasis>Hairwidth</emphasis>
            <indexterm>
              <primary>Hairwidth</primary>
            </indexterm> value - this uses the thinnest possible line thickness on that particular device; whether it be screen or printer.
          </para> 
</sect2> 
</sect1> 
<sect1 id="save_reopen"> 
<title>Saving &amp; re-opening plots</title> 
<sect2> 
<title>Save</title> 
<para>Now that all of this work has been invested in the plot, it&apos;s worth saving it.
          </para> 
<para>You may (or my not) remember what the
            <glossterm linkend="g_replay">Replay</glossterm> file format used to load data into
            <application>Debrief</application> looked like.  Whilst it is compact and easy to use, unfortunately the Replay file format does not allow us to store all of the formatting we have applied to the
            <application>Debrief</application>
            <glossterm linkend="g_plt">plot</glossterm>, nor the coordinates of what you are currently viewing, nor how you have arranged to store your data in
            <glossterm linkend="g_layer">layers</glossterm>.  This problem is overcome by the use of the
            <application>Debrief</application>
            <glossterm linkend="g_plot_file">Plot-File</glossterm> format, an application defined using
            <link linkend="intro_xml">XML</link>.  Have a quick read about
            <glossterm linkend="g_xml">XML</glossterm> in the Reference Guide or Glossary if you&apos;re not aware of it and are sufficiently interested, otherwise, here&apos;s an overview:

            <itemizedlist>
              <listitem>
                <para>Debrief stores plots using XML</para> 
</listitem> 
<listitem> 
<para>XML stands for eXstensible Markup Language, which allows structured data to be stored in text format, and is a world-wide standard promoted by
                  <ulink url="http://www.w3c.org">http://www.w3c.org</ulink>.
                </para> 
</listitem> 
<listitem> 
<para>XML files can be edited outside
                  <application>Debrief</application>, allowing you to cut and paste between
                  <glossterm linkend="g_plot_file">plot-files</glossterm> to build up a new
                  <glossterm linkend="g_plot_file">Plot-File</glossterm>, all in a text editor
                </para> 
</listitem> 
</itemizedlist> </para> 
<para>To save your work as an
            <glossterm linkend="g_xml">XML</glossterm> file, click on the Save Plot button:
            <guiicon>
              <inlinegraphic fileref="figures/SaveBtn.gif"/>
            </guiicon>
          </para> 
<para>A file dialog will open (see below), allowing you to save the current session as a
            <application>Debrief</application>
            <glossterm linkend="g_plot_file">Plot-File</glossterm> (
            <filename>xml</filename>). Name your new file (
            <filename>tutorial.xml</filename> would seem a good name), select a sensible location, and press
            <guilabel>Save</guilabel>.
          </para> 
<para>
            <figure float="0">
              <title>Save-file dialog</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/SaveDialog.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Save-as functionality is provided through the
            <guibutton>Save As</guibutton> button, next to the
            <guibutton>Save Plot</guibutton> button described above.
          </para> 
<sidebar> 
<para><application>Debrief</application> plot files can grow very large, and on occasion the memory required for the save operation can reach the upper limit provided to the application by default.  When Debrief fails during the Save operation due to reaching the upper memory limit it stops trying to save to file and shows a message dialog advising you to increase the limit:<quote>Ran out of memory whilst saving plot, try adding -Xmx256m to the command line</quote>. This extra parameter passed when Debrief is starting instructs your PC to provide Debrief with 256 Megabytes of memory.  If you continue to receive the error message try increasing the memory allocation to 512 Megaytes.</para> 
<para>The save operation itself is conducted in a two-stage process.  If the operation entails saving over an existing file (when you just do a plain Save, or Save As over-writing an older version) Debrief first writes the plot to a subtlely different filename in the same directory (<filename>plot.xml</filename> would get saved to <filename>~plot.tmp</filename>). If the save operation completes successfully then the older file is deleted and the temporary file renamed to the originally requested filename.  Thus, your existing file only gets overwritten on successful completion of the save.</para> 
</sidebar> 
</sect2> 
<sect2> 
<title>Close</title> 
<para>Now you can close the session, using the
            <guilabel>Close Session</guilabel> button:
            <guiicon>
              <inlinegraphic fileref="figures/CloseSession.gif"/>
            </guiicon>
          </para> 
<para>The session will close.  Where it can,
            <application>Debrief</application> recognizes if anything has changed since the last save, and it will prompt you to save your plot before it lets you close.
          </para> 
</sect2> 
<sect2> 
<title>Open Existing Plot</title> 
<para>You should now be looking at an "empty"
            <application>Debrief</application> application, without any Sessions visible.
          </para> 
<para>You open an existing plot using the Open Plot control:
            <guiicon>
              <inlinegraphic fileref="figures/OpenSession.gif"/>
            </guiicon>
          </para> 
<para>This will open the
            <guilabel>File Dialog</guilabel> you saw earlier.  Navigate to your saved plot and select "Open". The plot will re-open with the same view on the data as when the file was saved.
          </para> 
</sect2> 
<sect2> 
<title>Drag &amp; Drop (new plot)</title> 
<para>Now that we&apos;ve mastered that, close this session and experiment with the drag and drop functionality within
            <application>Debrief</application>.  Re-arrange the windows on your desktop so that you have
            <application>Debrief</application> and
            <application>Windows Explorer</application> visible.
          </para> 
<para>Now drag a
            <application>Debrief</application>
            <filename>XML</filename>
 or
            <filename>REP</filename> file from
            <application>Explorer</application> onto the grey area to the right of the application toolbar (near the top of the
            <application>Debrief</application> window).
 A round cursor containing a plus symbol will be displayed beneath the mouse, showing that this is a legitimate "drop" point for that type of file.  
 Drop the file into the grey area, and after a few seconds the plot will open.
          </para> 
<para>You have now dragged a file into
            <application>Debrief</application>, creating a new session.   If you drag more than one file on to the Application toolbar, each one will open into a new session.
          </para> 
</sect2> 
<sect2> 
<title>Drag &amp; Drop (add)</title> 
<para>With a session already open, you are able to drag a
            <application>Debrief</application>
            <filename>XML</filename> or
            <filename>REP</filename> file into it&apos;s chart, adding the content to the existing session.  Dragging multiple files onto the plot area adds them all to the existing session.  So a quick way to create a plot containing a number of files is to click on
            <guibutton>New Session</guibutton>
            <guiicon>
              <inlinegraphic fileref="figures/NewSession.gif"/>
            </guiicon> , then drag the files onto the plot.
          </para> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="analysing_data"> 
<title>Analysing Data</title> 
<para>Analysis is the core function of
        <indexterm>
          <primary>Track Data</primary>
          <secondary>Primary &amp; Secondary Tracks</secondary>
        </indexterm> Debrief.  In this section of tutorial (at last) you are going to gain some familiarity with how Debrief can be used to analyse maritime exercises.
      </para> 
<sect1> 
<title>Assigning tracks as primary and secondary</title> 
<sect2> 
<title>Tote area</title> 
<para>We&apos;ll have a brief explanation of the Tote at this point, using the image below.
            <figure float="0">
              <title>The
                <application>Debrief</application> Tote
              </title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/ToteLabelled.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>
	   The
            <glossterm linkend="g_tote">Tote</glossterm> area is used to show the current and relative status between two or more platform tracks. The information on the
            <glossterm linkend="g_tote">Tote</glossterm> is dynamic, showing vessel information at the time indicated in the Stepper Control (
            <userinput>120500.00</userinput> in this case). The user is able to step through the tracks either manually (using the forward and backward buttons) or automatically (by switching on the timer button).
          </para> 
<note> 
<para>The primary and secondary tracks may not contain values exactly at the time in the time stepper control.  For both the tote display and the plot-highlights, Debrief uses the data values recorded on or immediately after the indicated stepper time.</para> 
</note> 
<para>One
            <glossterm linkend="g_track">track</glossterm> currently loaded is assigned as the Primary track (the blue track in this instance), and then one or more tracks are assigned as Secondary tracks. The primary track always displays current course, speed and depth, as illustrated above. The secondary tracks displays this information, together with relative information such as Range and Bearing to the Primary track.
          </para> 
<para>Not only tracks can be placed on the Tote.  Buoyfields and most annotations (labels, circles, etc) can also be set as primary or secondary track.  If no time is available for an annotation it is deemed to always be valid, and calculations are shown  although the time field is displayed as "n/a".  However, if the annotation has start and end times the tote displays "n/a" when outside that period and calculated data when inside it.</para> 
<note> 
<para>
It may be useful to remember that the Primary Track is usually assigned to the Target, thereby allowing a constant display of target bearing and range.
            </para> 
</note> 
<para>There can be any number of secondary tracks.
            <application>Debrief</application> displays calculated results of the relationship between each one and the Primary Track.  To see the relationship between secondary tracks, one of them must be set to the Primary track.
          </para> 
<para>The following calculated data is presented, where the current point on each track is used for the calculation:
            <variablelist>
              <varlistentry>
                <term>Range</term>
                <listitem>
                  <para>The range between the current point on the secondary track and the current point on the primary track using the
                    <glossterm linkend="g_earth_model">earth model</glossterm> as described in the Glossary, displayed in the units stored in the
                    <link linkend="debrief_props" endterm="debrief_props_title"/> section of the Maintainer&apos;s Guide
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Bearing</term> 
<listitem> 
<para>The bearing between the points.</para> 
</listitem> 
</varlistentry> 
<varlistentry id="RelBearingDescription"> 
<term>Rel Bearing</term> 
<listitem> 
<para>The relative bearing between the heading of the participant in the secondary track, and the bearing to the primary track.   There are two formats used for relative bearing, depending on the setting of
                    <emphasis>REL_BEARING_FORMAT</emphasis> in the
                    <link linkend="RelBearingProperty">Debrief properties</link> file.  If the format is specified as UK, the R and G characters at the start of the result are short for Red and Green, which indicate that the contact is to the Port or Starboard of the secondary track. If the format is specified as US, the value uses 0 as directly ahead and continues clockwise through 180 (astern) and back round to 359.9.
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Speed</term> 
<listitem> 
<para>The current speed of the indicated track (no actual calculation is performed here; the value from the data-file is displayed directly).</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Course</term> 
<listitem> 
<para>The current course of the indicated track (no actual calculation is performed here; the value from the data-file is displayed directly).</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Depth</term> 
<listitem> 
<para>The current depth of the indicated track (no actual calculation is performed here; the value from the data-file is displayed directly).</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Brg Rate</term> 
<listitem> 
<para>The instantaneous bearing rate of the primary track as observed from the secondary track.  This value is explained in the Glossary.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Time</term> 
<listitem> 
<para>Where track data is not recorded at regular steps, and tracks do not have data at the same time steps, there is a likelihood that the value displayed on the tote will not have been recorded at the current tote time.  The time field shows the actual time at which the data value was recorded for that track.</para> 
</listitem> 
</varlistentry> 
</variablelist> 
<note> 
<para>When more than two tracks are loaded, the value
                <guilabel>n/a</guilabel> is shown in Tote calculations for the primary track which rely on other track data (range, bearing, rel bearing, brg rate).  This is because it is unclear which inter-track relationship is being calculated.  Where only two tracks are loaded (one primary and one secondary), the tote is able to show relative calculated data for both.
              </para> 
</note> </para> 
</sect2> 
<sect2> 
<title>Assigning Tracks</title> 
<para>Back to the tutorial, setup
            <application>Debrief</application> to have
            <application>Debrief</application> running with
            <indexterm>
              <primary>Track Data</primary>
              <secondary>Assigning Primary &amp; Secondary</secondary>
            </indexterm> the two tracks (
            <filename>boat1.rep</filename> and
            <filename>boat2.rep</filename>) visible. If there are any properties windows open on the Tote, close them at this point to save space, to have a view like that below.
            <figure float="0">
              <title>Initial view</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/FileJustOpened.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>If you right click on one of the tracks, you will see that on the popup menu provided, one of the commands is
            <guibutton>Set Primary Track</guibutton>. Select this command, and the track will appear on the
            <glossterm linkend="g_tote">Tote</glossterm>. Now right-click on the other track, and select
            <guibutton>Set Secondary Track</guibutton>. The
            <glossterm linkend="g_tote">Tote</glossterm> should now look like the screenshot at the start of this demonstration (although the tracks may be the other way around).
          </para> 
<para>
You should probably have noticed the
            <guibutton>Auto Generate</guibutton> buttons at the foot of the Tote.  These buttons automatically assign tracks and annotations to the Tote.  They take a look at all of the data currently loaded and identify any visible items that may be placed on the Tote
            <guibutton>Auto Generate</guibutton> or any visible tracks which may be placed on the tote
            <guibutton>Auto Generate (Tracks)</guibutton>.  Once they have analysed the list, they mark one of these items the primary track, and the others as secondaries.
          </para> 
<tip> 
<para>If you have more than two tracks, it can be quicker to assign the primary track manually and then press
              <guibutton>Auto Generate</guibutton> to assign the remaining tracks as secondary.
            </para> 
</tip> 
</sect2> 
<sect2> 
<title>Stepping forward</title> 
<para>Now click on the Forward Button (that&apos;s the single right arrow). You should see the white highlight on each track move forward. If you can&apos;t see the highlight because part of the track is not visible, select the
            <guibutton>Fit to Window</guibutton> button. Now repeatedly click on the forward button, and you will see both the highlight move, and the information in the
            <glossterm linkend="g_tote">Tote</glossterm> update. The highlight and Tote are moving forward in one minute steps (one minute is the default). Also try clicking on the backward button, and the large step forward and backwards buttons (which contain double-arrows). The large step buttons by default move you in 10 minute steps. The buttons with an arrow and a line move you to the start or end of the time period.  If the
            <guibutton>Move to end of plot</guibutton> button is obscured (as in the screen-shot above) expand the Tote by dragging the separator bar to it&apos;s right.  Note that the Tote can be completely hidden by clicking on the tiny left-arrow at the top of this bar.
          </para> 
<para>With the introduction of Java 1.4 came wheel-mouse support.  To move forward and backward in time through the serial just roll the wheel-mouse either way whilst either the Tote or the Chart has focus.
            <note>
              <para>
                <emphasis>Has focus</emphasis> means that this item was the last item clicked, and it is where Debrief is going to apply the next keyboard or mouse action.
              </para> 
</note>By default the wheel moves the current time in small steps,
but hold down the <guibutton>SHIFT</guibutton> key to move in large steps. You will notice that the
mouse wheel also controls the scroll-bars used in the application
(such as when a long 
<link linkend="narrative_intro">narrative</link> is shown), and that holding down the <guibutton>CTRL</guibutton> key will zoom the plot in and out. </para> 
</sect2> 
<sect2> 
<title>Notes</title> 
<para>
            <warning>
              <para>A Circle currently only has a single "Centre" DTG value - so it will only be highlighted for 3 minutes either side of this point.  Better results are obtained by using a Label (which has a picture of a luggage label on it), since Labels have start and finish DTGs.</para> 
</warning> 
<note> 
<para>It is not just tracks that can be added to the Tote, experiment with right-clicking on features on the plot and see if they have the "Set Primary Track" or "Set Secondary Track" commands available (although read the note below about these). In this way you can make a timed data point (represented by a Circle with a very small radius) the primary track, then add a number of vessel tracks as secondary tracks, and then as you move through the data you can constantly see the vessel range and bearings from this data point. This is particularly useful for seeing vessel ranges and bearings from a
                <glossterm linkend="g_sensor">sensor</glossterm> such as a sonar buoy.  Remember to set the DTG data for the data point to time(s) near those of the track - or else in your example
                <application>Debrief</application> will assume the "sonar buoy" is not yet active.
              </para> 
</note> 
<warning> 
<para>A Circle currently only has a single "Centre" DTG value - so it will only be highlighted for 3 minutes either side of this point.  Better results are obtained by using a Label (which has a picture of a luggage label on it), since Labels have start and finish DTGs.</para> 
</warning> 
<note> 
<para>The limits on the time period are the outer time limits of the visible data in the primary and secondary tracks currently displayed on the Tote,  so following a filter operation (introduced later) the start/end times will be changed to reflect the time limits specified.</para> 
</note> 
<note> 
<para>The keyboard can also be used for moving backwards and forwards, although
                <application>Debrief</application> has to know that it&apos;s the Stepper that you want the keys to control.  So, after clicking on one of the forward/backward buttons you can then switch to keyboard control of the Tote as follows:

                <itemizedlist spacing="compact">
                  <listitem>
                    <para>Page Up/Down keys: these control small step backward/forward resp.</para> 
</listitem> 
<listitem> 
<para>Shift-Page Up/Down arrows:  these control large step backward/forward resp.</para> 
</listitem> 
<listitem> 
<para>Shift-Home/End keys: these control goto First/Last resp.</para> 
</listitem> 
</itemizedlist> </para> 
</note> </para> 
</sect2> 
</sect1> 
<sect1 id="auto_stepping"> 
<title>Automatic stepping</title> 
<sect2> 
<title>Introduction to automatic stepping</title> 
<para>The automatic stepping control (containing a picture of a Stopwatch) repeats the last step at timed intervals.
            <guiicon>
              <inlinegraphic fileref="figures/Timer.gif"/>
            </guiicon>
          </para> 
<para>
	   Move to the start of the time period (using the
            <guibutton>First</guibutton> button), then move forward one step (to tell the automatic stepper what type of step to repeat). Now click on the
            <guibutton>automatic</guibutton> button, and the highlights will start moving forward one minute every second. Once it has moved forward a few steps, try clicking the
            <guibutton>backward</guibutton> button, and you will see the highlight move backwards.
          </para> 
<para>Now click on the automatic stepping control again to stop it, and you will experiment with configuring it.  Click on the
            <guibutton>Edit Stepper Control</guibutton> button to view the properties for the stepper control:
            <guiicon>
              <inlinegraphic fileref="figures/PropertiesBtn.gif"/>
            </guiicon>
          </para> 
</sect2> 
<sect2 id="stepping_keywords"> 
<title>Stepping keywords</title> 
<para>A now-familiar properties window will open, allowing you to edit the properties of the Stepper control.
          </para> 
<para>The properties available are:


            <variablelist>
              <varlistentry>
                <term>Auto Step</term>
                <listitem>
                  <para>this is the real time interval used between each automatic step, not the track time moved forward.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Date Format</term> 
<listitem> 
<para>the format of the time value displayed on the
                    <glossterm linkend="g_tote">Tote</glossterm> is a useful format for the majority of cases.  Unfortunately it does not offer sufficient resolution for tracks recorded with very small (sub-second) time steps.   This option provides a number of choices of date format, where for example mm:ss.SSS shows the current time in minutes, seconds, and milliseconds.
                  </para> 
<para> Note the last couple of formats in the list provided (T+ ....).  These provide support for displaying time as "T-Zero" time instead of absolute time.  When one of these modes is selected, the Start time currently set in the
                    <guilabel>Track/Time toolbox</guilabel> is used as T-Zero, and the time in the stepper is displayed as an offset from this.
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Display</term> 
<listitem> 
<para>I&apos;ll defer discussion of this until you get to the "Configuring
                    <glossterm linkend="g_display_mode">Display Mode</glossterm>" section below (because it&apos;s particularly good)
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Font Size</term> 
<listitem> 
<para>this is the size to draw the current time text in the middle of the stepper control</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Highlighter</term> 
<listitem> 
<para>this option allows you to select whether to show the current point as a plain rectangle,  to draw heading-centred range rings around the primary track, or to represent the current point on each track as a symbol</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>StepLarge</term> 
<listitem> 
<para>this is the track time moved forward for each large step of the Stepper Control</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>StepSmall</term> 
<listitem> 
<para>and this is the time moved forward for each small step.</para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
<para>Experiment with decreasing the Interval of the stepper, pressing
            <guibutton>Apply</guibutton>, switching back to the
            <glossterm linkend="g_tote">Tote</glossterm>, and making the stepper run automatically, you should see the highlight move through the track more quickly now.
          </para> 
<para>Note that you could at this point drag out the "Edit Stepper Control" properties window to make it float, making it easier to experiment with different intervals, applying them, and seeing the speed of the stepper change before you.
          </para> 
<para>Additionally experiment with changing the
            <glossterm linkend="g_highlighter">Highlighter</glossterm> used for the stepping to the one named "Range Rings" - selectable from the Step Control properties page.  Apply the change and look at the plot stepping through.  Whilst you may have to zoom in, you will see that a set of grey range rings are drawn around the current point - the size and colour of these rings can be edited by pressing the "Edit
            <glossterm linkend="g_highlighter">Highlighter</glossterm>" button on the Step Control properties page.
          </para> 
<para>Alternatively select "Symbol Highlight".  If a track has a symbol assigned to it (this is only normally applicable to vessel tracks) then the symbol is drawn at the current track point.  Later, when you learn about Snail Track mode, using this symbol mode when in snail mode with zero-length tails allows a GOP-type plot to be presented.
          </para> 
<note> 
<para>You will notice the terms
              <emphasis>Highlighter</emphasis> and
              <emphasis>Display Mode</emphasis> used in this document.  The combination of these two features give us a large degree of flexibility in how you step through an exercise serial. The display mode determines how the tracks are plotted, and the highlighter determines how the current point on each track is plotted.   The two can be used in any combination, so experiment with them to present the information in the most legible manner.
            </para> 
</note> 
</sect2> 
</sect1> 
<sect1 id="display_modes"> 
<title>Using display modes</title> 
<sect2> 
<title>Configuring Display Modes</title> 
<para>In addition to changing the properties for the
            <guilabel>Stepper Control</guilabel>, you can change the properties of the current
            <glossterm linkend="g_display_mode">display mode</glossterm> by clicking on the
            <guibutton>Edit Highlighter</guibutton> button visible at the top of the
            <guilabel>Edit Step Control</guilabel> properties page. The properties page will open for the current
            <glossterm linkend="g_display_mode">display mode</glossterm>, which allows us to edit only two parameters, these relate to the colour the highlight is drawn in, and the size of the highlight drawn (in screen pixels). Try increasing the size of the highlight and
            <guibutton>apply</guibutton>ing it, and you will see the highlight grow. Now
            <guibutton>Close</guibutton> this properties window and return to the
            <glossterm linkend="g_tote">Tote</glossterm>.
          </para> 
</sect2> 
<sect2> 
<title>Normal Display Mode</title> 
<para>The default
            <glossterm linkend="g_display_mode">display mode</glossterm>, called
            <indexterm>
              <primary>Display Mode</primary>
              <secondary>Normal</secondary>
            </indexterm>the
            <guilabel>Normal Display Mode</guilabel> offers a quick and easy way to move through tracks whilst retaining sight of all of the data by plotting a highlight over the current data point.
          </para> 
</sect2> 
<sect2> 
<title>Snail Display Mode</title> 
<para>However the next
            <glossterm linkend="g_display_mode">display mode</glossterm>, named
            <indexterm>
              <primary>Display Mode</primary>
              <secondary>Snail</secondary>
            </indexterm>the
            <guilabel>Snail Display Mode</guilabel> provides a more stylised view of the data only showing the current vessel positions.  Now change the
            <guilabel>Current Display Mode</guilabel> property to
            <guilabel>Snail Display Mode</guilabel> and
            <guibutton>Apply</guibutton>. Quick as a flash, the plot will clear. Now switch back to the Tote and move forward a few steps. You will see a vector appear at the current vessel position.

            <figure float="0">
              <title>Example of a snail trail</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/SnailTrailImage.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>This is such a useful thing to use that it can also be changed from the Stepper control itself, where a drop-down list of the two options is supplied.
          </para> 
<para>The circle represents the current position, the stalk direction represents the current course, and its length gives a relative idea of the vessel speed (when compared to the length of the other vessel&apos;s stalk,
            <emphasis>boys will be boys</emphasis>). The dots trailing back from the current position are a
            <glossterm linkend="g_snail_trail">snail trail</glossterm> of points going back in time. If you move forward and backward with the stepper control you will see these trails moving.
          </para> 
</sect2> 
<sect2> 
<title>Relative Display Mode</title> 
<para>The Relative Display Mode is a specialised version
            <indexterm>
              <primary>Display Mode</primary>
              <secondary>Relative</secondary>
            </indexterm> of the Snail Display Mode.  It works identically, except that the plot is oriented to match the current heading of the primary track, so the vector on the primary track always
            <emphasis>points upwards</emphasis>.
          </para> 
<tip> 
<para> Relative Display Mode is particularly useful for analysing one vessel trailing another. Make the trailing vessel the primary track, and the vessel being trailed the secondary track.  As you step forward through the serial you will clearly be able to see the relative bearing of the contact as held by the trailing vessel.
            </para> 
<para>The sample shown below gives a demonstration of the use of this relative mode. You can quickly see that the blue vessel is directly ahead of the red trailing vessel, and your use of the Range Ring Highlighter gives us a quick indication of range.
            </para> 
</tip> 
<para>
            <figure float="0">
              <title>Sample of a relative display mode</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/relative_demo.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
</sect2> 
<sect2 id="display_mode_properties"> 
<title>Display Mode Properties</title> 
<para>The Snail and Relative
            <glossterm linkend="g_display_mode">Display Modes</glossterm> have a few more editable properties than the Normal Display Mode. Access these properties using the Properties button:
            <guiicon>
              <inlinegraphic fileref="figures/PropertiesBtn.gif"/>
            </guiicon>
. In the properties window which opens, you are able to edit the following parameters:
            <variablelist>
              <varlistentry>
                <term>Fade Points</term>
                <listitem>
                  <para>this will cause the points in the trail to fade away to the background colour</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Link positions</term> 
<listitem> 
<para>this will plot a line between the points in the trail</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Plot Track Name</term> 
<listitem> 
<para>this will plot the track name alongside the current position</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Point Size</term> 
<listitem> 
<para>this will change the size of the points together with the thickness of the lines drawn on the plot, </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Trail Length</term> 
<listitem> 
<para>this will change the time period covered by the trail</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Vector Stretch</term> 
<listitem> 
<para>this will change the
                    <emphasis>amplification</emphasis> applied to the speed when drawing the speed vector; very fast vessels (or weapons) will need the this stretch reduced to allow stalks of sensible length.
                  </para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
</sect2> 
</sect1> 
<sect1 id="measure_range"> 
<title>Measuring range and bearing</title> 
<sect2> 
<title>Range &amp; Bearing</title> 
<para>It&apos;s worth reminding you at this point about the Range Bearing measuring tool
            <guiicon>
              <inlinegraphic fileref="figures/RangeBearing.gif"/>
            </guiicon>
 which is frequently useful in analysis.  The calculated range and bearing is displayed at the bottom right-hand corner of the Tote.
          </para> 
<para>The default units for the range displayed is configured using the Properties File
            <emphasis>(d2ksettings.prp)</emphasis>, but it can be over-ridden by double-clicking on the calculated range/bearing data itself.  A
            <glossterm linkend="g_property_window">property editor</glossterm> will open, from which you can switch to one of the following units:
            <variablelist>
              <varlistentry>
                <term>yds</term>
                <listitem>
                  <para>Yards</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>nm</term> 
<listitem> 
<para>Nautical Miles</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>km</term> 
<listitem> 
<para>Kilometres</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>m</term> 
<listitem> 
<para>Metres</para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
</sect2> 
<sect2> 
<title>Earth Model</title> 
<para>The Range Bearing calculation is performed using the
            <indexterm>
              <primary>Algorithms</primary>
              <secondary>Earth Model</secondary>
            </indexterm>
            <indexterm>
              <primary>Earth Model</primary>
            </indexterm>algorithms in the current Earth Model
          </para> 
<para>The Earth Model used by the application is modular and interchangeable.  In the initial release of the application the calculations use the Rhumb-Line Formulae for Short-distance sailing, as described in
            <quote>Admiralty Manual of Navigation, Volume 2, 1973</quote>. Short-distance sailing is defined as
            <quote>the following of a rhumb-line track for a distance not greater than 600&apos; </quote>.
          </para> 
</sect2> 
</sect1> 
<sect1 id="view_3d"> 
<title>Viewing tracks in 3-dimensions</title> 
<sect2> 
<title>3D View</title> 
<para>Lastly for the "viewing of plots",
            <application>Debrief</application> provides
            <indexterm>
              <primary>3D View</primary>
              <secondary>Introduction</secondary>
            </indexterm>support for viewing track files in 3D.   To obtain a 3-d view, the tracks currently loaded must contain Depth information, and the correct libraries (Java3D) must be installed on the machine.
          </para> 
<note> 
<para>
              <application>Debrief</application> contains a set of 3-d models for vessels most frequently analysed at the
              <glossterm linkend="g_MWC">MWC</glossterm>.  If you require a model not currently available, contact the
              <link linkend="project_manager">Debrief Project Manager</link>, and it will be added to the queue.  If you already hold a copy of the model (as a
              <filename>.wrl</filename> file in
              <acronym>VRML</acronym> format), e-mail it in, which will speed up its inclusion.  If you select a symbol-type for which there isn't currently a model,
              <application>Debrief</application> uses a correctly-oriented cone shape to represent the current location and course.
            </para> 
</note> 
<para>Unfortunately there is not any 3-d data in the sample plots we&apos;ve been using so far, but another sample file does.  Close the current session, open a new, blank, one, and load the data-file named
            <filename>sen_tracks.rep</filename>.  This is a datafile produced using
            <ulink url="http://asset.sourceforge.net">ASSET</ulink>, a simulator under development at PlanetMayo.
          </para> 
<para>Once the tracks are loaded, you will see the view as below:
            <figure float="0">
              <title>View with tracks loaded</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sensor_tracks.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Now initialize the
            <glossterm linkend="g_tote">Tote</glossterm> by pressing Auto-Generate.
            <application>Debrief</application> now knows the time period covered by the tracks.
	  The updated 3D viewer in Debrief now shows 3-dimensional models of the exercise participants.  The model used is taken from the
            <guilabel>SymbolType</guilabel> property of each track (although the default type is
            <guilabel>Submarine</guilabel>).  So before opening the 3-d view, change the
            <guilabel>SymbolType</guilabel> of the
            <emphasis>Frigate</emphasis> track to
            <guilabel>Frigate. </guilabel>To do this, right-click on the track and select
            <guilabel>Frigate</guilabel> from the
            <guilabel>SymbolType</guilabel> drop-down list.  Next press the "View in 3D" button
            <guiicon>
              <inlinegraphic fileref="figures/view3d.gif"/>
            </guiicon>
	    to open the 3-d view window.
          </para> 
</sect2> 
<sect2> 
<title>Initial View</title> 
<para>A new window will open, containing a 3D view of the current track data, as shown below:
            <figure float="0">
              <title>Initial 3D View</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/3d_view.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Enlarge the window until it covers about a quarter of your screen, then arrange the windows so that you can see both Debrief and the 3-d view..
          </para> 
<tip> 
<para>Not all objects viewable on the normal 2-d Debrief plot are applicable in 3-dimensions, but most are.  If one is absent which you think would usefully be shown in 3-d then please approach the
              <link linkend="project_manager">Debrief Project Manager</link>. Additionally it is not always clear whether a 2-d item (such as a labelled annotation) should be visible in 3-d.  Such an instance is a labelled annotation added to the 2-d plot to help the readability of a plot in a report (for example a label placed on a sea-mount).  This labelled annotation may just clutter the 3-d plot, so Debrief only shows labelled annotations when their symbol is visible; change the symbol of a labelled annotation to not visible, and it will dissappear from the 3-d plot.
            </para> 
</tip> 
</sect2> 
<sect2> 
<title>Controlling the view</title> 
<para>The view is controlled with the
            <indexterm>
              <primary>3D View</primary>
              <secondary>Default Views</secondary>
            </indexterm> mouse using the following buttons:
            <table>
              <title>Mouse controls used in 3-D View</title>
              <tgroup cols="2">
                <thead>
                  <row>
                    <entry>Button</entry>
                    <entry>Operation</entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>
                      <mousebutton>Left</mousebutton>
                    </entry>
                    <entry>Rotate plot, effectively changing the current heading</entry>
                  </row>
                  <row>
                    <entry>
                      <mousebutton>Middle</mousebutton> (or
                      <keycombo>
                        <keysym>Alt-</keysym>
                        <keysym>Left</keysym>
                      </keycombo>)
                    </entry>
                    <entry>Zoom in and out of the view</entry>
                  </row>
                  <row>
                    <entry>
                      <mousebutton>Right</mousebutton>
                    </entry>
                    <entry>Pan the plot around the view</entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
          </para> 
<para>In addition to mouse-movement, controls have been added to the view to adjust the current view depth, heading, pan and zoom.  Experiment with moving around the plot using these controls aswell as the mouse.</para> 
<para>The drop-down list provided in the centre of the window provides a list of preset viewpoints. The
            <guilabel>Surface Look</guilabel> and
            <guilabel>Underwater Look</guilabel> viewpoints zoom out to the south of the centre of the plot, positioning the viewer either slightly above, or slightly below the water surface.  The
            <guilabel>Top-Down</guilabel> viewpoint provides  a god's-eye view of the data.  Lastly are a series of viewpoints which each provide a "chase-plane" view of a particular participant.  Thus it is possible to position yourself immediately above and behind a participant as it moves forward through an exercise serial.
          </para> 
<para>Now, to return to the original view, select
            <guilabel>Surface Look</guilabel>
 from the drop-down list.  Next rotate the heading to 270 degrees, take the depth down to -010, and zoom in to view the exercise from the stern of the submarine.
            <figure float="0">
              <title>Adjusted 3-d view</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/3d_view2.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>

          </para> 
<para>A set of properties are also provided to
            <indexterm>
              <primary>3D View</primary>
              <secondary>Editable properties</secondary>
            </indexterm>support the 3-d editing.  The following properties are provided:
          </para> 
<para>
            <informaltable>
              <tgroup cols="2">
                <colspec colnum="1" colname="col1" colwidth="*"/>
                <colspec colnum="2" colname="col2" colwidth="*"/>
                <thead>
                  <row>
                    <entry colname="col1">Parameter</entry>
                    <entry colname="col2">Description</entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry colname="col1">Model Stretch</entry>
                    <entry colname="col2">A scaling factor applied to the models, typically used for presenting broad overviews of a serial</entry>
                  </row>
                  <row>
                    <entry colname="col1">Grid Delta</entry>
                    <entry colname="col2">The spacing to use for the grid plotted on the surface</entry>
                  </row>
                  <row>
                    <entry colname="col1">Show Coastline</entry>
                    <entry colname="col2">Whether to  plot a coastline on the sea surface (not yet implemented)</entry>
                  </row>
                  <row>
                    <entry colname="col1">Show Bathy Lines</entry>
                    <entry colname="col2">Whether to show a wireframe grid representing the surface of the ocean/land</entry>
                  </row>
                  <row>
                    <entry colname="col1">Show Bathy Surface</entry>
                    <entry colname="col2">Whether to show a shaded surface representation of the ocean bottom/land surface.  Points above water are shaded green.</entry>
                  </row>
                  <row>
                    <entry colname="col1">Show Drop Bars</entry>
                    <entry colname="col2">Whether to show drop bars which stretch from a current vessel position vertically up or down to the sea surface, to assist in the spatial separation of vessels.</entry>
                  </row>
                  <row>
                    <entry colname="col1">Show Foggy Ocean</entry>
                    <entry colname="col2">Whether to shade  the ocean surface </entry>
                  </row>
                  <row>
                    <entry colname="col1">Show Sea Surface</entry>
                    <entry colname="col2">Whether to plot a grid on the sea surface</entry>
                  </row>
                  <row>
                    <entry colname="col1">Show Snail Trail</entry>
                    <entry colname="col2">Whether to plot a snail-trail behind each vessel</entry>
                  </row>
                  <row>
                    <entry colname="col1">Show Vessel Status</entry>
                    <entry colname="col2">Whether to show a textual status string for each vessel</entry>
                  </row>
                  <row>
                    <entry colname="col1">Snail Trail Length</entry>
                    <entry colname="col2">The length (in time) of snail trail to plot for each vessel.</entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
          </para> 
</sect2> 
<sect2> 
<title>Step through the serial</title> 
<para>Now re-arrange the 3-d plot and the
            <application>Debrief</application> plot so you have a clear view of both, and move the time-stepper forward a single step.  You will see each 3-d vessel representation move.  As you move through the track using the button on the Time Stepper, note the highlights on the 3-D  track moving.  Now push the "Step Automatically" button, to make the plot step forward on its own, leaving us to play.
          </para> 
<para>Whilst the plot is stepping forward, switch your attention back to the 3-d view.  Experiment with using the 3 mouse buttons (or two plus the alt-key) and zoom in on the current point on the red-track.  Learning to coordinate these three operations may seem difficult, but you&apos;ll soon pick it up.
          </para> 
<para>The data-file we&apos;re using isn&apos;t all that interesting in this view, since neither participant reacts in response to a depth-change from the other.  But, 3-d views of real exercise results can be particularly insightful, clearly illustrating a weapon losing contact of its target due to changing depth layer, or one target gaining detections of another as it moves into the same layer.
          </para> 
</sect2> 
<sect2> 
<title>Close</title> 
<para>Click on the close-button at the top-right of the 3-d view to close the panel.
          </para> 
</sect2> 
<sect2> 
<title>Memory Leaks</title> 
<para>The current version of the 3D libraries used in this viewer contains memory leaks.  In general memory leaks are tidied up in each revision of Java-3d, so it is in your interest to try to keep up to date with the newest releases.
            <footnote>
              <para>Memory leaks occur when an application allocates memory to store data but fails to return the memory after the operation is complete.  This results in the application&apos;s memory allocation growing.  This may be overcome by exiting and re-starting Debrief, during which all allocated memory is cleared, sometimes resulting in large memory usage by
                <application>Debrief</application> after viewing several plots. This
may be overcome by closing and restarting
                <application>Debrief</application> if a noticeable slow-down is
observed. New libraries will be adopted as soon as a fix is available
              </para> 
</footnote> </para> 
</sect2> 
<sect2> 
<title>Plot management</title> 
<para>The objects in the 3-d plot reflect the structure in the Layer Manager, hence, to hide/reveal a set of objects in 3-d just switch their layer off in the Layer Manager.
            <tip>
              <para>The objects in the 3-d view are a "cloned" set of the objects contained in the Layer Manager at the point at which
                <guilabel>Show 3d View</guilabel> was selected. Thus is it likely that moving objects between layers once the 3-d plot is open may not be reflected in the 3-d view.  If extensive restructuring has been conducted in the Layer Manager and you wish the 3-d view to reflect this, close and re-open the view.
              </para> 
</tip> 
<note> 
<para>The 3-d view now includes bathymetric data
                <indexterm>
                  <primary>3D View</primary>
                  <secondary>Bathymetric Data</secondary>
                </indexterm>, though this is only shown if the bathy data is already shown in the 2-d plot. Obviously the 3-d view runs more smoothly with less data, so hide the 2-d bathymetry to remove it from the 3-d view.
              </para> 
</note> 
<tip> 
<para>The 3-d view contains text labels which automatically orientate themselves towards the viewer.  This orientation is computationally expensive (it is not a collection of 3-d objects being mathematically re-oriented, but a 2-d image being rescaled in 3-dimensions).  The plot will be significantly slowed down if many text labels are set to visible.  A good way of overcoming this problem is to set the parent layer to not-visible, then work through the items on that layer switching the label to not visible.  Finally switch the layer back to visible.  This method works quickly because time is not spent </para> 
</tip> </para> 
<para><?xm-replace_text {para}?></para> 
</sect2> 
</sect1>
      <!--  Track/time toolbox                                           -->
<sect1 id="track_toolbox"> 
<title id="track_toolbox_title">Track &amp; Time toolbox</title> 
<para>The Track &amp; Time toolbox acts a
          <indexterm>
            <primary>Toolbox</primary>
            <secondary>Introduction</secondary>
          </indexterm>multi-purpose panel providing access to a number of operations.
          <figure float="0">
            <title>The Track &amp; Time toolbox</title>
            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/time_toolbox.gif"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>
        </para> 
<para>
 The general sequence for using these commands is as follows:
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>Select the operation to perform</para> 
</listitem> 
<listitem> 
<para>Select which tracks/buoyfields/graphic annotations the operation is to be performed on</para> 
</listitem> 
<listitem> 
<para>Select the time period for which the operation is to cover</para> 
</listitem> 
<listitem> 
<para>Press the "Apply" button</para> 
</listitem> 
</orderedlist> As you will see from the screenshot of the Track &amp;
Time toolbox, a panel to the right of the list of operations provides
details of each operation. These details include the purpose of the
operation together with the steps to be taken. </para> 
<sect2 id="z_zero_times"> 
<title>T-Zero times</title> 
<para>The
            <guibutton>Set time zero</guibutton> command
            <indexterm>
              <primary>Toolbox</primary>
              <secondary>Set Time Zero</secondary>
            </indexterm>
            <indexterm>
              <primary>Time Zero</primary>
              <secondary>Set time zero on Toolbox</secondary>
            </indexterm>reformats the labels on the plot to follow the standard presentation for weapon-analysis plots; where absolute times are replaced by times relative to a specific event (
            <glossterm linkend="g_tzero">T-Zero</glossterm>)- such as Weapon Splash.
          </para> 
<para>
	   When the
            <guibutton>Set time zero</guibutton> command is started, the following sequence of events occur:
            <orderedlist inheritnum="ignore" continuation="restarts">
              <listitem>
                <para>You are invited to enter the frequency in seconds at which symbols are drawn on the indicated tracks.</para> 
</listitem> 
<listitem> 
<para>You are invited to enter the frequency in seconds at which location labels are displayed for the indicated tracks.  In the labels at this indicated frequency the text is set to the elapsed time in seconds since the time-zero time.</para> 
</listitem> 
</orderedlist> </para> 
<para>These steps are applied to all of the track points between the Start time (which is used as T-Zero) and the Finish time.
          </para> 
<note> 
<para>Note also that when the date format in the
              <guilabel>Time Stepper</guilabel> is set to
              <emphasis>T+ SSS</emphasis> the current time of the time stepper is no longer displayed as absolute time, but as elapsed seconds since the time currently displayed in the Start Time on this panel, or elapsed minutes and seconds (
              <emphasis>T+ MM:SS</emphasis>).
            </para> 
</note> 
<note> 
<para>Following analysis using t-zero data labels, it is possible to return a set of track labels to their default (as automatically assigned when imported from REP).  Reset the track labels by selecting
              <guilabel>Reset DTG Labels</guilabel> from the edit track popup menu or property window.
            </para> 
</note> 
</sect2> 
<sect2 id="filter_to_period"> 
<title>Filter to time period</title> 
<para>The
            <guibutton>Filter to time period</guibutton> hides all data
            <indexterm>
              <primary>Toolbox</primary>
              <secondary>Filter to time period</secondary>
            </indexterm>points on the selected tracks which are before the current Start time, or after the current End time.  The range of the time sliders themselves then shrinks to this new period.  The range of the time sliders can be reset back out to cover the full period of the currently loaded data by pressing the Reset button.
            <note>
              <para>It is quite possible to apply a time filter such that all of the points in a short track become hidden.  In such circumstances the track name is also hidden, but revealed as soon as a single data point becomes visible.</para> 
</note> </para> 
</sect2> 
<sect2 id="show_time_vars"> 
<title id="show_time_vars_title">Show time-related variables</title> 
<para>The
            <guibutton>Show Time Variables</guibutton> operation
            <indexterm>
              <primary>Toolbox</primary>
              <secondary>Show time variables</secondary>
            </indexterm> produces an x-y plot of a set of calculated data.  After pressing the
            <guibutton>Apply</guibutton> button the user is invited to indicate which track is to be used as the primary
            <glossterm linkend="g_track">track</glossterm>,  and which calculation is to be plotted.  The example below shows the results of a
            <guilabel>Range</guilabel> calculation between two tracks.  Note that dragging the mouse downwards in a rectangle inside the plot zooms in on the data, dragging the mouse upwards into a rectangle zooms out on the data, and that the
            <guibutton>Fit to Window</guibutton> button zooms out to show all of the current data.

   Where data is not present, a gap is inserted into the data-line.
            <figure float="0">
              <title>View of time-variable plot</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/time_variable_plot.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<note> 
<para>
              <application>Debrief</application> performs special processing depending on whether the selected items contain valid time data or not.  In general, when an annotation (such as a label) does not contain DTG data Debrief assumes that it is valid throughout the selected time period.
              <application>Debrief</application> produces the time-variable plot according to the following tables:
              <table frame="sides">
                <title>Relative Calculations (range, bearing, etc)</title>
                <tgroup cols="3">
                  <thead>
                    <row>
                      <entry> </entry>
                      <entry>Primary contains DTG</entry>
                      <entry>Primary does not contain DTG</entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>Secondary contains DTG</entry>
                      <entry>For each point on secondary, find nearest primary point (in time), use these for calculation</entry>
                      <entry>For each point on secondary, use single primary point for calculation</entry>
                    </row>
                    <row>
                      <entry>Secondary does not contain DTG</entry>
                      <entry>For each point in primary, use single secondary point for calculation.</entry>
                      <entry>Produce single calculations at start &amp; end of time period</entry>
                    </row>
                  </tbody>
                </tgroup>
              </table>

              <table>
                <title>Absolute Calculations (range, bearing, etc)</title>
                <tgroup cols="2">
                  <thead>
                    <row>
                      <entry> </entry>
                      <entry>Calculation</entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>Data series contains DTG</entry>
                      <entry>For each point on series, calculate result</entry>
                    </row>
                    <row>
                      <entry>Data series does not contain DTG</entry>
                      <entry>Produce single calculations at start &amp; end of time period</entry>
                    </row>
                  </tbody>
                </tgroup>
              </table>
            </para> 
</note> 
<para>The
            <guibutton>WMF</guibutton> button writes the current graph to a Windows Metafile in the current WMF_Directory (as configured in the
            <link linkend="debrief_props_title">Debrief properties file</link>, described in Section
            <xref linkend="debrief_props"/>, titled
            <xref linkend="debrief_props" endterm="debrief_props_title"/>).
          </para> 
<para>The
            <guibutton>Edit</guibutton> button opens a
            <link linkend="g_property_window">property window</link> allowing you to control the presentation of the time-variable graph.
            <figure float="0">
              <title>View of time-variable plot</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/time_variable_plot_options.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>These properties control the following:
            <informaltable>
              <tgroup cols="2">
                <colspec colnum="1" colname="col1" colwidth="*"/>
                <colspec colnum="2" colname="col2" colwidth="*"/>
                <thead>
                  <row>
                    <entry colname="col1">Parameter</entry>
                    <entry colname="col2">Description</entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry colname="col1">DataLineWidth</entry>
                    <entry colname="col2">The width to plot the data-lines on the graph</entry>
                  </row>
                  <row>
                    <entry colname="col1">DateTickUnits</entry>
                    <entry colname="col2">The interval (and format) to use on the date axis</entry>
                  </row>
                  <row>
                    <entry colname="col1">RelativeTimes</entry>
                    <entry colname="col2">Whether to plot absolute or relative times (used when analysing time-zero data).  See
                      <xref linkend="time_var_rel_times"/>
                    </entry>
                  </row>
                  <row>
                    <entry colname="col1">ShowSymbols</entry>
                    <entry colname="col2">Whether to show datum symbols (useful to indicate difference data recording rates)</entry>
                  </row>
                  <row>
                    <entry colname="col1">Title</entry>
                    <entry colname="col2">The Title of the graph</entry>
                  </row>
                  <row>
                    <entry colname="col1">X_AxisTitle</entry>
                    <entry colname="col2">The x-axis label on the graph</entry>
                  </row>
                  <row>
                    <entry colname="col1">Y_AxisTitle</entry>
                    <entry colname="col2">The y-axis label on the graph</entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
          </para> 
<sect3> 
<title>Time-Variable Plot Tracker-Bar</title> 
<para>If there are tracks on the Debrief
              <glossterm linkend="g_tote">Tote</glossterm>, a vertical bar is drawn through the plot at the correct time.  If the current time on the Tote occurs before the earliest time on the Time-Variable plot then the bar is drawn at the minimum value, and drawn over the maximum value if the current time on the Tote occurs after the latest time value.  The bar redraws itself automatically as the time in the Tote changes.
            </para> 
</sect3> 
<sect3 id="time_var_rel_times"> 
<title>Analysing time-zero data in time-variable plot</title> 
<para>By default the
              <indexterm>
                <primary>Time Zero</primary>
                <secondary>in time-variable plots</secondary>
              </indexterm>time-variable plot shows absolute times (e.g.
              <computeroutput>12:34.00</computeroutput>).  Some forms of analysis conducted with Debrief rely on the use of relative times, such as a weapon firing where T-Zero is the time of fire,  as described in
              <xref linkend="z_zero_times"/>. To show these relative times on the lower axis of the time-variable plot, select
              <guilabel>RelativeTimes</guilabel> from the time-variable plot property window. Once this mode is selected, times will be shown relative to the last time-zero value set.  By default, the times are shown in a normal
              <computeroutput>HH:mm:ss</computeroutput> format, but the
              <guilabel>DateTickUnits</guilabel> drop-down list contains a number of display formats which specifically support presentation of elapsed times.
            </para> 
</sect3> 
</sect2> 
<sect2> 
<title>Copy data to clipboard</title> 
<para>The details of copying data to the
            <indexterm>
              <primary>Toolbox</primary>
              <secondary>Copy data to clipboard</secondary>
            </indexterm>clipboard are covered later in
            <xref linkend="copy_data_clip"/> under
            <link linkend="copy_data_clip" endterm="copy_data_clip.title"></link>
          </para> 
</sect2> 
<sect2 id="reformat_positions"> 
<title id="reformat_positions.title">Reformat Positions</title> 
<para>The Reformat Positions operation
            <indexterm>
              <primary>Toolbox</primary>
              <secondary>Reformat Positions</secondary>
            </indexterm>allows you to reformat one or more tracks and annotations.  The algorithm inspects the currently selected objects and produces the set of editable properties common to them: so if a track and an annotation are shown you will be offered the set of properties which apply to both of them - such as the colour, the label, and whether or not they are visible.
          </para> 
<para>Suppose that you want to change the colour of a particular track between two times, possibly to indicate an SSK&apos; snort period. First select the SSK track, then the time period for which it was snorting.  Next select
            <guibutton>Apply</guibutton>.  A dialog will open asking you what characteristic you wish to change, select
            <guilabel>Color</guilabel> from this. The next dialog box provides a list of possible values for the selected characteristic: a list of colours in this case. After this selection the relevant positions will be updated.  Use
            <guibutton>Undo</guibutton> to cancel any changes created this way. An example of coloured tracks can be seen in
            <xref linkend="load_initial_data"/> under
            <link linkend="load_initial_data" endterm="load_initial_data.title"></link>
          </para> 
<tip> 
<para>When running the
              <guilabel> Reformat Positions</guilabel> operation a choice is provided which allows you to decide whether to apply the reformatting to the whole track or only the visible position fixes.  Significantly this allows you to do the following:
              <orderedlist>
                <listitem>
                  <para>Select all position fixes in a track and apply mm:ss label formatting</para> 
</listitem> 
<listitem> 
<para>Edit the track to only show labels and fixes for every hour (hiding the others)</para> 
</listitem> 
<listitem> 
<para>User reformat positions to apply hh:mm formatting to all visible positions</para> 
</listitem> 
<listitem> 
<para>Show all labels and symbols for track - with the result that all positions have min/sec labels, but with the hourly fixes having hour/min labels.</para> 
</listitem> 
</orderedlist> </para> 
</tip> 
</sect2> 
<sect2> 
<title>Hide/Reveal Objects</title> 
<para>This operation allows you to select a series of objects from the track/time toolbox and collectively set them to be visible or invisible.  Their previous state is remembered by Debrief so you can quickly and easily perform an
            <guibutton>Undo</guibutton> operation to reset them.
          </para> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="exporting_data"> 
<title>Exporting Data</title> 
<sect1> 
<title>Exporting images</title> 
<sect2> 
<title>Export Images</title> 
<para>In addition to
            <indexterm>
              <primary>WMF</primary>
              <secondary>Writing to File</secondary>
            </indexterm>conducting tactical analysis,
            <application>Debrief</application> allows the analyst user to create plots for insertion into
            <application>Microsoft Windows</application> applications; particularly
            <application>Word</application>.
          </para> 
<para>To do this load the data into
            <application>Debrief</application> and format the plot, adding scales, grids, coastlines, and annotations as desired.
          </para> 
<para>To export this image as a Windows Metafile (WMF), press the
            <guibutton>Write WMF</guibutton> button:
            <guiicon>
              <inlinegraphic fileref="figures/write_wmf.gif"/>
            </guiicon>
          </para> 
<para>This will place the image in a time-stamped file named
            <filename>d3_minute_second.WMF</filename>, located in the directory indicated in the
            <application>Debrief</application> properties file.  If the location is not specified in the properties file, the
            <filename>WMF</filename> image will be created in the
            <application>Debrief</application> installation directory.
          </para> 
<para>Also, don't forget that time-variable graphs produced by the
            <link linkend="track_toolbox">Track-Time toolbox</link> can be exported to WMF aswell, as described in  Section
            <xref linkend="show_time_vars"/>, titled
            <xref linkend="show_time_vars" endterm="show_time_vars_title"/> .
          </para> 
</sect2> 
</sect1> 
<sect1 id="vrml"> 
<title>Virtual reality files</title> 
<sect2> 
<title>History</title> 
<important> 
<para>Now that
              <application>Debrief</application> includes its own 3-D viewer, the export to 3-D functionality has been removed.  Should you have any significant desire for this functionality to be replaced, please contact the administrator.
            </para> 
</important> 
</sect2> 
<sect2> 
<title>
            <abbrev>VRML</abbrev>
          </title> 
<para>Debrief images can also be exported in the
            <indexterm>
              <primary>VRML</primary>
            </indexterm>Virtual Reality Markup Language (
            <abbrev>VRML</abbrev>) into files with the
            <filename>.WRL</filename> suffix.  Provided a suitable viewer is installed on the viewing PC (such as the free
            <application>CosmoPlayer</application> or
            <application>Superscape Viewer</application> applications), users can view
            <application>Debrief</application> plots in 3D outside the
            <application>Debrief</application> application.
          </para> 
<para>
 The WRL file is created in the
            <application>Debrief</application> installation directory by pressing the "Write VR" button:
            <guiicon>
              <inlinegraphic fileref="figures/write_vr.gif"/>
            </guiicon>
          </para> 
</sect2> 
</sect1> 
<sect1 id="calc_data"> 
<title>Calculated data</title> 
<sect2> 
<title>Tote controls</title> 
<para>As you have seen earlier, the
            <glossterm linkend="g_tote">Tote</glossterm> performs a number of
            <indexterm>
              <primary>Tote</primary>
              <secondary>Calculated Data</secondary>
            </indexterm>calculations while you are stepping through a plot.  Of the two symbols at the foot of each secondary column in the Tote, the first one is the "remove" button, which removes that track from the Tote.
            <figure float="0">
              <title>The controls on the Tote</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/Tote.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>There is no need to remove the primary track from the
            <glossterm linkend="g_tote">Tote</glossterm>, just make another track the primary track by right-clicking on it in the plot.
          </para> 
</sect2> 
<sect2> 
<title>Comma-separated Variables</title> 
<para>The second symbol is the "copy" symbol which copies the current column of data to the clipboard in a comma-separated-variable text format.
          </para> 
</sect2> 
<sect2> 
<title>
            <application>Microsoft Excel</application>
          </title> 
<para>This information can be pasted directly into a spreadsheet such as
            <application>Microsoft Excel</application>.
          </para> 
<para>Alternatively,
            <application>Debrief</application> can output a whole series of calculated data for each track in the
            <glossterm linkend="g_tote">Tote</glossterm>.  To do this, you must enter the Track &amp; Time Toolbox panel by clicking the right-most button on the second row of buttons shown above:
            <guiicon>
              <inlinegraphic fileref="figures/track_time_toolbox.gif"/>
            </guiicon>
          </para> 
</sect2> 
<sect2 id="copy_data_clip"> 
<title id="copy_data_clip.title">Copying data to clipboard</title> 
<para>The
            <guibutton>Copy data to clipboard</guibutton> operation within the
            <guilabel>Track &amp; Time Toolbox</guilabel> performs calculations between a number of tracks, outputting the data to the clipboard in tab-separated variable format.  This textual data is ideally formatted for further analysis in
            <application>Excel</application>.
          </para> 
<para>A header line is written first, which indicates the contents of each column:
            <simplelist type="horiz">
              <member>Track Time(hhmmss)</member>
              <member>Depth(metres)</member>
              <member>Speed(Knots)</member>
              <member>Course(degs)</member>
              <member>Range(yards)</member>
              <member>Bearing(degs)</member>
              <member>Rel Bearing(degs - using
                <varname>REL_BEARING_FORMAT</varname> described in
                <xref linkend="debrief_properties"/>)
              </member>
              <member>Brg Rate(deg/min)</member>
              <member>Color (for this track point)</member>
              <member>Name</member>
              <member>PrimaryName</member>
            </simplelist>
          </para> 
<para>The results from the primary track are listed first, which (as in the
            <glossterm linkend="g_tote">Tote</glossterm>) do not show results of calculated operations:
            <screen>CARPET 12/Dec/95 05:00:00 000 02.00 269.7 n/a n/a n/a n/a 0500 0500</screen>
          </para> 
<para>Lastly the secondary tracks are listed:
            <screen>
 BUNKUM 12/Dec/95 05:50:00 000 00.00 000.0 12381 311.0 R49.0 R0.264 F5 0550</screen>
          </para> 
<tip> 
<para>The Colour parameter shows the colour of the track point used in that calculation.  On occasion analysts colour a track according to whether that participant is in contact or not.  Exporting the colour flag to Excel allows the post-analysis data to be filtered according to periods in contact - or any other time-dependent aspect specified by the analyst.  The applying of a particular colour to sections of track is performed within the Track-Time toolbox as described in
              <xref linkend="reformat_positions"/>.
            </para> 
</tip> 
<note> 
<para>The last two columns output give identifier information:  the first of these is the name of the current item in this
              <glossterm linkend="g_track">track</glossterm>, and the second is the point in the primary
              <glossterm linkend="g_track">track</glossterm> nearest to the current time stamp: that-is the point in the primary track which has been used for the calculated results.
            </para> 
</note> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="handling_buoyfields"> 
<title>Handling Buoyfields</title> 
<sect1> 
<title>Introduction to buoyfields</title> 
<sect2> 
<title>Buoyfields</title> 
<para>
            <application>Debrief</application> provides functionality
            <indexterm significance="preferred">
              <primary>Buoy Fields</primary>
              <secondary>Introduction</secondary>
            </indexterm>to ease the creation of Sonar Buoyfields, that is a pattern of sonar buoys which are laid out in a particular pattern.  In addition to the geospatial characteristics of the pattern to be created (such as radius, or row spacing)
            <application>Debrief</application> also accepts temporal (such as time of the first buoy and buoyfield lifetime) and default formatting characteristics (such as colour and symbol to use).  After field creation, the properties used for building the field are largely unavailable, but the buoys can be repositioned or time-stamped directly.
          </para> 
<para>Although it may not be clearly visible in the following diagrams, all of the buoyfields are located with reference to a kingpin.  This kingpin is located relative to a Jig Point (allowing for small, quick adjustments in the location of the field prior to dropping), as specified by a range and bearing.
          </para> 
<para>Debrief supports the following patterns of buoyfield:
          </para> 
<sect3> 
<title>Barrier</title> 
<para>A Barrier is a straight line of buoys
              <figure float="0">
                <title>Example of a barrier buoy-pattern</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/field_barrier.gif"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </para> 
</sect3> 
<sect3> 
<title>Wedge</title> 
<para>A Wedge is a bent-line barrier of buoys, specified by buoy spacing and two true bearings.  The first bearing is from the kingpin to the centre of the wedge and the second bearing is from the centre point to the last buoy.  In
              <application>Debrief</application>, theta-one is termed the Right Hand Orientation (Orientation1) and theta-two is termed the Left Hand Orientation (Orientation2).
              <application>Debrief</application> allows even or odd numbers of buoys, and will ensure that the sides of the wedge remain symmetric.
              <figure float="0">
                <title>Example of a  Wedge buoy-pattern</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/field_wedge.gif"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </para> 
</sect3> 
<sect3> 
<title>Field</title> 
<para>A Field is a fixed pattern which contains more than two rows of buoys.  The pattern is specified by buoy and row spacing, a true bearing, and an indication of whether the successive rows fall to the left, right, or centre of the kingpin.  Note that whilst the diagram shows and the Naval specification order includes the Field Direction parameter, this is not required for buoyfield construction and is not taken from the user.  Although the Field Direction is contained in the buoyfield creation order, it is included as an indication of expected target direction of travel, and has no graphic meaning.
              <figure float="0">
                <title>Example of a Field buoy-pattern</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/field_field.gif"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </para> 
<para>The Left, Right, or Centre offset value is interpreted in the following way:
              <simplelist type="vert">
                <member>
                  <emphasis>Left</emphasis>: is interpreted as the "alternate" rows starting offset a 1/2 buoy width further in the field orientation
                </member>
                <member>
                  <emphasis>Right</emphasis>: is interpreted as the "alternate" rows being offset a 1/2 buoy width backwards along the field orientation
                </member>
                <member>
                  <emphasis>Centre</emphasis>: in interpreted as there being no offset in successive rows.
                </member>
              </simplelist>
            </para> 
</sect3> 
<sect3> 
<title>Circle</title> 
<para>The Circle pattern describes a pattern of buoys arranged in a circle, specified by kingpin, radius, and number of buoys.  An orientation parameter is also used, which indicates the bearing of the first buoy from the kingpin (centre), since it may not necessarily be to the North.  A flag indicates if the circle is being laid clockwise or not.
              <figure float="0">
                <title>Example of a Circle buoy-pattern</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/field_circle.gif"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </para> 
</sect3> 
<sect3> 
<title>Arc</title> 
<para>The Arc pattern describes a pattern of buoys arranged in a segment of a circle.  In addition to the kingpin and radius, an orientation parameter indicates the direction of the mid-point of the arc from the kingpin, and an arc value indicates the arc of coverage each side of the orientation. A flag indicates if the circle is being laid clockwise or not.
              <figure float="0">
                <title>Example of an Arc buoy-pattern</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/field_arc.gif"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </para> 
</sect3> 
</sect2> 
</sect1> 
<sect1 id="create_buoys"> 
<title>Creating buoyfields</title> 
<sect2> 
<title>Toolbar</title> 
<para>A single toolbar
            <indexterm>
              <primary>Buoy Fields</primary>
              <secondary>Creating Buoy Fields</secondary>
            </indexterm>button is used to create all
            <indexterm>
              <primary>Annotations</primary>
              <secondary>Buoyfields</secondary>
            </indexterm>types of buoyfield:
            <guiicon>
              <inlinegraphic fileref="figures/buoy.gif"/>
            </guiicon>
          </para> 
<para>After clicking on this button, a dialog pops up which invites you to select one of the buoyfield patterns listed on the previous page: using a drop-down list.</para> 
<para>After selecting one of the patterns a set of editable properties are displayed in the
            <glossterm linkend="g_property_window">property editor</glossterm> window.
          </para> 
</sect2> 
<sect2> 
<title>Properties</title> 
<para>   A number of the properties edited
            <indexterm>
              <primary>Buoy Fields</primary>
              <secondary>Properties</secondary>
            </indexterm> from this window are common to all buoyfield types:
          </para> 
<para>

            <variablelist>
              <varlistentry>
                <term>BuoyLifeTime</term>
                <listitem>
                  <para>the time for which the buoys remain active (represented as the time between the start and finish DTG)</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Color</term> 
<listitem> 
<para>the colour to plot the buoys and the buoyfield label</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>JigPoint</term> 
<listitem> 
<para>the location from which this buoyfield is referenced. As in any location, the jig point can be edited by double-clicking on the plot or using an edit panel.  Note that the depth assigned for the jig point is used as the depth for all of the buoys.  If the jig point is assigned by double-clicking, the depth value can then be set by clicking on the "Edit" button.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>KingpinBearing/Range</term> 
<listitem> 
<para>the range and bearing of the kingpin for this pattern from the jig point</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>LabelVisible</term> 
<listitem> 
<para>whether to display the labels for buoys in this buoyfield</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Name</term> 
<listitem> 
<para>the name of this buoyfield</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Number</term> 
<listitem> 
<para>the total number of buoys in this field</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>StartDateTimeGroup</term> 
<listitem> 
<para>the DTG of the first buoy laid</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>SymbolScale</term> 
<listitem> 
<para>the scale of the symbols drawn to represent buoys.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>SymbolType</term> 
<listitem> 
<para>the type of symbol to be used to represent buoys</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>TimeDelta</term> 
<listitem> 
<para>the time between each buoy dropped (each buoy will have the DTG of the previous buoy plus this TimeDelta, except the first buoy which takes the value of StartDateTimeGroup)</para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
<para>      Once you have completed editing these parameters, press the
            <guibutton>Build</guibutton> button, which will create a buoyfield using the defaults indicated.  The properties for the buoyfield as a whole will open up in the properties window.  From these properties you make any necessary corrections to the name of the buoyfield, or the location of the name relative to the buoys themselves.
          </para> 
<para>  The buoyfield which is produced will look something similar to that shown below.       </para> 
</sect2> 
<sect2> 
<title>Example Buoyfield</title> 
<para>
            <figure float="0">
              <title>Example of a buoy-pattern</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/dropped_buoyfield.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
	     The buoys themselves are represented
	   using the Label type described elsewhere in this
	   documentation.  As Label objects, the user is able to
	   right-click on any buoy and interactively edit the label
	   colour/location, or double-click on the symbol to open the
	   label up in the editor to access the full set of parameters.
          </para> 
</sect2> 
</sect1> 
<sect1 id="using_buoyfields"> 
<title>Using buoyfields</title> 
<sect2> 
<title>Tote</title> 
<para>Buoyfields have some similar properties to vessel tracks when placed on the
            <glossterm linkend="g_tote">Tote</glossterm>.
          </para> 
<para>Once a buoyfield is made a
            <guilabel>Primary</guilabel> or
            <guilabel>Secondary</guilabel> track, a highlight is drawn around the buoy at or immediately after the current time.  Additionally, if the buoyfield is designated as a secondary track the Tote continuously displays it&apos;s range and bearing from the current location on the primary track.
          </para> 
</sect2> 
<sect2> 
<title>Analysis</title> 
<para>Since buoyfields are essentially handled in the same way as Tracks, the full functionality of the
            <link linkend="track_toolbox">Track &amp; Time Toolbox</link> (accessed from the
            <guilabel>Tote</guilabel>) are available, so graphic plots can be produced and calculated data copied to the clipboard using Buoy data.
          </para> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="symbol_sets"> 
<title>Symbol Sets</title> 
<sect1> 
<title>Debrief Symbol Sets</title> 
<sect2 id="intro_to_sym_sets"> 
<title>Introduction</title> 
<para>A set of symbols is provided within
            <application>Debrief</application>.  The symbols
            <indexterm>
              <primary>Symbol Sets</primary>
            </indexterm> can either be attached to a text label, or used to highlight a current vessel location when stepping through tracks.
          </para> 
<para>Twenty-two Symbols are provided in 3 sizes.  When the 2 smaller sizes are shown, any internal characters (as used in the sonar buoys) are not plotted.

            <figure float="0">
              <title>Symbols provided by
                <application>Debrief</application>
              </title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/d3_symbols.gif"/>
                </imageobject>
              </mediaobject>
            </figure>
          </para> 
</sect2> 
<sect2> 
<title>Use in buoy patterns</title> 
<para>Symbols are assigned to
            <indexterm>
              <primary>Symbol Sets</primary>
              <secondary>in Buoy Fields</secondary>
            </indexterm> buoys in a buoy pattern at the
            <guilabel>Pattern Builder</guilabel> stage.  After selecting the type of pattern to be created the user is able to select which type of symbol is used for the buoys (at this stage only the buoy-related symbols are provided).  For patterns which include a kingpin (Field, Barrier, Wedge), a kingpin symbol is plotted for the first buoy.
          </para> 
</sect2> 
<sect2> 
<title>Use in labels</title> 
<para>Any label placed on the plot has a symbol type property (although the symbol itself may not be visible).  The symbol can be changed through the properties window, or by right-clicking on the label on the plot.
          </para> 
</sect2> 
<sect2> 
<title>Use in tracks</title> 
<para>The final area where symbols are used is when stepping through tracks.  Each vessel track has a symbol type property which is shown when the plot has SymbolHighlighter selected as the current highlighter.
          </para> 
<para>To access this property, select the Properties button on the
            <glossterm linkend="g_tote">Tote</glossterm> (first button on bottom row), and change the current
            <glossterm linkend="g_highlighter">highlighter</glossterm> to "SymbolHighlighter".  Now the current data point on each track will be shown using the symbol for that track.
            <guiicon>
              <inlinegraphic fileref="figures/PropertiesBtn.gif"/>
            </guiicon>
          </para> 
<tip> 
<para>By switching to Snail mode and reducing the reducing the Trail Length to zero, a GOP-type plot can be shown.
            </para> 
</tip> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="external_datasets"> 
<title>External Datasets</title> 
<sect1> 
<title>Installing VPF Data</title> 
<sect2> 
<title>Introduction</title> 
<para>The
            <glossterm linkend="g_vpf">VPF</glossterm>
            <footnote>
              <para>VPF(TM) is a Registered Trademark of US
                <indexterm>
                  <primary>VPF Data</primary>
                  <secondary>Introduction</secondary>
                </indexterm>National Imagery and Mapping Agency
              </para> 
</footnote> standard provides <application>Debrief</application>
users with the ability to display the contents of a number of
different vectored databases. </para> 
<para>One of the databases, the Vector Map (VMap) Level O  is an unclassified global database of many features, including coastlines, depth and elevation contours.  This is the favoured VPF database for use in
            <application>Debrief</application>.  But note that
            <application>Debrief</application> makes no assumptions of or optimisations for the VMap data - any VPF data source can be used.
            <application>Debrief</application> can also import Digital Nautical Chart (DNC) databases.   The Digital Nautical Chart is produced by the National Imagery and Mapping Agency (NIMA) and is an unclassified, vector-based digital database containing maritime significant features essential for safe marine navigation.
          </para> 
<para>Here is an introduction to VPF from the US National Imagery and Mapping Agency&apos;s web site (
            <ulink url="http://www.nima.mil">http://www.nima.mil</ulink>):
            <blockquote>
              <para>
                <informaltable frame="none">
                  <tgroup cols="2">
                    <colspec colname="c1"/>
                    <colspec colname="c2"/>
                    <colspec colname="c3"/>
                    <tbody>
                      <row>
                        <entry namest="c1" nameend="c2">The Vector Product Format (
                          <glossterm linkend="g_vpf">VPF</glossterm>) is a standard format, structure, and organization for large geographic databases that are based on a georelational data model and are intended for direct use. VPF is designed to be compatible with a wide variety of applications and products. VPF allows application software to read data directly from computer-readable media without prior conversion to an intermediate form. VPF uses tables and indexes that permit direct access by spatial location and thematic content and is designed to be used with any digital geographic data in vector format that can be represented using nodes, edges, and faces.
                        </entry>
                      </row>

                      <row>
                        <entry>
                          <inlinegraphic fileref="figures/vpf.jpg"/>
                        </entry>
                        <entry>VPF defines the format of data objects, and the georelational data model provides a data organization within which software can manipulate the VPF data objects. A Product Specification corresponding to a specific database product determines the precise contents of feature tables and their relationships in the database. In this context, each separate product or application is defined by a Product Specification implemented by using VPF structures.</entry>
                      </row>

                      <row>
                        <entry namest="c1" nameend="c2">VPF data is stored in a structure described in the Military Standard, Vector Product Format, MIL-STD-2407 . The Standard specifies the structure for directories, tables, table columns, table join relationships, and media exchange conventions for all VPF data. The data structure itself can be thought of as a template or skeleton within which the geospatial features and metadata are stored. While the Standard describes the structure, it does not describe the contents of a set of VPF data; this is the role of "VPF Product Specifications."</entry>
                      </row>

                    </tbody>
                  </tgroup>
                </informaltable>
              </para> 
</blockquote> </para> 
</sect2> 
<sect2> 
<title>Introduction to VMAP Level 0</title> 
<para>Vector Map (VMap) Level 0 is an updated and improved version of the National Imagery and Mapping Agency&apos;s (NIMA) Digital Chart of the World (DCW).
          </para> 
<para>The primary source for the database is the 1:1,000,000 scale Operational Navigation Chart (ONC) series co-produced by the military mapping authorities of Australia, Canada, United Kingdom, and the United States. The complete database is available on a set of four CD-ROM&apos;s and contains more than 1,800 megabytes of vector data organized into 10 thematic layers. VMap Level 0 includes major road and rail networks, hydrologic drainage systems, utility networks (cross-country pipelines and communication lines), major airports, elevation contours, coastlines, international boundaries and populated places. VMap Level 0 includes an index of geographic names to aid in locating areas of interest. VMap Level 0 is accessible directly from the CD-ROM or can be transferred to a hard drive and used in many geographic information system (GIS) applications.
          </para> 
</sect2> 
<sect2> 
<title>Obtaining VPF data</title> 
<para>
            <glossterm linkend="g_vpf">VPF</glossterm> data can be obtained from a
            <indexterm>
              <primary>VPF Data</primary>
              <secondary>Obtaining VPF data</secondary>
            </indexterm> number of different sources, although the main resource is the
            <ulink url="http://www.nima.mil">NIMA</ulink> web-site itself.
          </para> 
<para>In the UK, the Director General of Military Survey (DG Mil Survey) were able to provide the VMap database (charged to a Royal Navy UIN).</para> 
<para>If/when you find other sources please provide feedback and this page will be updated.</para> 
<para>Searching the Internet will undoubtedly provide other sources for the information - it&apos;s probably worth shopping around.  Since the data is in the public domain agencies only have to charge a "handling fee".</para> 
</sect2> 
<sect2> 
<title>Storing VPF data</title> 
<para>
            <application>Debrief</application> can read VPF
            <indexterm>
              <primary>VPF Data</primary>
              <secondary>Where to store the data</secondary>
            </indexterm>data directly from CD-Rom but copying it to your hard disk provides the following advantages:
            <itemizedlist>
              <listitem>
                <para>It runs many times (&gt;10) quicker</para> 
</listitem> 
<listitem> 
<para>It allows you to view the contents of multiple CD-Roms simultaneously (the VMap level 0 data comes on 4 CDs so unless you have 4 CD-readers in your machine this is the only way to get global coverage)</para> 
</listitem> 
</itemizedlist> </para> 
<para>So, on the assumption that you do want to copy the data to your hard disk, here is a strategy for keeping the data tidy:
            <orderedlist>
              <listitem>
                <para>Create a folder in the top level of your hard disk called
                  <filename>VPF</filename>
                </para> 
</listitem> 
<listitem> 
<para>Now insert the first VPF CD-Rom and view it through your file manager (e.g.
                  <application>Windows Explorer</application>).  You need to find which directory contains the actual data, so have a look in each of the top level directories for a directory which contains the files
                  <filename>DHT</filename> and
                  <filename>LAT</filename>.  Note, for VMap data this is a directory named
                  <filename>VMAPLV0</filename>.  When you&apos;ve found this directory copy it across to the
                  <filename>VPF</filename> directory you created on your hard disk.
                </para> 
</listitem> 
<listitem> 
<para>So for VMap data,  your hard disk you should have a directory named
                  <filename>VPF</filename>, containing your first set of VMap data in a directory named
                  <filename>VMAPLV0</filename>.
                </para> 
</listitem> 
<listitem> 
<para>You will be copying in a number of data sets with this directory name, so rename
                  <filename>VMAPLV0</filename> to the name of the current dataset (such as
                  <filename>NOAMER, SASAUS, EURNASIA or SOAMAFR</filename>).
                </para> 
</listitem> 
<listitem> 
<para>Next, swap your CD for the next CD in the series, copy the directory of interest across to the
                  <filename>VPF</filename> directory on you hard disk, and rename it.
                </para> 
</listitem> 
<listitem> 
<para>Once you&apos;ve repeated this process for all of the CDs for the current database it&apos;s time to configure
                  <application>Debrief</application> to load the data.
                </para> 
</listitem> 
</orderedlist> </para> 
</sect2> 
<sect2> 
<title>Configuring Debrief to read VPF data</title> 
<para>Debrief determines where to find the
            <glossterm linkend="g_vpf">VPF</glossterm> data using
            <indexterm>
              <primary>VPF Data</primary>
              <secondary>Configuring Debrief</secondary>
            </indexterm> entries in the
            <application>Debrief</application> properties file.
          </para> 
<para>The
            <application>Debrief</application> properties file is named
            <filename>d2ksettings.prp</filename> and is contained in the directory where
            <application>Debrief</application> is started from.  For a typical installation this is
            <filename>C:/Program Files/Debrief 2003</filename>.
          </para> 
<tip> 
<para>If you cannot find the properties file, do a Search (Start/Search/Files and programs). If a number of files are returned then quickly open and quit
              <application>Debrief</application>, and repeat the search - the newest version of the file is the one in use.
            </para> 
</tip> 
<tip> 
<para>Before editing the Properties File, ensure that
              <application>Debrief</application> is closed, otherwise your changes will be overwritten when
              <application>Debrief</application> closes.
            </para> 
</tip> 
<para>Open the file in a text editor (such as notepad), and append  the VPF directory entries:
            <screen>
              <markup>
VPF_DATABASE_DIR.1=c\:\\vpf\\SASAUS
VPF_DATABASE_DIR.2=c\:\\vpf\\NOAMER
VPF_DATABASE_DIR.3=c\:\\vpf\\SOAMAFR
VPF_DATABASE_DIR.4=c\:\\vpf\\EURNASIA
              </markup>
            </screen>
          </para> 
<note> 
<para>Note the following points:
              <itemizedlist>
                <listitem>
                  <para>Each line starts with the VPF property prefix VPF_DATABASE_DIR</para> 
</listitem> 
<listitem> 
<para>This prefix is followed by a unique integer (numbers 1 to 4 in this example)</para> 
</listitem> 
<listitem> 
<para>The property name is followed immediately by an equals sign (=), then one of the data paths.</para> 
</listitem> 
<listitem> 
<para>These data paths are names of directories which contain DHT and LAT entries.</para> 
</listitem> 
<listitem> 
<para>In the data path, each symbol used is prefixed by a slash character (\).</para> 
</listitem> 
</itemizedlist> </para> 
</note> 
<para>Now save the properties file, and you are ready to view the data in
            <application>Debrief</application> in the next part of the tutorial.
          </para> 
</sect2> 
<sect2> 
<title>Thank heavens
 for Open Source</title> 
<para>As many of you are probably aware,
            <application>Debrief</application> is an Open Source application, which means that anybody is free to copy, change, and re-use the Source Code for
            <application>Debrief</application>, provided they meet the terms of the
            <application>Debrief</application> license.
          </para> 
<para>The VPF plotting libraries we&apos;re using in
            <application>Debrief</application> are taken from another Open Source application,
            <application>OpenMap</application> from BBN Technologies.
          </para> 
<para>
            <inlinegraphic fileref="figures/VPF_OpenMap.gif"/>
            <inlinegraphic fileref="figures/VPF_BBN_2c_primary.jpg"/>
          </para> 
<para>The
            <application>OpenMap</application> application can be found at http://www.openmap.net.
            <application>Debrief</application> makes no modifications to the
            <application>OpenMap</application> application code.
          </para> 
</sect2> 
</sect1> 
<sect1 id="view_vpf"> 
<title>Viewing VPF Data</title> 
<sect2> 
<title>Introduction</title> 
<para>
            <application>Debrief</application> does not pay
            <indexterm>
              <primary>VPF Data</primary>
              <secondary>Introduction</secondary>
            </indexterm> any attention to
            <glossterm linkend="g_vpf">VPF</glossterm> data until it loads a plot which requires the data, or until the user requests that VPF layers be added.
          </para> 
<para>VPF layers are loaded into a plot using the "Create VPF Layers" button:
            <guiicon>
              <inlinegraphic fileref="figures/vpf.gif"/>
            </guiicon>
          </para> 
<para>Yes, it&apos;s a shrunken version of NIMA&apos;s  VPF logo.  If VPF layers have been loaded into
            <application>Debrief</application>, their details are stored in the plot file (i.e., whether they are switched on or off, and their colour).   Note that the data itself is not stored in the plot file, just the names of the layers you&apos;re using (so there&apos;s no significant increase in file size).
          </para> 
</sect2> 
<sect2> 
<title>Creating VPF Layers</title> 
<para>So, to work through the process, start a new blank session in
            <application>Debrief</application>, and drag across the boat1.rep track from the installation directory.
          </para> 
<para>When the data has loaded and you can see the familiar red track on the right hand side of the screen, switch to the
            <guilabel>Chart Features</guilabel> toolbar and click on the
            <guibutton>Create VPF Layers</guibutton> button:
            <guiicon>
              <inlinegraphic fileref="figures/vpf.gif"/>
            </guiicon>
          </para> 
<para>
            <application>Debrief</application> will now take a few seconds to look through the directories defined in your
            <application>Debrief</application> properties file.  From these directories it will find the names of the VPF databases you are using (probably just VMap initially), then find the themes of data within this database.  Then it adds this data as new layers.  Finally it shows a property window for the master layer containing the VPF data.  Should you wish to you could rename this layer, but for simplicity isn&apos;t really recommended.
          </para> 
<para>To configure the VPF data, switch to the
            <application>Debrief</application> tote and select
            <guibutton>View
	     Layer Manager</guibutton>.    The
            <guilabel>Layer
	     Manager</guilabel> will open, and show our
            <guilabel>Track:Carpet</guilabel> layer together with
	   another layer,
            <guilabel>Chart Features</guilabel>.  Click
	   on the symbol to the left of the
            <guilabel>Chart
	     Features</guilabel> (
            <guiicon>
              <inlinegraphic fileref="figures/VPF_Symbol.gif"/>
            </guiicon>) text to open that layer, and you will see the following view, clearly showing the new VPF layer.
            <figure float="0">
              <title>Layer Manager</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/VPF_Layer1.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Click on the VPF layer to open it up, showing which VPF databases are currently loaded.  In this example you can see that I have the VMap Level 0 (vmaplv0) data together with some Digital Nautical Chart (DNC) data.  Each layer shows how many items are on that layer, and the empty check box shows that each layer is not currently visible.
            <figure float="0">
              <title>Layers within Chart Features</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/VPF_Layer2.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>
	    You are going to switch on coastline data first, so click open up the
            <guilabel>vmaplv0</guilabel> database by clicking on the expand folder symbol.  You will see the list of VMap themes listed.  Later on, feel free to open them up and view the data they contain, but for now you will concentrate on the coastlines.  The order of the themes may be different on your machine, this is of no concern.
            <figure float="0">
              <title>List of VPF layers</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/VPF_Layer3.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Next, open up the Boundaries theme to see which Boundaries can be plotted by VMap.
            <figure float="0">
              <title>Boundaries theme</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/VPF_Layer4.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Now you are going to configure the plotting of coastlines.  Right-click on the
            <guilabel>Coastlines</guilabel> entry, and from the
            <guilabel>Coastlines</guilabel> drop-down list, select
            <guilabel>Color</guilabel>, and then
            <guilabel>Light Grey</guilabel>.  Note that
            <guilabel>White</guilabel> is the default colour for all VPF features.
          </para> 
<para>Next, right-click on the coastlines entry again, and make the
            <guilabel>coastline</guilabel> Visible.
          </para> 
<para>Whilst we&apos;ve made the
            <guilabel>Coastlines</guilabel> visible, the layers above it aren&apos;t, so now you make its parents visible.  Right-click on the
            <guilabel>Boundaries</guilabel> layer and make it visible.  Next right-click on the
            <guilabel>vmaplv0</guilabel> layer to make that too visible.
          </para> 
<para>Nothing has yet appeared on the plot, but that is because you are not current over any coastline.  Now zoom out 6 times until the plot looks like that below:
            <figure float="0">
              <title>First coastline</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/VPL_Layer6.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Now you can see your new coastline of Africa.
          </para> 
<para>Select the Pan control from the Plot toolbar:
            <guiicon>
              <inlinegraphic fileref="figures/pan.gif"/>
            </guiicon>
          </para> 
<para>Now drag the plot southwards to move the view up towards Europe.  Keep dragging until you have a clear view of a more familiar coastline, that of the British Isles.  From this view you will add depth contours.
            <figure float="0">
              <title>Coastline of British Isles</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/VPF_Layer7.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Right-click on the
            <guilabel>Depth Contours</guilabel> entry in the
            <guilabel>Boundaries</guilabel> layer and switch it&apos;s colour to
            <guilabel>Grey</guilabel>.  Also switch the
            <guilabel>Contours</guilabel> entry to
            <guilabel>Visible</guilabel>.
          </para> 
<para>Depth contours will now appear:
            <figure float="0">
              <title>Coastline of British Isles</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/VPF_Layer8.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<note> 
<para>Note, the VMap CD-ROM gives the following description with relation to depth contours:
              <blockquote>
                <para>
 Depth contours (BE015) were derived from digital bathymetric data provided by  Defense Mapping Agency. Depths are expressed in the following intervals: 200,  600, 1000. 2000, 4000, 6000, and 8000 meters.</para> 
</blockquote> </para> 
</note> 
<para>Feel free to zoom in on the data to see just how detailed the data gets (around Cowes on the Isle of Wight sections of coastline of only 200 yards length are clearly visible).
          </para> 
<para>Also zoom out to view the whole of the British Isles and experiment with switching on features in other layers.
          </para> 
<para>The plot below shows UK railways (from the Transportation Layer), and UK is shaded in by making the Administrative Areas (from the Boundaries Layer) visible.
            <figure float="0">
              <title>Railways of British Isles</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/VPF_Layer9.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Alternatively zoom and pan across to your home, see the accuracy of your part of the coastline.
          </para> 
</sect2> 
<sect2> 
<title>Storing VPF settings</title> 
<para>As explained earlier, when you save the
            <glossterm linkend="g_vpf">VPF</glossterm> plot your VPF settings get saved with it.  So have a go at saving your current view, exiting/re-starting
            <application>Debrief</application> then re-loading it.  You should find yourself seeing the same view which you saved.
          </para> 
</sect2> 
<sect2> 
<title>VPF Best Practice</title> 
<para>There&apos;s no doubting the volume of data available through VPF, and the VMap Level 0 database in particular.  The next level down from VMap Level 0 is VMap Level 1; which contains approximately 10 times more detailed information.
          </para> 
<para>How much of it is of use is more subjective though, so it&apos;s best to lead your strategy for its use by your analysis requirements.
          </para> 
</sect2> 
</sect1> 
<sect1 id="configure_vpf"> 
<title>Configuring VPF Defaults</title> 
<sect2> 
<title>The Problem</title> 
<para>Yes, VPF and VMap in
            <indexterm>
              <primary>VPF Data</primary>
              <secondary>Configuring default layers</secondary>
            </indexterm>particular provide a great volume of information which may help with analysis and will certainly improve the quality of "overview" images in reports.
          </para> 
<para>With this great volume comes a management overhead however.  You could have constrained
            <application>Debrief</application> to only use VMap data, and then only load a sub-set of it (coastlines &amp; depth contours).  Instead, however, it loads the full set.
          </para> 
<para>How can you make it easier to use?</para> 
<para>Read on.</para> 
<warning> 
<para>You&apos;ll need to know how to use a text editor and have a rough familiarity with
              <glossterm linkend="g_xml">XML</glossterm> or HTML text.
            </para> 
</warning> 
</sect2> 
<sect2> 
<title>The solution</title> 
<para>How does it
            <application>Debrief</application> handle VPF data?
            <itemizedlist>
              <listitem>
                <para>When you save a plot with VPF data loaded,
                  <application>Debrief</application> stores the names of all of the layers loaded, together with the colours and visibility of any features on them.
                </para> 
</listitem> 
<listitem> 
<para>When you re-load an existing session with VPF data,
                  <application>Debrief</application> reads what layers the users wants and only loads those layers.
                </para> 
</listitem> 
</itemizedlist> </para> 
<para>Accordingly, you could create a datafile containing only the layers you want, and drop this file into
            <application>Debrief</application> sessions.  This should give us a simplified set of VPF layers.
          </para> 
<para>When you drag/drop an
            <glossterm linkend="g_xml">XML</glossterm> file into an existing session, the Layers in the
            <glossterm linkend="g_xml">XML</glossterm> file are copied into the existing session, although the projection, Tote, and GUI parameters are ignored.
          </para> 
</sect2> 
<sect2 id="vpf_how_to"> 
<title>How to do it - 1</title> 
<para>So what you do is open a new
            <application>Debrief</application> session and load the smallest REP file you have into it - (just to give your data an "origin").
          </para> 
<para>Then add your VPF layers using the
            <guibutton>Create VPF Layers</guibutton> button on the
            <guilabel>Chart Features</guilabel> toolbar.  Customise these layers so that the layers/features of interest are made visible and set to your desired colours.
          </para> 
<para>Finally save the view to a plot file in an easily accessible location - call it
            <filename>default_layers.xml</filename>
          </para> 
</sect2> 
<sect2 id="how_to_create_default_layers"> 
<title>How to do it - 2</title> 
<para>You are now going to edit this file to remove all unnecessary details except for your
            <glossterm linkend="g_layer">layer</glossterm>s.
          </para> 
<para>Open a text editor (such as
            <application>Notepad</application> in
            <application>MS Windows</application>), and load your new xml file into it.
          </para> 
<para>The contents of the file should be something like that shown below:
            <screen>
              <markup>

                &lt;?xml version="1.0" encoding="UTF-8"?&gt;

                &lt;plot Created="Thu Jul 19 15:04:41 GMT+01:00 2001" Name="Debrief Plot"&gt;
                &lt;session&gt;
                &lt;layers&gt;
                &lt;layer Name="Chart Features" Visible="TRUE"&gt;
                &lt;vpf_database Visible="TRUE"&gt;
                &lt;vpf_library Visible="TRUE" Name="vmaplv0"&gt;
                &lt;vpf_coverage Visible="FALSE" Type="ind" Description="Industry"&gt;
                &lt;vpf_feature Visible="FALSE" Type="extracta" Description="Extraction Areas"&gt;
                &lt;colour Value="WHITE" /&gt;
                &lt;/vpf_feature&gt;
                &lt;vpf_feature Visible="FALSE" Type="storagep" Description="Storage Point Features"&gt;
                &lt;colour Value="WHITE" /&gt;
                &lt;/vpf_feature&gt;
                &lt;vpf_feature Visible="FALSE" Type="indtxt" Description="Industry Coverage Text"&gt;
                &lt;colour Value="WHITE" /&gt;
                &lt;/vpf_feature&gt;
              </markup>
            </screen>
 ..... and so on, until
            <screen>
              <markup>
                &lt;layer Name="Annotations" Visible="TRUE"&gt;
                &lt;rectangle Label=" trial" LabelLocation="Left"&gt;
                &lt;colour Value="YELLOW" /&gt;
                &lt;fontcolour Value="YELLOW" /&gt;
                &lt;font Family="Sans Serif" Size="12" Bold="FALSE" Italic="FALSE" /&gt;
                &lt;tl&gt;
                &lt;shortLocation Lat="-9.2166417" Long="156.2783694" Depth="0.000" /&gt;
                &lt;/tl&gt;
                &lt;/rectangle&gt;
                &lt;/layer&gt;
                &lt;/layers&gt;
                &lt;projection Type="Flat" Border="1.050" Relative="FALSE"&gt;
                &lt;tl&gt;
                &lt;shortLocation Lat="60.6482349" Long="-15.0669609" Depth="0.000" /&gt;
                &lt;/tl&gt;
                &lt;br&gt;
                &lt;shortLocation Lat="47.9097909" Long="3.0063981" Depth="0.000" /&gt;
                &lt;/br&gt;
                &lt;/projection&gt;
                &lt;gui&gt;
                &lt;tote /&gt;
                &lt;component Type="Stepper"&gt;
                &lt;property Name="AutoStep" Value="1000" /&gt;
                &lt;property Name="Highlighter" Value="Default Highlight" /&gt;
                &lt;property Name="StepLarge" Value="600000.000" /&gt;
                &lt;property Name="CurrentTime" Value="691231 235959.999" /&gt;
                &lt;/component&gt;
                &lt;/gui&gt;
                &lt;/session&gt;
                &lt;details Text="Saved with Debrief version dated 19 Jul 01 12:44" /&gt;
                &lt;/plot&gt;
              </markup>
            </screen>

          </para> 
</sect2> 
<sect2> 
<title>How to do it - 3</title> 
<para>As you can see above, the file starts with an entry beginning with the characters
            <guilabel>&lt;?xml</guilabel>.  This line indicates that you are handling
            <glossterm linkend="g_xml">XML</glossterm> data.
          </para> 
<para>Next you have a series of lines of data, which start with
            <guilabel>&lt;plot&gt;</guilabel> and end with
            <guilabel>&lt;/plot&gt;</guilabel>.  This format is similar to that found in HTML, and indicates that this file contains details of plot.  Inside the
            <guilabel>&lt;plot&gt;</guilabel> you can see a
            <guilabel>&lt;session&gt;</guilabel>, which in turn contains a
            <guilabel>&lt;layers&gt;</guilabel> object, containing a series of
            <guilabel>&lt;layer&gt;</guilabel> items, followed by a
            <guilabel>&lt;projection&gt;</guilabel>, and a
            <guilabel>&lt;gui&gt;</guilabel>.
          </para> 
<para>What you are going to do is strip out everything except the Layers object, and then thin this out.
          </para> 
<para>So, move the cursor to the
            <guilabel>&lt;layers&gt;</guilabel> line.  Delete everything before this (except for the
            <guilabel>&lt;?xml version="1.0" encoding="UTF-8"?&gt;</guilabel> line.
          </para> 
<para>Now move down to the
            <guilabel>&lt;/layers&gt;</guilabel> line, and delete everything from it to the end of the file.
          </para> 
<para>As you look at the layers, you can see that each layer has a name (
            <guilabel>Chart Features</guilabel> is the first one in the example above).  It is the
            <guilabel>Chart Features</guilabel> layer which you want to keep, so navigate down to the next Layer (which may have a track name), and delete that and all others (down to, but not including the
            <guilabel>&lt;/layers&gt;</guilabel> line which marks the end of the data).
          </para> 
<para>Within the
            <guilabel>Chart Features</guilabel> layer you can see an entry named
            <guilabel>&lt;vpf_database&gt;</guilabel> - this is the vpf data.  Inside the vpf_database are
            <guilabel>&lt;vpf_library&gt;</guilabel> entries, one for each library loaded (probably just VMaplv0 in your instance).
          </para> 
<para>Inside the
            <guilabel>&lt;vpf_library&gt;</guilabel> are a series of
            <guilabel>&lt;vpf_coverage&gt;</guilabel> entries.  It is these which you will thin out.  Work down through them deleting any you don&apos;t want.  In your instance you only want to keep the boundaries data, so you will delete all other coverages.  So, select blocks of text beginning with
            <guilabel>&lt;vpf_coverage&gt;</guilabel> and ending with
            <guilabel>&lt;/vpf_coverage&gt;</guilabel> and delete those you don&apos;t want.
          </para> 
<para>Finally, delete any &lt;vpf_features&gt; you don&apos;t want.
          </para> 
<para>I&apos;ve deleted all those I don&apos;t want, leaving the text below:
            <screen>
              <markup>
                &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                &lt;layers&gt;
                &lt;layer Name="Chart Features" Visible="TRUE"&gt;
                &lt;vpf_database Visible="TRUE"&gt;
                &lt;vpf_library Visible="TRUE" Name="vmaplv0"&gt;
                &lt;vpf_coverage Visible="TRUE" Type="bnd" Description="Boundaries"&gt;
                &lt;vpf_feature Visible="TRUE" Type="oceansea" Description="Oceans/Seas"&gt;
                &lt;colour Value="BLUE" /&gt;
                &lt;/vpf_feature&gt;
                &lt;vpf_feature Visible="FALSE" Type="polbndl" Description="Political Boundaries"&gt;
                &lt;colour Value="WHITE" /&gt;
                &lt;/vpf_feature&gt;
                &lt;vpf_feature Visible="TRUE" Type="polbnda" Description="Administrative Areas"&gt;
                &lt;colour Value="WHITE" /&gt;
                &lt;/vpf_feature&gt;
                &lt;vpf_feature Visible="FALSE" Type="depthl" Description="Depth Contours"&gt;
                &lt;colour Value="WHITE" /&gt;
                &lt;/vpf_feature&gt;
                &lt;vpf_feature Visible="TRUE" Type="coastl" Description="Coastlines"&gt;
                &lt;colour Value="CYAN" /&gt;
                &lt;/vpf_feature&gt;
                &lt;/vpf_coverage&gt;
                &lt;/vpf_library&gt;
                &lt;/vpf_database&gt;
                &lt;/layer&gt;
                &lt;/layers&gt;</markup>
            </screen>
          </para> 
</sect2> 
<sect2> 
<title>At last!</title> 
<para>Now, you can drag and drop this file into any
            <application>Debrief</application> session to instantly give you your "favourite" set of layers.
          </para> 
<para>To test it, follow the steps described above (or copy the text I&apos;ve just given you into a blank text file and save it as
            <filename>default_layers.xml</filename>).  Then create a new
            <application>Debrief</application> session, load one of your demo tracks (
            <filename>boat1.rep</filename>), then drag in
            <filename>default_layers.xml</filename>.  Zoom out, and have a look at the lovely, pre-formatted data.
          </para> 
</sect2> 
</sect1> 
<sect1 id="etopo_data"> 
<title>ETOPO Data</title> 
<para>
          <application>Debrief 2002</application> added the capability to view gridded bathymetric data, provided through the ETOPO dataset.  The ETOPO dataset and its use is explained in more detail in
          <link linkend="etopo_gridded_bathy">ETOPO gridded bathy</link>
        </para> 
</sect1> 
</chapter> 
<chapter id="viewing_narratives"> 
<title>Viewing Narratives</title> 
<sect1 id="narrative_intro"> 
<title>Introduction to narrative data</title> 
<sect2> 
<title>Introduction</title> 
<para>The term
            <guilabel>Narrative Data</guilabel> is used
            <indexterm>
              <primary>Narrative Data</primary>
              <secondary>Preparing Narrative Data</secondary>
            </indexterm> within
            <application>Debrief</application> to refer to time-stamped textual data recorded during an exercise.
          </para> 
<para>Typically this data would be narrative data recorded to provide an overview of events within an exercise
            <glossterm linkend="g_serial">serial</glossterm>, but an equally valid use of the facility would be for a textual record of information exported from a recording device.  An example of this could be control messages returned from a weapon, or readings taken from an onboard sensor.
          </para> 
<para>Once the data is loaded into Debrief, it is displayed in a list window - with one entry per line.  When stepping through the data the "current" entry is highlighted, but the user is also able to double-click on an entry to move the Debrief step time to the time this entry was recorded.
            <figure float="0">
              <title>Viewing a narrative</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/Narr_1.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>In addition to changing the Debrief step time, the user is also able to change the format of the data in the DTG column, and elect whether to view only the first line of data or the full entry.
          </para> 
</sect2> 
<sect2> 
<title>Preparing the data</title> 
<para>Narrative data is loaded into Debrief using the following file format:
            <screen>;NARRATIVE:  YYMMDD HHMMSS  TTT.TTT  XX..XX
 ;; dtg, track name, narrative entry
            </screen>
          </para> 
<para>
 This line  is composed of the following fields:
            <variablelist>
              <varlistentry>
                <term>
                  <guilabel>;NARRATIVE:</guilabel>
                </term>
                <listitem>
                  <para>Leader identifier, to indicate that this is a narrative entry</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>
                  <guilabel>YYMMDD HHMMSS:</guilabel>
                </term> 
<listitem> 
<para>DTG for this narrative entry</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>
                  <guilabel>TTT..TTT</guilabel>
                </term> 
<listitem> 
<para>The name of the source vessel or
                    <glossterm linkend="g_sensor">sensor</glossterm> for this narrative entry
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>
                  <guilabel>XX..XX</guilabel>
                </term> 
<listitem> 
<para>The text of this narrative entry, up to the end-of-line marker.</para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
<para>The narrative data can be located in a
            <filename>.REP</filename> file of its own, or together with other Debrief track and annotation data.
          </para> 
</sect2> 
<sect2> 
<title>Loading the data</title> 
<para>Narrative data is loaded into
            <application>Debrief</application> in the same way as other data, by dragging and dropping, or using the
            <guibutton>Import Data</guibutton> button.
          </para> 
</sect2> 
</sect1> 
<sect1 id="view_narrative"> 
<title>Viewing narrative data</title> 
<sect2> 
<title>Getting started</title> 
<para>So, to have a go at working with narrative data, open
            <application>Debrief</application> and load your sample tracks:
            <filename>boat1.rep</filename> and
            <filename>boat2.rep</filename> from the Debrief directory.  Also in the
            <application>Debrief</application> directory you should find your sample narrative data;
            <filename>narrative.rep</filename>.  Have a quick look at this file in
            <application>Notepad</application> if you want to, then drag it into the current
            <application>Debrief</application> session to add it to your two tracks.
            <application>Debrief</application> won&apos;t show any immediate change since narrative data doesn&apos;t have a graphic representation.
          </para> 
</sect2> 
<sect2> 
<title>Opening the narrative viewer</title> 
<para>To view the narrative data, first
            <indexterm>
              <primary>Narrative Data</primary>
              <secondary>Opening Narrative Viewer</secondary>
            </indexterm>you have to open its viewer.  Start by opening up the
            <guilabel>Layer Manager</guilabel> using its icon on the
            <guilabel>Stepper Control</guilabel>.
          </para> 
<para>From the Layer Manager you can see a new layer named "Narratives" which contains 19 narrative entries.
            <figure float="0">
              <title>Narratives from the Layer Manager</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/Narr_2.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>To open the narrative viewer, double-click on the Narratives text.
          </para> 
<para>The narrative viewer will now open
            <figure float="0">
              <title>Viewing a narrative</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/Narr_1.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
</sect2> 
<sect2> 
<title>Analysing narrative data</title> 
<para>So, now that you have all of
            <indexterm>
              <primary>Narrative Data</primary>
              <secondary>Analysing Narrative Data</secondary>
            </indexterm> your data in
            <application>Debrief</application>, you will simulate its use in analysis.  First of all, configure the Debrief time limits by pressing
            <guibutton>Auto Generate</guibutton> from the
            <guilabel>Tote</guilabel> panel.
          </para> 
<para>Now switch to the narrative viewer, and double-click on the entry titled
            <guilabel>DISABLE SYSTEM DELTA</guilabel>.  You will see the white rectangle on the plot jump to the time
            <guilabel>120614</guilabel>.  Now double-click on the entries either side, to see the plot highlight move backwards and forwards.  The points where
            <glossterm linkend="g_track">track</glossterm>
            <emphasis>CARPET</emphasis> changes colour should now become clear, we&apos;re using them to mark different sensor states.
          </para> 
<para>Also have a play with changing the time format from
            <guilabel>ddHHmm</guilabel> to
            <guilabel>HHmm</guilabel>.  The
            <guilabel>DTG</guilabel> column will now shrink, allowing more space for the
            <guilabel>Entry</guilabel> column.  To show even more narrative entries, click on the
            <guilabel>First line only</guilabel> checkbox - only the first line of each entry is now shown.
          </para> 
<para>To stop the narrative from following the current
            <glossterm linkend="g_tote">Tote</glossterm> time, clear the
            <guilabel>Follow time</guilabel> checkbox - this will leave the narrative at the current point irrespective of the Tote time.  Initially this checkbox may not be visible, just widen the properties window as required to see it.
          </para> 
<para>To give yourself a larger view of the narrative data, the narrative viewer can be "popped out" from Debrief.  To do this, pick up the Narrative viewer panel at the very top of the dotted strip (the black square in the screenshot).
            <figure float="0">
              <title>Resizing the narrative window</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/Narr_3.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Now arrange the
            <application>Debrief</application> windows so that the narrative window is to the left of the screen, with
            <application>Debrief</application> itself to the right:
            <figure float="0">
              <title>Re-arranging the Narrative windows</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/Narr_4.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>This layout enables us to simultaneously view both the narrative and the
            <glossterm linkend="g_tote">Tote</glossterm>.  So, switch to the
            <guilabel>Tote</guilabel> panel in
            <application>Debrief</application>, then continue double-clicking on narrative entries - you will see both the Tote time and the calculated values updating after each click.
          </para> 
<para>Alternatively experiment with stepping forwards and backwards through the
            <glossterm linkend="g_tote">Tote</glossterm>, you will see the "current" entry highlighted in the narrative viewer as you step through.  Step forwards and backwards in large steps to see the most movement.
          </para> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="video_recording"> 
<title>
        <application>Debrief</application> video recording
      </title> 
<sect1> 
<title>Recording plots to video</title> 
<sect2> 
<title>Introduction</title> 
<para>As its name suggests, one of the initially
            <indexterm>
              <primary>Video</primary>
              <secondary>Recording to video</secondary>
            </indexterm> intended uses for
            <application>Debrief</application> was to conduct post-exercise debriefs.
          </para> 
<para>Nowadays
            <application>Debrief</application> gets a lot more use for exercise analysis, and has evolved into an exercise analysis tool, but there are still aspirations to use it in debriefs.  Unfortunately, its use in a debrief normally requires an expert operator; who is not always available.  Recording a
            <application>Debrief</application> session to file, however, enables it to be inserted into a
            <application>PowerPoint</application> presentation for automated replay.
          </para> 
<para>Previously video segments have been recorded using the HyperCam application from
            <ulink url="http://www.hyperionics.com">http://www.hyperionics.com</ulink>

 Now video can be recorded from within Debrief itself by taking advantage of the Java Media Framework
            <inlinegraphic fileref="figures/video_1.gif"/>
          </para> 
<note> 
<para>In this initial version, the video is composed of uncompressed bitmap images - typically around a megabyte per frame recorded.  This makes the videos recorded from within
              <application>Debrief</application> at least 10 times larger than those recorded within
              <application>HyperCam</application> - but as soon as
              <application>Java</application> contains support for comprising videos from JPegs the files will shrink drastically - wait and see!
            </para> 
</note> 
</sect2> 
<sect2> 
<title>Preparing to record</title> 
<para>
            <application>Debrief</application> determines the directory to record to by looking at the
            <guilabel>WMF_Directory</guilabel> property from the
            <application>Debrief</application> properties file.  So, before you start recording video files ensure that this property is set to a useful value (and make sure you edit it without
            <application>Debrief</application> running, or else your changes will be over-written by
            <application>Debrief</application> as it closes).
          </para> 
<para>It&apos;s also worth resizing the Debrief plot to the correct size for your video, and having a practice run of stepping through the important part of your
            <glossterm linkend="g_serial">serial</glossterm>, prior to recording.
          </para> 
</sect2> 
<sect2> 
<title>Recording Debrief</title> 
<para>Recording to video is all quite simple, really.  To open the video window, click on the record to video icon:
            <guiicon>
              <inlinegraphic fileref="figures/camera.gif"/>
            </guiicon>
          </para> 
<para>
 The video window will now open.
            <figure float="0">
              <title>Configuring for video recording</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/video_2.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>The three buttons at the top control the recording process itself, whilst the two text boxes contain configuration details.
            <variablelist>
              <varlistentry>
                <term>
                  <guilabel>Configure</guilabel>
                </term>
                <listitem>
                  <para>Press this at the start of the recording process.  This will create the video recorder support objects and the output file, then wait for you to start recording.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>
                  <guilabel>Start</guilabel>
                </term> 
<listitem> 
<para>This button is enabled once the configuration is complete.  Once started, Debrief copies the content of the Debrief plot to the destination video file at the indicated frame rate.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>
                  <guilabel>Stop</guilabel>
                </term> 
<listitem> 
<para>This button stops the recording and closes the video file.  Press the configure button to restart the recording process.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>
                  <guilabel>Destination</guilabel>
                </term> 
<listitem> 
<para>The name of the file to record to.  You will receive a prompt if the output file already exists in the output directory (see above).  The video is recorded in the AVI format, so it is best to use a file with this suffix.  Don&apos;t worry about missing off the AVI suffix, good old Debrief will append it for you.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>
                  <guilabel>Frame Rate</guilabel>
                </term> 
<listitem> 
<para>This is the frequency (in frames per second) at which video is recorded to file.  Obviously the faster the frame rate, the larger the resulting video file.</para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
</sect2> 
<sect2> 
<title>Test Run</title> 
<para>

 If you want to have a go at recording to video, run through the following steps:


            <orderedlist>
              <listitem>
                <para>First check that the
                  <guilabel>WMF_Directory</guilabel> property in your
                  <application>Debrief</application> properties file contains a sensible directory name.
                </para> 
</listitem> 
<listitem> 
<para>Then open a new
                  <application>Debrief</application> session and load your
                  <filename>Boat1.rep</filename> and
                  <filename>Boat2.rep</filename> data files into it.
                </para> 
</listitem> 
<listitem> 
<para>Press
                  <guibutton>Auto-generate</guibutton> on the Tote to configure the time stepper.  Now step forward in large steps until the vessels enter the melee period near the end.
                </para> 
</listitem> 
<listitem> 
<para>Zoom in to get the best view of the tracks in the remaining time period.</para> 
</listitem> 
<listitem> 
<para>Click on the
                  <guibutton>Record Video</guibutton> button on the
                  <guilabel>File</guilabel> toolbar, and once the video window has opened drag it out of
                  <application>Debrief</application>.  Switch back to the
                  <guilabel>Tote</guilabel> window.
                </para> 
</listitem> 
<listitem> 
<para>Now arrange the windows so that you have a clear view of both
                  <application>Debrief</application> and the video window.
                </para> 
</listitem> 
<listitem> 
<para>Press
                  <guibutton>Configure</guibutton> on the video window, and wait for its processing to complete: at which point the
                  <guibutton>Start</guibutton> button will be enabled.
                </para> 
</listitem> 
<listitem> 
<para>In the
                  <application>Debrief</application> Tote, start
                  <application>Debrief</application> stepping forward automatically.  Immediately after this press the
                  <guibutton>Start</guibutton> button.  Let
                  <application>Debrief</application> run for a few seconds, and press
                  <guibutton>Stop</guibutton> in the video window, and cancel the
                  <guibutton>Step Automatically</guibutton> button on the Tote.
                </para> 
</listitem> 
<listitem> 
<para>You should now be able to switch to the
                  <guilabel>WMF_Directory</guilabel>, where you will find the video file named
                  <filename>Debrief2K1.avi</filename>. Double-click on this file, and view your recorded video.
                </para> 
</listitem> 
</orderedlist> </para> 
</sect2> 
<sect2> 
<title>Things to remember</title> 
<tip> 
<para>
	     The videos recorded in this way are still much larger than those
	     recorded in HyperCam.  However, they will shrink as soon
	     as the Java Media Framework provides the necessary
	     functionality.
            </para> 
</tip> 
<warning> 
<para>
	     Don&apos;t resize the Debrief plot after you&apos;ve pressed the Configure
	     button, since the frame size of the video file has already
	     been initialised.
            </para> 
</warning> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="sensor_data"> 
<title>Loading sensor data</title> 
<sect1> 
<title>Introduction to sensor data</title> 
<sect2> 
<title>Introduction</title> 
<para>As useful as it would appear it is only in the update to
            <application>Debrief</application> 2001 that
            <application>Debrief</application> has been able to properly show
            <glossterm linkend="g_sensor">sensor</glossterm> data.
          </para> 
<para>A rudimentary way of showing bearing lines has been present for a number of years, but Debrief has not performed any useful processing on this data.
          </para> 
<para>The following terms are used:

            <variablelist>
              <varlistentry>
                <term>Sensor</term>
                <listitem>
                  <para>The
                    <glossterm linkend="g_sensor">sensor</glossterm> which recorded the data.  Sensor data is grouped according to its sensor.  This characteristic may be exploited by giving a unique sensor name to each track being recorded on a sensor - allowing tracks to be independently switched on and off.
                  </para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>Sensor Contact</term> 
<listitem> 
<para>This is an individual contact recorded on a sensor, a single bearing line reaching from the sensor location (origin) along the contact bearing to the contact range.</para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
<para>The sticky issue of whether to represent sensor data in absolute coordinates (where each line has it&apos;s own origin) or whether to represent the data in relative coordinates (where the sensor origin is assumed to be the current ownship position) is managed through the ability to enter NULL fields for the sensor location.
          </para> 
<para>Support for relative coordinates is provided for two reasons:
            <itemizedlist>
              <listitem>
                <para>Some
                  <glossterm linkend="g_sensor">sensor</glossterm> data sources may genuinely not contain positional data - allowing relative coordinates will ease the workload in these instances.
                </para> 
</listitem> 
<listitem> 
<para>In the submarine plot-lock process it is quite common to experiment with a number of track-shifts until the hull-mounted sensor bearing fans tie up with the other vessel. By keeping the sensor data separate to the vessel data, the existing sensor data-file can be dropped into Debrief with the updated vessel track-file, allowing the user to perform a visual qualitative check on the shift applied.</para> 
</listitem> 
</itemizedlist> </para> 
</sect2> 
<sect2 id="prepare_sensor_data"> 
<title>Preparing Sensor Data</title> 
<para>
 Sensor data is loaded into Debrief in REP files, just like any other Debrief data.  The line format is:
            <screen>
              <markup>;SENSOR: YYMMDD HHMMSS.SSS AAAAAA @@ DD MM SS.SS H DDD MM SS.SS H BBB.B RRRR yy..yy xx..xx
 ;; date, ownship name, symbology, sensor lat/long (or the single word NULL), bearing (degs), range(yds), sensor name, label (to end of line)</markup>
            </screen>
          </para> 
<para>As you can see, unlike other Debrief line formats, this format allows for NULL fields.  Where the sensor latitude and longitude values are replaced by the single word NULL, Debrief plots this sensor contact using a relative origin.
          </para> 
</sect2> 
<sect2> 
<title>Relative Data</title> 
<para>


 When (as described above) Debrief plots data using a relative origin, it follows the following procedure:
            <itemizedlist>
              <listitem>
                <para>The first time the sensor contact line is plotted, it examines its parent track to find the vessel position nearest to (or greater than) the sensor contact DTG.</para> 
</listitem> 
<listitem> 
<para>The sensor contact then calculates the position of its far end relative to this origin</para> 
</listitem> 
</itemizedlist> </para> 
</sect2> 
<sect2> 
<title>Analysing sensor data</title> 
<para>When first loaded,
            <glossterm linkend="g_sensor">sensor</glossterm> data is not
            <indexterm>
              <primary>Sensor Data</primary>
              <secondary>Analysing</secondary>
            </indexterm> made visible, since with any reasonable volume of sensor data the plot quickly becomes illegible. Sensor data is switched on and off individually by accessing the sensor, via it&apos;s Track, from the Layer Manager.
          </para> 
<para>It is once in
            <glossterm linkend="g_snail_trail">snail trail</glossterm> mode that sensor data is most easily analysed.  When in snail mode the Snail display mode performs the following processing:
            <itemizedlist>
              <listitem>
                <para>For each Track being plotted, the display mode looks to see if it contains any Sensor data.</para> 
</listitem> 
<listitem> 
<para>It then examines each list of Sensor data to see if it&apos;s visible
 If it is visible, it plots the current sensor contact (nearest to the
                  <glossterm linkend="g_tote">Tote</glossterm> time), followed by the sensor contacts as disappearing contacts running back through the length indicated in the TrailLength parameter in the properties window.
                </para> 
</listitem> 
</itemizedlist> </para> 
</sect2> 
</sect1> 
<sect1 id="view_sensor"> 
<title>Viewing sensor data</title> 
<sect2> 
<title>Get started</title> 
<para>To get started in this part of the tutorial, you first need to
            <indexterm>
              <primary>Sensor Data</primary>
              <secondary>Loading Sensor Data</secondary>
            </indexterm>load your track data.  Drag the file
            <filename>sen_tracks.rep</filename> from your
            <application>Debrief</application> directory into a new, blank session.
            <note>
              <para>Note that you have to load tracks before loading any
                <glossterm linkend="g_sensor">sensor</glossterm> data, since the sensor data looks for its "host track" whilst it is being loaded.  Debrief will report an error message should you try to load sensor data first.
              </para> 
</note> </para> 
<para>Next drag in the
            <filename>sen_frig_sensor.rep</filename> and
            <filename>sen_ssk_sensor.rep</filename> tracks (either individually or together).  The progress window will show the data being read into
            <application>Debrief</application>, after which you should see the following:
            <figure float="0">
              <title>Original sensor tracks</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sensor_tracks.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>Note that by default sensor tracks are not visible when first loaded - there&apos;s a strong chance of the plot being unmanageably cluttered if they are visible when loaded.  If you&apos;re inquisitive about the squiggles on the red line, read the end-note
            <footnote>
              <para>
 To guarantee that the data-set was unclassified a set of simulated vessel tracks are shown, produced during ASSET testing.  The squiggle on the red-track represents the stern-arc clearance behavior of the SSK represented by the red track.  The SSK is fitted with broadband sonar and periscope (optic) sensors, which are seen from the Layer Manager.  The other vessel, the frigate is equipped with just an optic sensor (Mk1 Eyeball)</para> 
</footnote>. </para> 
</sect2> 
<sect2> 
<title>Viewing the sensor data</title> 
<para>As mentioned above, you can&apos;t actually
            <indexterm>
              <primary>Sensor Data</primary>
              <secondary>Viewing Sensor Data</secondary>
            </indexterm>see any sensor data at the moment.  you switch on the sensor data from the
            <guilabel>Layer Manager</guilabel> - so, open the
            <guilabel>Layer Manager</guilabel> from the
            <guilabel>Stepper Control</guilabel>:
            <guiicon>
              <inlinegraphic fileref="figures/layer_mgr.gif"/>
            </guiicon>
          </para> 
<para>The
            <guilabel>Layer Manager</guilabel> appears as shown:
            <figure float="0">
              <title>Layer Manager showing sensor tracks</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sensors2.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>

	   Open up the
            <guilabel>Track:New_SSK</guilabel> layer to examine it&apos;s contents, as shown below:
            <figure float="0">
              <title>Sensor track contents</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sensors3.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>As you can see before the locations within the Track the vessel&apos;s two sensors are listed.</para> 
</sect2> 
<sect2> 
<title>Formatting the sensor data</title> 
<para>Right-click on the
            <guilabel>New_SSK_Optic</guilabel> sensor, and
            <indexterm>
              <primary>Sensor Data</primary>
              <secondary>Formatting</secondary>
            </indexterm>
            <indexterm>
              <primary>Formatting Data</primary>
              <secondary>Sensor Data</secondary>
            </indexterm>change its visibility to true.  The plot will change to appear as below:
            <figure float="0">
              <title>Coloured sensor track</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sensors4.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>The area where the two tracks meet now has a red-block between it.  This is in fact, the series of periscope contacts from the red vessel. Zoom in on this area, to show the plot below:
            <figure float="0">
              <title>Zoomed in on sensor track</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sensors5.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>As you hover your mouse over the data, the DTGs of the track positions will be shown in the tooltips.  If you hover the mouse over the area between the two tracks the DTGs of the
            <glossterm linkend="g_sensor">sensor</glossterm> contact data items will be shown (you have some unusual processing here, typically each end of a sensor contact will be over a track - so the track data item will normally be returned.  So, for the sensor contact data item, an additional "hot-spot" is located half-way along the bearing line).
          </para> 
<para>Right-click near the middle of one of the bearing lines, and make the sensor contact label visible.  Right-click near the middle of one of them again, and select Edit Sensor Contact Data xxxxx.  The properties window shows the editable aspects of sensor contact data.  Whilst many familiar properties will be found there (colour, visible, label) there are also some more unusual ones:
            <variablelist>
              <varlistentry>
                <term>LineStyle</term>
                <listitem>
                  <para>To provide easier identification of all of lines which now appear on the plot, you can set the line-style of Sensor Contact lines from the list provided.  Note that at present these line-styles are not shown when the plot is written to the metafile or in Snail mode, where they appear as solid lines.</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>PutLabelAt</term> 
<listitem> 
<para>This lists the three locations where the label can be placed.</para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
</sect2> 
<sect2> 
<title>Analysing the sensor data</title> 
<para>So, now that we&apos;re zoomed in, we&apos;ll have a go at running through the
            <glossterm linkend="g_serial">serial</glossterm> in snail mode.
          </para> 
<para>Switch to the
            <guilabel>Tote</guilabel> window on the left-hand side of the screen, and press
            <guibutton>Auto Generate</guibutton> to let
            <application>Debrief</application> automatically assign the tracks.
          </para> 
<para>Whilst still in Normal Display Mode, jump to the end of the track by pressing the Last button:
            <guiicon>
              <inlinegraphic fileref="figures/LastBtn.gif"/>
            </guiicon>
          </para> 
<para>If this isn&apos;t quite visible on the time stepper, resize the Tote to show it by dragging the slider bar to the right:
            <figure float="0">
              <title>Resizing the time stepper</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sensors6.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>On the plot, you should see the white rectangle jump to the ends of the track.  Now step backwards to the start of the contact data using the
            <guibutton>Large Bwd</guibutton> step button:
            <guiicon>
              <inlinegraphic fileref="figures/LargeBwd.gif"/>
            </guiicon>
          </para> 
<para>The highlight on the red track should now be before the point where the first
            <glossterm linkend="g_sensor">sensor</glossterm> contact line starts.  Now switch to snail mode, the plot should now show the two vessels with their speed/heading vectors (if the plot is blank, just press the
            <guibutton>Step Fwd</guibutton> button).
          </para> 
<para>
	   Step forward using the
            <guibutton>Fwd</guibutton> button, and you will see the sensor contact bearing fans appear:
            <figure float="0">
              <title>Sensor data in Snail mode</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sensors7.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>The fan bearing line nearest to the
            <indexterm>
              <primary>Snail Trail</primary>
              <secondary>Stepping through sensor data</secondary>
            </indexterm>
            <indexterm>
              <primary>Sensor Data</primary>
              <secondary>Snail Trail</secondary>
            </indexterm>current stepper time is shaded solid, whilst earlier bearing lines fade to the background colour.
          </para> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="tma_data"> 
<title>Loading TMA solution data</title> 
<sect1> 
<title>Introduction to TMA data</title> 
<sect2> 
<title>Introduction</title> 
<para>
            <glossterm linkend="g_tma_solution">TMA</glossterm> algorithms are used to produce an estimate of range by analysing a sequences of sensor contacts which only contain bearing (and optionally range).  The output of the algorithm is typically a series of estimated target locations optional estimates for course, speed and depth.  Uncertainty in bearing and range may be indicated by representing the target location as an ellipse.
          </para> 
<para>TMA contact data is always related to one of the currently loaded tracks, and may be represented either as an absolute location (at the centre of the ellipse) or as a range and bearing from the nearest point on that loaded track.  The strategy for use of absolute versus relative data is  described earlier in
            <xref linkend="prepare_sensor_data"/>
          </para> 
</sect2> 
<sect2> 
<title>Preparing TMA Data</title> 
<para>
 Sensor data is loaded into Debrief in REP files, just like any other Debrief data.  The line format is:
            <screen>
              <markup>
;TMA_POS: YYMMDD HHMMSS.SSS AAAAAA @@ DD MM SS.SS H DDD MM SS.SS H 
TT...TT OOO.O  XXXX YYYY  CCC SSS DDD xx.xx 
;; date, time, ownship name, symbology, tma lat, tma long, track name, 
ellipse orientation (deg from north),  maxima (yds), minima (yds), 
course, speed, depth (m), label string

;TMA_RB: YYMMDD HHMMSS.SSS AAAAAA @@ BBB.B RRR.R TT...TT OOO.O
XXXX YYYY  CCC SSS DDD xx.xx 
;; date, time, ownship name, symbology, bearing (deg), range (yds), 
track name, elipse orientation (deg from north),  maxima (yds),
 minima (yds), course, speed, depth (m), label string
              </markup>
            </screen>
            <note>
              <para>There are two annotation format to represent TMA solutions (TMA_POS and TMA_RB). TMA_POS is used to define a TMA solution at a particular location, and TMA_RB is used to define a TMA solution at a specific range and bearing from the current ownship location at that specific DTG. Where a solution ellipse is not known the orientation, maxima and minima values can be represented by a single NULL value.
              </para> 
</note> </para> 
</sect2> 
<sect2> 
<title>Relative Data</title> 
<para>


 When (as described above) Debrief plots data using a range and bearing, it follows the following procedure:
            <itemizedlist>
              <listitem>
                <para>The first time the TMA solution is plotted, it examines its parent track to find the vessel position nearest to (or greater than) the TMA solution DTG.</para> 
</listitem> 
<listitem> 
<para>The TMA solution then calculates the position of its centre relative to this origin</para> 
</listitem> 
</itemizedlist> </para> 
</sect2> 
<sect2> 
<title>Analysing sensor data</title> 
<para>When first loaded, TMA data is not
            <indexterm>
              <primary>TMA Data</primary>
              <secondary>Analysing</secondary>
            </indexterm> made visible, since with any reasonable volume of TMA data the plot quickly becomes illegible. TMA data is switched on and off individually by accessing the whole TMA track, via it&apos;s Track, from the Layer Manager.
          </para> 
<para>It is once in
            <glossterm linkend="g_snail_trail">snail trail</glossterm> mode that TMA data is most easily analysed.  When in snail mode the Snail display mode performs the following processing:
            <itemizedlist>
              <listitem>
                <para>For each Track being plotted, the display mode looks to see if it contains any TMA data.</para> 
</listitem> 
<listitem> 
<para>It then examines each list of TMA data to see if it&apos;s visible
 If it is visible, it plots the current TMA solution (nearest to the
                  <glossterm linkend="g_tote">Tote</glossterm> time), followed by the TMA solution as disappearing solutions running back through the length indicated in the TrailLength parameter in the properties window.
                </para> 
</listitem> 
</itemizedlist> </para> 
</sect2> 
</sect1> 
<sect1 id="view_tma"> 
<title>Viewing TMA data</title> 
<sect2> 
<title>Introduction</title> 
<para>At the time of writing this TMA support, the Maritime Warfare Centre is not able to produce TMA data for use in tutorial screenshots.  The TMA implementation is very close to that of Sensor data, so if you have TMA data to view, the steps to take are very similar to those presented in
            <xref linkend="view_sensor"/>
          </para> 
</sect2> 
</sect1> 
</chapter> 
</part>

  <!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<!--   Maintainers                                                         -->
<!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<part id="maintainers_guide"> 
<title>Maintainer&apos;s Guide</title> 
<partintro> 
<para>This section will give you all you need to look after a collection of Debrief installations, from fault-finding through to optimising the installations used.</para> 
</partintro> 
<chapter id="participating"> 
<title>Participating in Debrief development</title> 
<sect1 id="debrief_online"> 
<title>Debrief online</title> 
<para>Whilst the use of
          <application>Debrief</application> originated at the
          <glossterm linkend="g_MWC">MWC</glossterm>, it now has a very distributed community of users.  Communication across this distributed user-group is enabled via the Internet, through three mechanisms: the Debrief home page, the SourceForge project management page, and the Debrief news list.  These mechanisms are described in this chapter.
        </para> 
<para>The
          <application>Debrief</application> web-site, found at
          <ulink url="http://www.debrief.info">http://www.debrief.info</ulink> provides an introduction to
          <application>Debrief</application>, together with access to this tutorial and a
          <emphasis>way-in</emphasis> to getting started with Debrief.
          <figure float="0">
            <title>Debrief home page</title>
            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/debrief_home.gif"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>
        </para> 
<para>The
          <application>SourceForge.net</application> page, used to support the project management of Debrief, is described later in
          <link linkend="debrief_feedback">Providing Feedback</link>, and the
          <application>Debrief</application> news list is described in the
          <link linkend="debrief_news">next section</link>.
        </para> 
</sect1> 
<sect1 id="debrief_news"> 
<title>Keeping up to date</title> 
<para>News lists (more commonly known as mailing lists) are one of the
          <application>SourceForge.net</application> services
          <indexterm>
            <primary>SourceForge</primary>
            <secondary>Keeping up to date</secondary>
          </indexterm> which are employed by
          <application>Debrief</application>.  The lists provide an e-mail based way of communicating Debrief news and announcements amongst a list of interested users.  Once an e-mail is sent to the e-mail address of the newsgroup (in your case hosted at
          <emphasis>SourceForge.net</emphasis>), it is automatically forwarded to all of registered news-list members.  A separate e-mail address (the news-list title with a
          <emphasis>request</emphasis> suffix) provides management support to the newsgroup.
        </para> 
<para>As of summer 2001 there are around a dozen users registered on the news list, with the
          <application>Debrief</application>
          <link linkend="project_manager">Project Manager</link> publishing news each time a new version of
          <application>Debrief</application> is made available for download.
        </para> 
<para>There is currently just one mailing list related to
          <application>Debrief</application>, this is named
          <application>debrief-news</application>. This is quite a low volume mailing list, with at the most two messages a month; so there&apos;s no need to worry about getting snowed-under with news items.
        </para> 
<sect2> 
<title>Joining</title> 
<para>To join to the
            <application>Debrief</application> news list, send an e-mail to
            <email>debrief-news-request@lists.sourceforge.net</email> with the single word
            <emphasis>subscribe</emphasis> in the subject. You will receive a reply asking you to confirm that you wish to subscribe.  This e-mail is to validate your e-mail address, and should be retained since it contains the password you must use to unsubscribe.
          </para> 
</sect2> 
<sect2> 
<title>Submitting</title> 
<para>Once you have joined the list, you are then entitled to submit news, should you wish to.  So, if you have identified or fixed a significant bug, or have contributed significant content to the
            <application>Debrief</application> web-site, please feel free to e-mail the news list directly.  Just send an e-mail to
            <email>debrief-news@lists.sourceforge.net</email>
          </para> 
</sect2> 
<sect2> 
<title>Leaving</title> 
<para>If you wish to leave the news list, just send an e-mail to
            <email>debrief-news@lists.sourceforge.net</email> with the single word
            <emphasis>unsubscribe</emphasis> in the subject line followed by the password you were provided with at your initial subscription.  If you have lost your password please make a request to the
            <link linkend="project_manager">Project Manager</link> to be unsubscribed.
          </para> 
</sect2> 
<sect2> 
<title>Web-based news-list management</title> 
<para>In addition to these e-mail based methods of interacting with the
            <application>Debrief</application> news list, there is a web-page based interface at:
            <ulink url="http://lists.sourceforge.net/lists/listinfo/debrief-news">http://lists.sourceforge.net/lists/listinfo/debrief-news</ulink>.  From this page you can subscribe, unsubscribe, and configure options for how the news messages are sent to you.
          </para> 
</sect2> 
</sect1> 
<sect1 id="debrief_at_mwc"> 
<title>Debrief at the Maritime Warfare Centre</title> 
<para>This section provides guiance on maintenance of Debrief installations for users on the Maritime Warfare Centre network.</para> 
<sect2> 
<title>Installing Debrief</title> 
<para>The IT Support department should be approaced to conduct fresh <application>Debrief</application> installations. The most up-to-date Debrief installer is located at <filename>Nelson/TD Submarines Info/PlanetMayo/Debrief/Debrief.exe</filename>.  </para> 
</sect2> 
<sect2> 
<title>Keeping your Debrief installation up to date</title> 
<para>The development of the Debrief application is ongoing throughout the year.  Occasionally particular users have new requirements, or bugs are found.  Normally, only users working in related areas are informed about new features or minor bugs that only occur when performing that particular type of analysis.  Where new features relate to users across MWC, or where a significant bug is fixed, e-mails are sent out to the Debrief user mailing list.</para> 
<sidebar> 
<formalpara> 
<title>Debrief Users mailing list</title> 
<para>On the MWC network mailing lists have been set up to allow e-mails to quickly be addressed to a group of users.  One such list is the <emphasis>Debrief Users</emphasis> list.  When you start using <application>Debrief</application> it is worth contacting IT Support to have your name added to the list - then you know you will be informed of any significant changes to Debrief.</para> 
</formalpara> 
</sidebar> 
<para>Don't worry about always having the newest version of <application>Debrief</application>.  Most software changes only apply to a small portion of the software and don't justify the upgrade effort.  If, however, a Debrief fix applies specifically to your work, you should follow these steps to upgrade your Debrief installation:<orderedlist><listitem><para>Close the Debrief application, if it is running</para> 
</listitem> 
<listitem> 
<para>Open <application>Windows Explorer</application> and navigate to the <filename>Nelson</filename> server - you may have to find this through <guilabel>Network Neighbourhood</guilabel>.  Within <filename>Nelson</filename>, navigate to <filename>TACDEV/TD Submarines Info/PlanetMayo/Debrief/Updates</filename> <ulink url="\\nelson\tacdev\TD Submarines Info\PlanetMayo\Debrief\updates">(here)</ulink>. From this directory select <filename>d2003.jar</filename> and <filename>d2003.chm</filename>, then select <guimenuitem>Copy</guimenuitem> from the <guimenu>Edit</guimenu> menu.</para> 
</listitem> 
<listitem> 
<para>Still in <application>Windows Explorer</application>, navigate to your <application>Debrief</application> installation directory - which is probably at <filename>c:\\program files\debrief 2003</filename>.  Into this directory press <guimenuitem>Paste</guimenuitem> from the <guimenu>Edit</guimenu> menu, to paste the files into this Directory. You can now use your normal <application>Debrief</application> shortcut to load the new version.</para> 
</listitem> 
</orderedlist></para> 
</sect2>
<sect2>
<title>Reporting MWC bugs/feature requests</title>
<para>On the MWC Intranet is the <application>MWC Issue Tracker</application>, an application provided for users of software produced by PlanetMayo Ltd (of which Debrief is one). This web-based application is used for reporting and managing feature requests and bug reports.  When you encounter a problem with Debrief it may be worth consulting the Issue Tracker first to see if it is an existing problem.  If the problem already exists, have a read through its history and see if any workarounds are recorded.  Similarly, if you are able to contribute to the description on what caused the bug feel free to do so.<tip><para>Obviously, if you are being held back by a bug approach Mr Ian Mayo immediately for direct support.  It is still worth reporting the bug in the <application>Issue Tracker</application> however, since the information you enter may be of value to another user encountering a similar problem in the future, particularly if Mr Mayo isn't available.</para>
</tip></para>
<sect3>
<title>Finding the MWC Issue Tracker</title>
<para>The MWC <application>Issue Tracker</application> is on the MWC Intranet at <ulink url="http://intranet2/mis2/bugs/Default.asp">http://intranet2/mis2/bugs/Default.asp</ulink>.</para>
</sect3>
<sect3>
<title>Using the MWC Issue Tracker</title>
<para>The first view you see of the <application>Issue Tracker</application> is the overview page.  This contains a series of action-oriented links, some querying functionality (which provides you with a query-box:<guilabel>Search</guilabel>, and a  series of overviews:<guilabel>Bookmarks</guilabel>), and finally a list of the most recently active issues (both recently created and recently updated). By default, the <application>Issue Tracker</application> shows <emphasis>open</emphasis> issues related to <emphasis>all</emphasis> PlanetMayo Ltd applications, but you can quickly switch to <application>Debrief</application>-related issues by selecting <application>Debrief</application> from the <guilabel>Application</guilabel> drop-down list.<figure float="0">
            <title>Issue Tracker home page</title>
            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/IssueTracker_FrontPage.gif"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure></para>
<para>The list of actions along the top of the page allow to view the full issue list (the current page) or to add a new issue. The <guilabel>Administration</guilabel> link allows administrators to correct typos etc.  We will start off by viewing an issue.  Click on the first issue in the list (<guilabel>Improve time-track toolbox layout</guilabel> in the figure above).<figure float="0">
            <title>Viewing an issue</title>
            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/IssueTracker_ViewIssue.gif"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>The View Issue page shows the information recorded when the issue was submitted, followed by a text-box into which updates can be added, followed by a series of previous updates.  Adding an update can be used to provide additional contextual information regarding an issue, or to update its status (including marking it as complete).</para>
</sect3>
<sect3>
<title>Adding an Issue</title>
<para>To add a new issue, click on <guilabel>Add New Issue</guilabel> from the action-links at the top of any <application>Issue Tracker</application> page.  Once you have entered the details of the new issue, press the <guibutton>Submit</guibutton> button at the bottom of the page.<figure float="0">
            <title>Add/Edit issue page</title>
            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/IssueTracker_AddIssue.gif"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>Now work your way down the new-issue form, filling in the following details:<variablelist><varlistentry><term>Application/Area</term><listitem><para>a combined term representing the application for which an issue is being reported, together the area within that application which the issue relates to. </para>
</listitem>
</varlistentry>
<varlistentry>
<term>Issue Name</term>
<listitem>
<para>a short name used to describe the issue.  You could describe the area of Debrief within which the problem occured, or the nature of the new feature you would like added to Debrief</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Issue Desc</term>
<listitem>
<para>include here a more detailed description of the issue.  For bugs, include a description of the steps which can be taken to reproduce it, or the activity you were conducting when the problem occurred.  It's quite likely that since you encountered the bug, your work would benefit from the bug and would be inconvenienced by the bug not being fixed.  In many cases, providing a series of steps to reproduce bug fantastically reduces the effort required in fix it.  For feature requests include a description of the outcome you would like.  So, first picture a version of Debrief which exactly meets your new requirement.  Now describe in detail the new features.  It is also of value to provide detail regarding the MWC business benefit of the new feature (on occasion addition of new features is prioritised according to benefit/cost).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Priority</term>
<listitem>
<para>how strongly you need a bug-fixed/feature added.  For urgent issues contact Ian Mayo directly by e-mail/telephone.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Status</term>
<listitem>
<para>The current status of this issue - new issues start as <guilabel>Open</guilabel>. Issues being worked on change to <guilabel>In Progress</guilabel>, and are marked as <guilabel>Closed</guilabel> on completion.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Version</term>
<listitem>
<para>This is the <glossterm linkend="G_BUILD_DATE">build-date</glossterm> of Debrief which your issue relates to.  This is essential for bug-reports, though it isn't normally applicable to feature requests.  </para>
</listitem>
</varlistentry>
<varlistentry>
<term>Assigned To</term>
<listitem>
<para>This contains a list of recognised users of the <application>Issue Tracker</application>. For <application>Debrief</application>, it is only really worthwhile assigning them to Ian Mayo.  From the <application>Issue Tracker</application> home page you can quickly see issues assigned to you - this may happen if there are outstanding questions regarding an issue - though typically you'll find out about such questions via e-mail/phone. </para>
</listitem>
</varlistentry>
</variablelist></para>
</sect3>
</sect2> 
</sect1> 
<sect1 id="debrief_feedback"> 
<title>Providing feedback</title> 
<para>In addition to the
          <application>Debrief</application> web-site, the
          <application>Debrief</application> project makes use of
          <application>SourceForge</application>, an online development web-site
          <indexterm>
            <primary>SourceForge</primary>
            <secondary>Providing Feedback</secondary>
          </indexterm> which provides us with bug-tracking, file download support, and news groups.

          <figure float="0">
            <title>SourceForge.net home page</title>
            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/sf_page.gif"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>
        </para> 
<para>
	  From the screenshot of the
          <application>SourceForge.net</application> home page for
          <application>Debrief</application> you can see a list of the services it provides, ranging from discussion forums, through bug and feature-request trackers, to news lists and file downloads.  All of these services are provided for free, funded by
          <ulink url="http://valinux.com/">VA Linux Systems</ulink>.
        </para> 
<sidebar> 
<para>
            <guiicon>
              <inlinegraphic fileref="figures/sflogo-hammer1.jpg"/>
            </guiicon>
          </para> 
<para>
            <application>
              <indexterm>
                <primary>SourceForge</primary>
              </indexterm>SourceForge.net
            </application>&apos;s mission is to enrich the Open Source community by providing a centralized place for Open Source Developers to control and manage Open Source Software Development.
          </para> 
<para>
            <application>SourceForge</application> is a free hosting service for Open Source
developers which offers, among other things, a CVS repository, mailing lists,
bug tracking, message forums, task management software, web site hosting,
permanent file archival, full backups, and total web-based administration.
          </para> 
</sidebar> 
<sect2 id="debrief_bugs"> 
<title>Reporting Bugs</title> 
<para>To report a bug, or a feature which you believe is behaving incorrectly, press the
            <guibutton>Tracker</guibutton> link from the
            <application>SourceForge.net</application> homepage
            <indexterm>
              <primary>SourceForge</primary>
              <secondary>Reporting Bugs</secondary>
            </indexterm> for Debrief. These
            <emphasis>Trackers</emphasis> allow registered and anonymous users to submit items to the lists.  The items are then tracked, and provided an e-mail address was provided, the submitter is kept informed of the progress of the submission.
          </para> 
<para>
	    The Trackers page provides a list of types of data which may be tracked.
          </para> 
<para>
            <figure float="0">
              <title>SourceForge.net Trackers page</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sf_trackers.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>
	    To report a new bug, click on the
            <guibutton>Bugs</guibutton> link from this page.  You will be taken to a page (see below) which allows you to both browse existing bugs and add new ones.  To add a new bug, press the
            <guibutton>Submit New</guibutton> button, which will take you to the form used to submit new bug reports. Select the correct categories for the new bug using the categories provided, then a summary (title) and description of the bug.  The form also requests your e-mail address, this is most useful since it allows the
            <link linkend="project_manager">Project Manager</link> to approach you with any supplementary questions.
          </para> 
<para>
            <figure float="0">
              <title>SourceForge.net Bug Reporting page</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/sf_bugs.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
<para>
	    Once you have submitted the report, you should receive an e-mail confirmation of the bug-report, followed by an e-mail from the
            <link linkend="project_manager">Project Manager</link>, normally containing a time-frame for resolution of the bug.
          </para> 
<tip> 
<para>If you find yourself frequently submitting bugs via
              <application>SourceForge.net</application> (hopefully not) then it may prove worthwhile to register with
              <application>SourceForge.net</application>.  Registering gives you your own ID within
              <application>SourceForge.net</application>, and gives you a dedicated personal page which allows you track the progress of all bug-reports and feature requests submitted.
            </para> 
</tip> 
</sect2> 
<sect2 id="debrief_features"> 
<title>Requesting new features</title> 
<para>The procedure for
            <indexterm>
              <primary>SourceForge</primary>
              <secondary>Requesting new features</secondary>
            </indexterm>requesting new features is much the same as for
            <link linkend="debrief_bugs">Reporting Bugs</link>, described above.  The time-frame for resolution of feature-requests is normally larger than for bugs, but if maintenance effort is being performed in a related area of
            <application>Debrief</application>, and the
            <link linkend="project_sponsor">Project Sponsor</link> is supportive, then the new feature should get added quite quickly.
          </para> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="maintainers"> 
<title>Debrief maintainer&apos;s guide</title> 
<sect1> 
<title>Installation Guidance</title> 
<sect2> 
<title>System Requirements</title> 
<para>
            <table>
              <title>Requirements for
                <application>Debrief</application>
              </title>
              <tgroup cols="3">
                <thead>
                  <row>
                    <entry>
                      <para>Requirement</para> </entry> 
<entry> 
<para>Minimum</para> </entry> 
<entry> 
<para>Recommended</para> </entry> 
</row> 
</thead> 
<tbody> 
<row> 
<entry> 
<para>Processor</para> </entry> 
<entry> 
<para>800 MHz</para> </entry> 
<entry> 
<para>1400 MHz</para> </entry> 
</row> 
<row> 
<entry> 
<para>Memory</para> </entry> 
<entry> 
<para>128 Mb</para> </entry> 
<entry> 
<para>256 Mb</para> </entry> 
</row> 
<row> 
<entry> 
<para>Java Virtual Machine</para> </entry> 
<entry> 
<para>JVM 1.3 (
                        <application>Debrief</application> relies on JVM 1.3 for its updated Table control.  For a JVM1.2 version of
                        <application>Debrief</application>, please contact the administrator).
                      </para> </entry> 
<entry> 
<para>As new as possible. JVM 1.4.1 includes mouse-wheel control, has been seen to provide the fastest performance, and provides the most robust 3-d plotting support (JVM1.4.0 experienced problems with 3-d plotting).</para> </entry> 
</row> 
<row> 
<entry> 
<para>Java 3D Libraries (required for viewing Debrief plots in 3D
                        <footnote>
                          <para>
 To interactively view Debrief plots in 3 dimensions the Java 3d runtime files and libraries must be installed on the machine.  These libraries are a free download from the Java website.</para> 
</footnote> ) </para> </entry> 
<entry>Java 3D 1.3</entry> 
<entry> 
<para>Java 3D 1.3</para> </entry> 
</row> 
<row> 
<entry> 
<para>XML Libraries</para> </entry> 
<entry> 
<para>SAX and DOM support (through the enclosed jaxp.jar and parser.jar libraries)</para> </entry> 
<entry> 
<para></para> </entry> 
</row> 
<row> 
<entry> 
<para>Java Media Framework (required for copying Debrief sessions to video file).</para> </entry> 
<entry> 
<para>2.1.1 (through the enclosed jmf.jar library)</para> </entry> 
<entry> 
<para></para> </entry> 
</row> 
<row> 
<entry> 
<para>OpenMap libraries (used for plotting NIMA&apos;s Vector Map data)</para> </entry> 
<entry> 
<para>4.2.1 (through the enclosed openmap.jar library)</para> </entry> 
<entry> 
<para></para> </entry> 
</row> 
</tbody> 
</tgroup> 
</table> </para> 
</sect2> 
<sect2> 
<title>Directory Structure</title> 
<para>The directory where the application startup script is installed is called the "Startup Directory".  The Startup Directory is set during the installation of Debrief, and defaults to
            <filename>c:\Program Files\Debrief 2003</filename>. In this directory you should find a collection of REP and
            <glossterm linkend="g_xml">XML</glossterm> files, some icons, the CHM help file, the
            <filename>d2ksettings.prp</filename> properties file.  In a sub-directory titled
            <filename>lib</filename>, are
            <application>Debrief</application>&apos;s supporting libraries (mostly third party), and in the directory named
            <filename>UninstallerData</filename> are the files necessary to support removing
            <application>Debrief</application>.
            <figure float="0">
              <title>Debrief directory structure</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/DirectoryStructure.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
</sect2> 
<sect2 id="starting_debrief"> 
<title>Starting the program</title> 
<para>The shortcut placed on the
            <guimenu>Start|Program Files|Debrief 2003</guimenu> menu actually calls the
            <filename>Debrief.exe</filename> file found in the startup directory.  This application sets the class-path for the application and starts Debrief itself (which is contained in
            <filename>D2003.jar</filename>).  It is also possible to start the application by double-clicking on
            <filename>D2003.jar</filename> itself.
          </para> 
<para>There are instances when
            <application>Debrief</application> has an insufficient memory allocation (of 64Mb) and halts processing reporting an
            <emphasis>out of memory</emphasis> error to the
            <filename>trace.txt</filename>.   Such instances occur more frequently with
            <link linkend="etopo_description">ETOPO</link> data loaded.  To increase the maximum memory allocated to
            <application>Debrief</application>, insert the following lines into the top of Debrief launch properties file, titled
            <filename>Debrief.cfg</filename>:
            <screen>
              <markup>
.
jre1.5\bin\javaw.exe 
-Dswing.metalTheme=steel -Xmx256m -jar D2003.jar
</markup>
            </screen>
          </para> 
<para>The example shown above allows the memory allocated to Debrief to expand up to 256 Mb if necessary.</para> 
<note> 
<para>As you may be aware,
              <application>Debrief</application> uses the
              <application>Launch4j</application> application to make Debrief run more intuitively under MS Windows.  Launch4j provides an executable which can be used to start
              <application>Debrief</application> - particularly useful for
              <application>MS Windows</application>users are used to starting applications which a
              <filename>exe</filename> suffix. This application is called
              <filename>Debrief.exe</filename>.  The application loads
              <application>Debrief</application> using the settings and parameters contained in a data-file, which takes the same name as the application but adds a
              <filename>cfg</filename> suffix. The workaround described above adds a property to this settings file to increase the memory available to Debrief. </para> 
</note> 
</sect2> 
</sect1> 
<sect1 id="fault_diagnosis"> 
<title>Fault-Diagnosis Instructions</title> 
<sect2> 
<title>How-to</title> 
<para>In Oct 2000,
            <application>Debrief</application> was modified in order that errors and stack traces were written to a log file suitable for transmission back to MWC.  The trace file is named "
            <filename>trace.txt</filename>" and is created afresh each time Debrief is run (and a trace is required).  The file is normally placed in the directory from which the application was started. The format/content of the file is as follows:


            <table frame="all">
              <title>Debrief Error Traces</title>
              <tgroup cols="2">
                <thead>
                  <row>
                    <entry>
                      <para>Content</para> </entry> 
<entry> 
<para>Description</para> </entry> 
</row> 
</thead> 
<tbody> 
<row> 
<entry> 
<para>
                        <markup>Stack trace started at:Mon Oct 09 13:44:17 GMT+01:00 2000</markup>
                      </para> </entry> 
<entry> 
<para>Header Information</para> </entry> 
</row> 
<row> 
<entry> 
<para>
                        <screen>
                          <markup>-- listing properties --
 java.runtime.name=Java(TM) 2 Runtime Environment, Stand...
 sun.boot.library.path=C:\Program Files\JavaSoft\JRE\1.3\bin
 java.vm.version=1.3.0-C
 java.vm.vendor=Sun Microsystems Inc.
 ... ETC, ETC, ETC
 java.ext.dirs=C:\Program Files\JavaSoft\JRE\1.3\lib...
 sun.boot.class.path=C:\Program Files\JavaSoft\JRE\1.3\lib...
 java.vendor=Sun Microsystems Inc.
 file.separator=\
 java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport...
 sun.cpu.endian=little
 sun.io.unicode.encoding=UnicodeLittle
 user.region=GB
 sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+m...
 ****************-------------</markup>
                        </screen>
                      </para> </entry> 
<entry> 
<para>Settings for this PC / Java installation</para> </entry> 
</row> 
<row> 
<entry> 
<para>
                        <screen>
                          <markup>****************-------------
 java.io.StreamCorruptedException: InputStream does not contain a serialized object
 at java.io.ObjectInputStream.readStreamHeader(Unknown Source)
 at java.io.ObjectInputStream.&lt;init&gt;(Unknown Source)
 ETC, ETC, ETC
 at java.awt.Container.dispatchEventImpl(Unknown Source)
 at java.awt.Window.dispatchEventImpl(Unknown Source)
 at java.awt.Component.dispatchEvent(Unknown Source)
 at java.awt.EventQueue.dispatchEvent(Unknown Source)
 at java.awt.EventDispatchThread.pumpOneEvent(Unknown Source)
 at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
 at java.awt.EventDispatchThread.run(Unknown Source)</markup>
                        </screen>
                      </para> </entry> 
<entry> 
<para>Stack trace for errors as they occur</para> </entry> 
</row> 
</tbody> 
</tgroup> 
</table> </para> 
<para>This error trace may be examined for hints to the problem occurring.  The error trace may be viewed in a text editor, and may be forwarded back to the
            <link linkend="project_manager">Project Manager</link> via post/e-mail/fax as applicable.  The file does not contain any details of the data being edited, but the file should still be inspected before transmission
          </para> 
<para>If these error messages do not provide any insight to the problem, you are left with the normal diagnosis steps as follows:
            <itemizedlist>
              <listitem>
                <para>Try to run another Java application on the machine, to check that Java is not corrupted</para> 
</listitem> 
<listitem> 
<para>If Java is ok then,

                  <itemizedlist>
                    <listitem>
                      <para>Check that Debrief can open and process the "sample" files included in the installation: boat1.rep and boat2.rep.</para> 
</listitem> 
<listitem> 
<para>If Debrief can process these files, but not the current ones then

                        <itemizedlist>
                          <listitem>
                            <para>Try to re-install the Debrief application from &apos;save&apos; disks to check that the sources are not corrupted</para> 
</listitem> 
<listitem> 
<para>If at this point the error is still occurring then you will have to resort to reading as much of this Help guidance as practical, and then contacting the
                              <link linkend="project_manager">Project Manager</link>

                            </para> 
</listitem> 
</itemizedlist> </para> 
</listitem> 
</itemizedlist> </para> 
</listitem> 
</itemizedlist> </para> 
</sect2> 
</sect1> 
<sect1 id="debrief_props"> 
<title id="debrief_props_title">Debrief Properties </title> 
<sect2> 
<title>Introduction</title> 
<para>Debrief uses a
            <indexterm>
              <primary>File Format</primary>
              <secondary>Properties file</secondary>
            </indexterm>text file to store the Most Recently Used file list and an assortment of properties.
          </para> 
<para>The file is named
            <filename>d2ksettings.prp</filename>, and is located in the
            <indexterm>
              <primary>Directory</primary>
              <secondary>Properties file settings</secondary>
            </indexterm>directory from which
            <application>Debrief</application> is started.  If such a file is not present in the startup directory, it will be created as the application exits.
          </para> 
<para>The Most Recently Used file list stores itself into the properties file, appearing as a series of entries beginning with the letters MRU.</para> 
<note> 
<para>Note that when Debrief closes it over-writes the existing properties file (since it needs to add the new MRU items).  So, if you want to make manual edits to the properties file, make sure you do it with Debrief closed.</para> 
</note> 
</sect2> 
<sect2 id="debrief_properties"> 
<title>Definitions</title> 
<para>
            <table>
              <title>Debrief properties</title>
              <tgroup cols="3">
                <thead>
                  <row>
                    <entry>
                      <para>Property</para> </entry> 
<entry> 
<para>Description</para> </entry> 
<entry> 
<para>Example</para> </entry> 
</row> 
</thead> 
<tbody> 
<row> 
<entry> <filename>XML_Directory</filename> </entry> 
<entry> 
<para>Default location to use for opening and saving Debrief
                        <glossterm linkend="g_plot_file">Plot-File</glossterm>s
                      </para> </entry> 
<entry> <filename>D\:\\Plots</filename> </entry> 
</row> 
<row> 
<entry> <filename>REP_Directory</filename> </entry> 
<entry> 
<para>Default location to use for importing Replay files</para> </entry> 
<entry> <filename>D\:\\Tracks</filename> </entry> 
</row> 
<row> 
<entry> <filename>RANGE_Directory</filename> </entry> 
<entry> 
<para>Default location to use for importing Range data files</para> </entry> 
<entry> <filename>D\:\\RANGE_DATA</filename> </entry> 
</row> 
<row> 
<entry> <filename>ETOPO_Directory</filename> </entry> 
<entry> 
<para>Optional property to specify the location of the ETOPO dataset (when not installed with Debrief)</para> </entry> 
<entry> <filename>ETOPO</filename> (relative references may be used,
the path is produced relative to the Debrief installation directory).
</entry> 
</row> 
<row> 
<entry> <filename>VPF_DATABASE_DIR.x</filename> </entry> 
<entry> 
<para>Multiple entries of this property (where x is an ascending integer counter) are specified to inform Debrief where the VPF datasets are located.</para> </entry> 
<entry> <filename>C\:\\vpf\\SASAUS</filename> </entry> 
</row> 
<row> 
<entry> <filename>WMF_Directory</filename> </entry> 
<entry> 
<para>Default destination for Windows Metafile plots, and the destination for recorded video files</para> </entry> 
<entry> <filename>D\:\\Plots</filename> </entry> 
</row> 
<row> 
<entry> <filename>STEP_THRESHOLD</filename> </entry> 
<entry> 
<para>Period (in seconds) either side of current Tote time for which data points are visible in snail mode</para> </entry> 
<entry> <filename>30</filename> </entry> 
</row> 
<row> 
<entry> <filename>RNG_UNITS</filename> </entry> 
<entry> 
<para>The units to display when measuring range and bearing using the mouse. One of the following:
                        <variablelist>
                          <varlistentry>
                            <term>yds</term>
                            <listitem>
                              <para>yards(default)</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>nm</term> 
<listitem> 
<para>nautical miles</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>m</term> 
<listitem> 
<para>metres</para> 
</listitem> 
</varlistentry> 
<varlistentry> 
<term>km</term> 
<listitem> 
<para>kilometres</para> 
</listitem> 
</varlistentry> 
</variablelist> </para> 
<para>
               The units used for measurement of range (both using the range-bearing 
 tool and for the ranges displayed in the Tote) may be edited within Debrief by double-clicking on the measured range/bearing value at the bottom left of the
                        <glossterm linkend="g_tote">Tote</glossterm>.
                      </para> </entry> 
<entry> <filename>nm</filename> </entry> 
</row> 
<row> 
<entry id="RelBearingProperty">
<filename>REL_BEARING_FORMAT</filename> </entry> 
<entry>Whether to show 
<link linkend="RelBearingDescription">relative bearing</link> using the UK format (R180 through 0 to G180) or US format
(180 through 0 to 179.9). Use the two-character word
<emphasis>UK</emphasis> or <emphasis>US</emphasis> </entry> 
<entry> <filename>UK</filename> </entry> 
</row> 
</tbody> 
</tgroup> 
</table> </para> 
</sect2> 
<sect2> 
<title>Syntax</title> 
<para>
 The following paragraph is the technical description of this file, which provides background information regarding the formatting used in the file:
            <blockquote>

              <para>Reads a property list (key and element pairs) from the input stream.
              </para> 
<para>A line that contains only whitespace or whose first non-whitespace character is an ASCII # or ! is ignored (thus, # or ! indicate comment lines).</para> 
<para>Every line other than a blank line or a comment line describes one property to be added to the table (except that if a line ends with \, then the following line, if it exists, is treated as a continuation line, as described below). The key consists of all the characters in the line starting with the first non-whitespace character and up to, but not including, the first ASCII =, :, or whitespace character. All of the key termination characters may be included in the key by preceding them with a \. Any whitespace after the key is skipped; if the first non-whitespace character after the key is = or :, then it is ignored and any whitespace characters after it are also skipped. All remaining characters on the line become part of the associated element string. Within the element string, the ASCII escape sequences \t, \n, \r, \\, \", \&apos;, \ (a backslash and a space), and \\uxxxx are recognized and converted to single characters. Moreover, if the last character on the line is \, then the next line is treated as a continuation of the current line; the \ and line terminator are simply discarded, and any leading whitespace characters on the continuation line are also discarded and are not part of the element string.
              </para> 
<para>As an example, each of the following three lines specifies the key "Truth" and the associated element value "Beauty":</para> 
<para>Truth = Beauty</para> 
<para>Truth:Beauty</para> 
<para>Truth :             Beauty</para> 
</blockquote> </para> 
</sect2> 
<sect2> 
<title>Example File</title> 
<para>
            <screen>
              <markup>#d2ksettings.prp
 #Thu Sep 21 12:55:40 GMT+01:00 2000
MRU.4=d\:\\single.dpl
REP_Directory=D\:\\medsaw
WMF_Directory=D\:\\
MRU.3=D\:\\short.dpl
MRU.2=D\:\\withCoast.dpl1
MRU.1=D\:\\coast2.dpl
MRU.0=D\:\\coast3.dpl
XML_Directory=D\:\\</markup>
            </screen>
          </para> 
</sect2> 
</sect1> 
</chapter> 
</part>

  <!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<!--   Reference                                                           -->
<!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<part id="reference_guide"> 
<title>Reference Guide</title> 
<partintro> 
<para>If the tutorial hasn&apos;t provided you with all of the answers you need, just have a look at the pages here in the Reference Guide.</para> 
</partintro> 
<chapter id="reference"> 
<title>Debrief File Formats</title> 
<sect1 id="replay_file_format"> 
<title>Replay File Format</title> 
<para>
          <application>Debrief</application> accepts files in the
          <indexterm>
            <primary>Replay file format</primary>
          </indexterm>
          <indexterm>
            <primary>File Format</primary>
            <secondary>Replay</secondary>
          </indexterm>
          <application>Replay</application> datafile format. This format uses an 80 character string containing data/time, vessel name, position, heading, depth and speed. More than one vessel track can be stored in each file. The gaps between the data fields can be any whitespace characters, that is any number of spaces or tabs, but there must be a value for each data field.
          <note>
            <para>Whilst file formats recorded here are shown against an 80 character index marker - the fields can be of any width - the data is broken down using delimiters, not fixed field widths.</para> 
</note> </para> 
<para>The file-naming convention for files in the
          <application>
            <glossterm linkend="g_replay">Replay</glossterm>
          </application> format is to have a
          <filename>.REP</filename> suffix.
        </para> 
<para>Through an extension to the format, annotation data can also be accepted. The annotation data format is described below. Whilst annotation and track data may be stored in single file, it is recommended that they are stored in separate files, to ease reading and plotting track-data only.</para> 
<para>The standard data format is as follows


          <screen>
            <markup>
12345678901234567890123456789012345678901234567890123456789012345678901234567890
YYMMDD HHMMSS.SSS XXXXXX SY DD MM SS.SS H DDD MM SS.SS H CCC.C SS.S DDD
            </markup>
          </screen>or since Autumn 2004 multi-word track names can be entered by enclosing them in double-quotation marks (") and 4-figure year values are supported:
          <screen id="quoted_track_names">
            <markup>
12345678901234567890123456789012345678901234567890123456789012345678901234567890
YYYYMMDD HHMMSS.SSS "XYX XYX XYX" SY DD MM SS.SS H DDD MM SS.SS H CCC.C SS.S DDD
            </markup>
          </screen>
        </para> 
<para>The field descriptions are:
          <table frame="all">
            <title>Fields in Debrief position entry</title>

            <tgroup cols="2">
              <colspec colname="col01" colnum="1" colwidth="1.00*"/>
              <colspec colname="col1" colnum="2" colwidth="4.5*"/>
              <thead>
                <row>
                  <entry>
                    <para>Field number</para> </entry> 
<entry> 
<para>Description</para> </entry> 
</row> 
</thead> 
<tbody> 
<row> 
<entry> 
<para>1</para> </entry> 
<entry> 
<para>Date, either 2 of 4 figure date, followed by month then date</para> </entry> 
</row> 
<row> 
<entry> 
<para>2</para> </entry> 
<entry> 
<para>Time</para> </entry> 
</row> 
<row> 
<entry> 
<para>3</para> </entry> 
<entry> 
<para>Vessel Name - either as single, unquoted word, or as a multi-word phrase enclosed in quotation marks.</para> </entry> 
</row> 
<row> 
<entry> 
<para>4</para> </entry> 
<entry> 
<para>Symbology (see below)</para> </entry> 
</row> 
<row> 
<entry> 
<para>5</para> </entry> 
<entry> 
<para>Latitude Degrees</para> </entry> 
</row> 
<row> 
<entry> 
<para>6</para> </entry> 
<entry> 
<para>Latitude Minutes</para> </entry> 
</row> 
<row> 
<entry> 
<para>7</para> </entry> 
<entry> 
<para>Latitude Seconds</para> </entry> 
</row> 
<row> 
<entry> 
<para>8</para> </entry> 
<entry> 
<para>Latitude Hemisphere</para> </entry> 
</row> 
<row> 
<entry> 
<para>9</para> </entry> 
<entry> 
<para>Longitude Degrees</para> </entry> 
</row> 
<row> 
<entry> 
<para>10</para> </entry> 
<entry> 
<para>Longitude Minutes</para> </entry> 
</row> 
<row> 
<entry> 
<para>11</para> </entry> 
<entry> 
<para>Longitude Seconds</para> </entry> 
</row> 
<row> 
<entry> 
<para>12</para> </entry> 
<entry> 
<para>Longitude Hemisphere</para> </entry> 
</row> 
<row> 
<entry> 
<para>13</para> </entry> 
<entry> 
<para>Heading (0..359.9 degrees)</para> </entry> 
</row> 
<row> 
<entry> 
<simpara>14</simpara> </entry> 
<entry> 
<simpara>Speed (knots)</simpara> </entry> 
</row> 
<row> 
<entry> 
<para>13</para> </entry> 
<entry> 
<para>Depth (metres)
                      <footnote>
                        <para>Where depth data is not available, the IEE symbol NaN (Not a Number) may be used.
                          <application>Debrief</application> reflects the absence of this data where applicable.
                        </para> 
</footnote> </para> </entry> 
</row> 
</tbody> 
</tgroup> 
</table> </para> 
<para>The symbology data field describes the representation
required for this vessel track, specifying the colour of track to use
and symbol-type to represent that vehicle.  The Symbol style read in is used when tracks are to be shown by using symbol (in 2D or 3D), as described in
          <xref linkend="intro_to_sym_sets"/>
.
          <table>
            <title>Debrief symbology data fields</title>
            <tgroup cols="4">
              <colspec colname="c1"/>
              <colspec colname="c2"/>
              <colspec colname="c3"/>
              <colspec colname="c4"/>
              <thead>
                <row>
                  <entry namest="c1" nameend="c2">
                    <para>Symbol Style</para> </entry> 
<entry namest="c3" nameend="c4"> 
<para>Colour</para> </entry> 
</row> 
</thead> 
<tbody> 
<row> 
<entry> 
<para>A</para> </entry> 
<entry> 
<para>Aircraft</para> </entry> 
<entry> 
<para>@</para> </entry> 
<entry> 
<para>White</para> </entry> 
</row> 
<row> 
<entry> 
<para>C</para> </entry> 
<entry> 
<para>Carrier</para> </entry> 
<entry> 
<para>A</para> </entry> 
<entry> 
<para>Blue</para> </entry> 
</row> 
<row> 
<entry> 
<para>D</para> </entry> 
<entry> 
<para>Destroyer</para> </entry> 
<entry> 
<para>B</para> </entry> 
<entry> 
<para>Green</para> </entry> 
</row> 
<row> 
<entry> 
<para>F</para> </entry> 
<entry> 
<para>Frigate</para> </entry> 
<entry> 
<para>C</para> </entry> 
<entry> 
<para>Red</para> </entry> 
</row> 
<row> 
<entry> 
<para>H</para> </entry> 
<entry> 
<para>Helicopter</para> </entry> 
<entry> 
<para>D</para> </entry> 
<entry> 
<para>Yellow</para> </entry> 
</row> 
<row> 
<entry> 
<para>M</para> </entry> 
<entry> 
<para>Merchant</para> </entry> 
<entry> 
<para>E</para> </entry> 
<entry> 
<para>Purple</para> </entry> 
</row> 
<row> 
<entry> 
<para>N</para> </entry> 
<entry> 
<para>Minesweeper</para> </entry> 
<entry> 
<para>F</para> </entry> 
<entry> 
<para>Orange</para> </entry> 
</row> 
<row> 
<entry> 
<para>P</para> </entry> 
<entry> 
<para>Torpedo</para> </entry> 
<entry> 
<para>G</para> </entry> 
<entry> 
<para>Brown</para> </entry> 
</row> 
<row> 
<entry> 
<para>R</para> </entry> 
<entry> 
<para>Troop Carrier</para> </entry> 
<entry> 
<para>H</para> </entry> 
<entry> 
<para>Cyan</para> </entry> 
</row> 
<row> 
<entry> 
<para>S</para> </entry> 
<entry> 
<para>Submarine</para> </entry> 
<entry> 
<para>I</para> </entry> 
<entry> 
<para>Light Green</para> </entry> 
</row> 
<row> 
<entry> 
<para>T</para> </entry> 
<entry> 
<para>TA Frigate</para> </entry> 
<entry> 
<para>J</para> </entry> 
<entry> 
<para>Gold</para> </entry> 
</row> 
<row> 
<entry> 
<para>U</para> </entry> 
<entry> 
<para>Cruiser</para> </entry> 
<entry> 
<para>K</para> </entry> 
<entry> 
<para>Pink</para> </entry> 
</row> 
<row> 
<entry> 
<para>V</para> </entry> 
<entry> 
<para>Fishing Vessel</para> </entry> 
<entry></entry> 
<entry></entry> 
</row> 
<row> 
<entry> 
<para>@</para> </entry> 
<entry> 
<para>Unknown</para> </entry> 
<entry></entry> 
<entry></entry> 
</row> 
</tbody> 
</tgroup> 
</table> 
<note> 
<para>Note that historically only the first color style read in from file for a particular track was implemented, this has been changed in order that the colour value is used for each position read in.
            </para> 
</note> </para> 
<para>In addition to the positional vessel track data, annotations can also be added. Each annotation is placed on a single line in a replay file, each line beginning with the comment marker; a semi-colon &apos;;&apos;.To put a comment on a line, begin with two semi-colons.</para> 
<para>The format for the different types of annotations is:
          <screen>
            <markup>
123456789012345678901234567890123456789012345678901234567890123456789
0123456789012345678901234567890 

;LINE: @@ DD MM SS H DDD MM SS.S H DD MM SS.S H DDD MM SS H XX.XXX 
;; symb, start lat &amp; long, end lat &amp; long, text label (optional) 

;TEXT: @@ DD MM SS H DDD MM SS H XX..XX 
;; symb, lat &amp; long, text 

;NARRATIVE:  YYMMDD HHMMSS  TTT.TTT  XX..XX 
;; dtg, track name, narrative entry 

;TIMETEXT: @@ YYMMDD HHMMSS DD MM SS.S H DDD MM SS.S H XX..XX 
;; symb, date, lat &amp; long, text 

;PERIODTEXT: @@ YYMMDD HHMMSS YYMMDD HHMMSS DD MM SS.S H DDD MM SS.S H 
DDD XX..XX 
;; symb, start date, end date, lat &amp; long, Depth(optional) text 

;GRID: @@ DD MM SS.S H DDD MM SS.S H MM.MM MM.MM XX..XX 
;; symb, centre lat &amp; long (N13) lat increment, long increment, text 

;RECT: @@ DD MM SS.S H DDD MM SS.S H DDMMSS H DDDMMSS H 
;; symb, tl corner lat &amp; long, br corner lat &amp; long 

;SGSAGEOG: @@ YYMMDD HHMMSS YYMMDD HHMMSS DD MM SS.S H DDD MM SS.S H 
DD MM SS.S H DDD MM SS.S H XX..XX 
;; symb, start date, end date, tl lat &amp; long, br lat &amp; long, 
text label (1 word) 

;SGSAGRID: @@ YYMMDD HHMMSS YYMMDD HHMMSS AA NN AA NN XX..XX 
;; symb, start date, end date, tl corner, br corner, text label (1 word) 

;WHEEL: @@ DD MM SS.S H DDD MM SS.S H YYY YYY 
;; symb, centre lat, centre long, inner radius (yards), outer radius (yards) 

;CIRCLE: @@ DD MM SS.S H DDD MM SS.S H YYY XX.XX 
;; symb, centre lat, centre long, radius (yards), label 

;ELLIPSE: BD YYMMDD HHMMSS DD MM SS.SS H DD MM SS.SS H CCC XXXX YYYY xx.xx 
;; symb, date, time, lat, long, orientation, maxima (yards), 
minima (yards), label 

;BRG: BD YYMMDD HHMMSS DD MM SS.SS H DD MM SS.SS H CCC XXXX xx.xx 
;; symb, date, time, lat, long, orientation, length (yards), label (one word) 

;SENSOR: YYMMDD HHMMSS.SSS AAAAAA @@ DD MM SS.SS H DDD MM SS.SS H 
BBB.B RRRR yy..yy xx..xx 
;; date, ownship name, symbology, sensor lat/long (or the single word NULL), 
bearing (degs), range(yds), sensor name, label (to end of line)

;TMA_POS: YYMMDD HHMMSS.SSS AAAAAA @@ DD MM SS.SS H DDD MM SS.SS H 
TT...TT OOO.O  XXXX YYYY  CCC SSS DDD xx.xx 
;; date, time, ownship name, symbology, tma lat, tma long, track name, 
ellipse orientation (deg from north),  maxima (yds), minima (yds), course, 
speed, depth (m), label string

;TMA_RB: YYMMDD HHMMSS.SSS AAAAAA @@ RRR.R BBB.B TT...TT OOO.O 
XXXX YYYY  CCC SSS DDD xx.xx 
;; date, time, ownship name, symbology, bearing (deg), range (yds), 
track name, elipse orientation (deg from north),  maxima (yds), minima (yds), 
course, speed, depth (m), label string

            </markup>
          </screen>


          <note>
            <para>
	      Note, when null positions are entered for
              <glossterm linkend="g_sensor">Sensor</glossterm> data,
	      the position is taken from the track named in "ownship
	      name".  Debrief finds the nearest track location equal
	      to or greater than the indicated time, and uses this as
	      the sensor lat and long.
            </para> 
</note> 
<note> 
<para>As with normal positional data, annotation entries which use a track/ownship name may now contain multi-word phrases if they are enclosed in quotation marks ("), and the year can be expressed as 2 or 4 figures.</para> 
</note> </para> 
<para>
          <glossterm linkend="g_annotation">Annotation</glossterm> positions are specified in degrees as in the
	  standard replay file format, and symbology representations
	  are as in the above tables.
        </para> 
</sect1> 
<sect1 id="debrief_file_format"> 
<title>Debrief File Format</title> 
<para></para> 
<sect2> 
<title>Introduction</title> 
<para>
            <glossterm linkend="g_xml">XML</glossterm>
            <indexterm>
              <primary>File Format</primary>
              <secondary>XML</secondary>
            </indexterm> is the Extensible Markup Language.  Like its predecessor SGML,
            <glossterm linkend="g_xml">XML</glossterm> is a meta-language used to define other languages.  The article in the
            <link linkend="intro_xml">Reference Guide</link> taken from MSDN gives some background to
            <glossterm linkend="g_xml">XML</glossterm>.
          </para> 
</sect2> 
<sect2> 
<title>Adoption of XML</title> 
<para>An acknowledged shortcoming of the former file format (
            <filename>dpl</filename>) used in
            <application>Debrief</application> was the frequency with which
            <application> Debrief</application> modifications rendered previous
            <filename>DPL</filename> files unreadable.  This use of
            <application>Java</application> serialization offered  low cost in development terms and was seen as essential to store the more complex data used in
            <application>Debrief 2000</application> (such as projections, and formatting data).
          </para> 
<para>The only way to divorce the
            <application>Debrief</application> version from the file format has been to adopt an independent file format.  This independent format must be structured in order to store
            <application>Debrief</application> data tidily, and the development to support it must not be too "expensive".  The adoption of
            <application> XML</application> meets both of these criteria = it is quite capable of storing
            <application>Debrief</application> data, and there are a number of libraries available which support it.
          </para> 
<para>XML provides additional benefits beyond those
	    described above:
            <itemizedlist>
              <listitem>
                <para>It is human-readable, offering the following benefits:
                  <itemizedlist>
                    <listitem>
                      <para>Apparently corrupt data files can be examined in a text editor and repaired</para> 
</listitem> 
<listitem> 
<para>Data files can be edited outside Debrief</para> 
</listitem> 
</itemizedlist> </para> 
</listitem> 
<listitem> 
<para>It is a world-wide standard independent of Debrief and Java
                  <itemizedlist>
                    <listitem>
                      <para>Applications are freely available which support it:  Internet Explorer will open XML data files for inspection</para> 
</listitem> 
<listitem> 
<para>When used in conjunction with the
                        <indexterm>
                          <primary>DTD</primary>
                          <secondary>XML Structure</secondary>
                        </indexterm>
                        <indexterm>
                          <primary>XML</primary>
                          <secondary>DTD Structure</secondary>
                        </indexterm>Debrief DTD, the IBM Xeena editor provides easy editing/creation of Debrief plots
                      </para> 
</listitem> 
<listitem> 
<para>As more organisations/industries adopt XML, there is increased likelihood that import/export filters will not be required, since XML documents are easily translated between each other.</para> 
</listitem> 
</itemizedlist> </para> 
</listitem> 
</itemizedlist> </para> 
<para>The XML structure adopted within Debrief is as follows:

            <figure float="0">
              <title>XML File structure in Debrief</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/XMLStructure.gif"/>
                </imageobject>
              </mediaobject>
            </figure>

          </para> 
</sect2> 
</sect1> 
<sect1 id="import_rng_data"> 
<title>Importing Range Data</title> 
<para>This page gives an overview of the import of Range Data.  Range data import is started by pressing the "Import Range Data" button:
          <guiicon>
            <inlinegraphic fileref="figures/ImportRangeData.gif"/>
          </guiicon>
        </para> 
<para>This button causes the Import Range Data form to open:

          <figure float="0">
            <title>Importing Range Data</title>
            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/ImportRangeDataForm.gif"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>
        </para> 
<para>The form contains instructions at the top, followed by the following elements:

          <itemizedlist>
            <listitem>
              <para>
                <guilabel>Filename</guilabel>: set this to the file to be imported.  It is important that PC Argos files from AUTEC end in the suffix
                <filename>RAO</filename>, and PMRF/AFWTF (or similar) files end in the suffix
                <filename>PRN</filename>.
              </para> 
</listitem> 
<listitem> 
<para>
                <guilabel>Frequency</guilabel>: datafiles recorded at very high frequency may cause
                <application>Debrief</application> performance to suffer greatly.  Selecting a datapoint frequency allows the user to select the frequency at which data points are imported from the file.
              </para> 
</listitem> 
<listitem> 
<para>
                <guilabel>Origin</guilabel>: this records the origin of the range data.
              </para> 
</listitem> 
<listitem> 
<para>
                <guilabel>DTG</guilabel>: where the datafile does not contain date (eg
                <guilabel>PC Argos</guilabel>), a starting date can be provided.  Where the datafile does contain a useable date (eg PMRF) this value is ignored.
              </para> 
</listitem> 
</itemizedlist> </para> 
<para>See Importing
          <application>PC Argos</application> data for details relating the import of
          <application>PC Argos</application> data, and Importing PMRF data for further details regarding the import of PMRF files.
        </para> 
<note> 
<para>As detailed above, for both
            <indexterm>
              <primary>AUTEC</primary>
              <secondary>Range data</secondary>
            </indexterm>AUTEC and
            <indexterm>
              <primary>PWFTF</primary>
              <secondary>Range data</secondary>
            </indexterm>PFWTF data the start date is either read form the text-box or from the data-file itself.  The track points all contain an offset from this start time (in seconds).  Unfortunately the file formats do not indicate that the data being recorded has passed into the next day.  The only indication that the time in seconds has moved to the next day is that the time effectively "restarts".  Unfortunately it has not proved sufficient to merely wait for a time which is less than the previous time (since on occasion files containing more than one track contain points which are not in chronological order, sometimes successive times are 1 or 2 seconds before the previous time).  This is overcome by Debrief adopting the following policy for day/night decisions:
            <emphasis>if a successive data point is more than 1 hour earlier than the previous one, then Debrief decides that the data point is from the next day.</emphasis>
          </para> 
</note> 
</sect1> 
<sect1 id="autec_data"> 
<title>AUTEC Range Data</title> 
<para>The Range data file format is the RAO used by AUTEC to pass data to
          <application>PC Argos</application>.  The data file contains data in the following format:
          <screen>
            <markup>
??_A01451200_-124.20_36935.19_-133.40_6.58_-4.15_6.15_-9.04_1.08_1.04
??_B02451200_-123.20_36235.19_-143.40_6.58_-4.15_6.15_-9.04_1.08_1.04
??_A01451201_-164.20_36935.19_-137.40_6.58_-4.15_6.15_-9.04_1.08_1.04
??_B02451201_-134.20_36335.19_-133.40_6.58_-4.15_6.15_-9.04_1.08_1.04
            </markup>
          </screen>
          <note>
            <para>Note, spaces in the above sample have been replaced by underscores.</para> 
</note> </para> 
<para>The file contains one line of text for each position fix for the exercise participant, and each file may contain data for more than one participant.</para> 
<para>The columns of data represent the following:

          <table frame="all">
            <title>Columns in AUTEC range data</title>

            <tgroup cols="2">
              <thead>
                <row>
                  <entry>
                    <para>Field</para> </entry> 
<entry> 
<para>Description</para> </entry> 
</row> 
</thead> 
<tbody> 
<row> 
<entry> 
<para>??</para> </entry> 
<entry> 
<para>Header for each row</para> </entry> 
</row> 
<row> 
<entry> 
<para>AO1</para> </entry> 
<entry> 
<para>Unique (3 letter) identifier for track</para> </entry> 
</row> 
<row> 
<entry> 
<para>451200</para> </entry> 
<entry> 
<para>Hours Minutes Seconds of position fix (note that there is not a space between the track identifier and the start of this part of the record</para> </entry> 
</row> 
<row> 
<entry> 
<para>It is important that the above two fields are positioned adjoining each other in the datafile. The remaining fields in the line may be any size, but they must be separated by white space.</para> </entry> 
<entry> 
<para></para> </entry> 
</row> 
<row> 
<entry> 
<para>-124 36945.19 -123.39</para> </entry> 
<entry> 
<para>x, y, z in yards from the range origin</para> </entry> 
</row> 
<row> 
<entry> 
<para>6.58_-4.15_6.15</para> </entry> 
<entry> 
<para>x,y,z velocities in yards per second</para> </entry> 
</row> 
<row> 
<entry> 
<para>-9.04_1.08_1.04</para> </entry> 
<entry> 
<para>z,y,z accelerations in yards per second per second</para> </entry> 
</row> 
</tbody> 
</tgroup> 
</table> </para> 
<note> 
<para>Note that only the x,y,z positions from the data are used in Debrief; the velocities and accelerations are ignored.</para> 
</note> 
<important> 
<para>The data file format does not contain course and speed data, so these are calculated using the range and bearing from the previous point, together with the time difference.   This gives values of course and speed calculated as over the ground; which obviously is not the through-the-water values the participants will be experiencing.</para> 
</important> 
</sect1> 
<sect1 id="pmrf_data"> 
<title>PMRF Range Data</title> 
<para>The
          <indexterm>
            <primary>PMRF</primary>
          </indexterm>PMRF Range data file format is the format produced by the PMRF range.  The data file contains data in the following format:


          <figure float="0">
            <title>Importing Range Data</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="figures/PMRFStructure.gif"/>
              </imageobject>
            </mediaobject>
          </figure>

        </para> 
<para>All columns in the text file are assumed to be separated by white-space (spaces or tabs).  The PRN file can be produced by saving in Excel in the "prn" format, although the resulting file should be examined to ensure that unnecessary white space does occur between the columns.</para> 
<para>The PMRF structure starts with four lines of header information (of which the first contains a starting DTG for the
          <glossterm linkend="g_serial">serial</glossterm>).  It is this DTG which is used as the time offset for the data.
        </para> 
<para>Following the header lines are groups of time stamped position fixes.  Each time stamped group begins with a line containing 13 elements.  From this line, the 3rd column (GMT) is used to calculate elapsed seconds from the starting DTG.  This elapsed time is used as the time value for any points containing only 9 elements (until a new 13-element line is read in).</para> 
<para>For 9 element lines (and 13 element lines once the DTG info is read in) the columns are read and used as follows:


          <table frame="all">
            <title>Fields used from PMRF data</title>

            <tgroup cols="2">
              <colspec colname="col01" colnum="1" colwidth="1.00*"/>
              <colspec colname="col1" colnum="2" colwidth="4.5*"/>
              <thead>
                <row>
                  <entry>
                    <para>Field</para> </entry> 
<entry> 
<para>Description</para> </entry> 
</row> 
</thead> 
<tbody> 
<row> 
<entry> 
<para>GMT</para> </entry> 
<entry> 
<para>Elapsed time in seconds since midnight on DTG contained in first line</para> </entry> 
</row> 
<row> 
<entry> 
<para>Id</para> </entry> 
<entry> 
<para>Single text string surrounded by spaces</para> </entry> 
</row> 
<row> 
<entry> 
<para>x</para> </entry> 
<entry> 
<para>x-value in yards
                    </para> </entry> 
</row> 
<row> 
<entry> 
<para>y</para> </entry> 
<entry> 
<para>y-value in yards
                    </para> </entry> 
</row> 
<row> 
<entry> 
<para>z</para> </entry> 
<entry> 
<para>ignored</para> </entry> 
</row> 
<row> 
<entry> 
<para>height</para> </entry> 
<entry> 
<para>converted to yards, and used a z-value.</para> </entry> 
</row> 
<row> 
<entry> 
<para>remaining columns</para> </entry> 
<entry> 
<para>ignored</para> </entry> 
</row> 
</tbody> 
</tgroup> 
</table> </para> 
<note> 
<para>Note that only the x,y,z positions from the data are used in Debrief; the velocities and accelerations are ignored.</para> 
</note> 
<important> 
<para>The data file format does not contain course and speed data, so these are calculated using the range and bearing from the previous point, together with the time difference.   This gives values of course and speed calculated as over the ground; which obviously is not the through-the-water values the participants will be experiencing.</para> 
</important> 
</sect1> 
<sect1 id="intro_xml"> 
<title>Introduction to XML</title> 
<para>Extensible Markup Language (
          <glossterm linkend="g_xml">XML</glossterm>) is a meta-markup language that provides a format for describing structured data. This facilitates more precise declarations of content and more meaningful search results across multiple platforms. In addition, XML will enable a new generation of Web-based data viewing and manipulation applications.
        </para> 
<sect2> 
<title>Extensible</title> 
<para>In XML you can define an unlimited set of tags. While HTML tags can be used to display a word in bold or italic, XML provides a framework for tagging structured data. An XML element can declare its associated data to be a retail price, a sales tax, a book title, the amount of precipitation, or any other desired data element. As XML tags are adopted throughout an organization&apos;s intranet, and by others across the Internet, there will be a corresponding ability to search for and manipulate data regardless of the applications within which it is found. Once data has been located, it can be delivered over the wire and presented in a browser such as Internet Explorer 5 in any number of ways, or it can be handed off to other applications for further processing and viewing.</para> 
</sect2> 
<sect2> 
<title>Structural representation of data</title> 
<para>XML provides a structural representation of data that has proved broadly implementable and easy to deploy. Industrial implementations in the Standard Generalized Markup Language (SGML) community and elsewhere demonstrate the intrinsic quality and industrial strength of XML&apos;s tree-structured data format.</para> 
<para>XML is a subset of SGML that is optimized for delivery over the Web; it is defined by the World Wide Web Consortium, ensuring that structured data will be uniform and independent of applications or vendors. This resulting interoperability is kick-starting a new generation of business and electronic-commerce Web applications.</para> 
<para>XML, which provides a data standard that can encode
	    the content, semantics, and schemata for a wide variety of
	    cases ranging from simple to complex, can be used to mark
	    up the following:
            <itemizedlist>
              <listitem>
                <para>An ordinary document.</para> 
</listitem> 
<listitem> 
<para>A structured record, such as an appointment record or
		  purchase order.</para> 
</listitem> 
<listitem> 
<para>An object with data and methods, such as the
		  persistent form of a Java object or ActiveX
		  control.</para> 
</listitem> 
<listitem> 
<para>A data record, such as the result set of a
		  query.</para> 
</listitem> 
<listitem> 
<para>Meta-content about a Web site, such as Channel
		  Definition Format (CDF).</para> 
</listitem> 
<listitem> 
<para>Graphical presentation, such as an application&apos;s user
		  interface.</para> 
</listitem> 
<listitem> 
<para>Standard schema entities and types.</para> 
</listitem> 
<listitem> 
<para>All links between information and people on the
		  Web.</para> 
</listitem> 
</itemizedlist> </para> 
<para>Once the data is on the client desktop, it can be manipulated, edited, and presented in multiple views, without return trips to the server. Servers can now become more scalable, due to lower computational and bandwidth loads. Also, since data is exchanged in the XML format, it can be easily merged from different sources.</para> 
<para>XML is valuable to the Internet, as well as to large corporate intranet environments because it provides interoperability using a flexible, open, standards-based format, with new ways of accessing legacy databases and delivering data to Web clients. Applications can be built more quickly, are easier to maintain, and can easily provide multiple views on the structured data.</para> 
</sect2> 
<sect2> 
<title>Data is separated from the presentation and the process</title> 
<para>The power and beauty of XML is that it maintains the separation of the user interface from the structured data. Hypertext Markup Language (HTML) specifies how to display data in a browser, XML defines the content. For example, in HTML you use tags to tell the browser to display data as bold or italic; in XML you only use tags to describe data, such as city name, temperature, and barometric pressure. In XML, you use stylesheets such as Extensible Style Language (XSL) and Cascading Style Sheets (CSS) to present the data in a browser. XML separates the data from the presentation and the process, enabling you to display and process the data as you wish by applying different style sheets and applications.</para> 
<para>This separation of data from presentation enables the seamless integration of data from diverse sources. Customer Information, purchase orders, research results, bill payments, medical records, catalog data, and other information can be converted to XML on the middle tier, allowing data to be exchanged online as easily as HTML pages display data today. Data encoded in XML can then be delivered over the Web to the desktop. No retrofitting is necessary for legacy information stored in mainframe databases or documents, and because HTTP is used to deliver XML over the wire, no changes are required for this function.</para> 
<para>XML documents are easy to create; if you are familiar with HTML, you can quickly learn to create one. In this example, XML is used to describe a weather report:


            <screen>
              <markup>
                &lt;weather-report&gt;
                &lt;date&gt;March 25, 1998&lt;/date&gt;
                &lt;time&gt;08:00&lt;/time&gt;
                &lt;area&gt;
                &lt;city&gt;Seattle&lt;/city&gt;
                &lt;state&gt;WA&lt;/state&gt;
                &lt;region&gt;West Coast&lt;/region&gt;
                &lt;country&gt;USA&lt;/country&gt;
                &lt;/area&gt;
                &lt;measurements&gt;
                &lt;skies&gt;partly cloudy&lt;/skies&gt;
                &lt;temperature&gt;46&lt;/temperature&gt;
                &lt;wind&gt;
                &lt;direction&gt;SW&lt;/direction&gt;
                &lt;windspeed&gt;6&lt;/windspeed&gt;
                &lt;/wind&gt;
                &lt;h-index&gt;51&lt;/h-index&gt;
                &lt;humidity&gt;87&lt;/humidity&gt;
                &lt;visibility&gt;10&lt;/visibility&gt;
                &lt;uv-index&gt;1&lt;/uv-index&gt;
                &lt;/measurements&gt;
                &lt;/weather-report&gt;

              </markup>
            </screen>
          </para> 
<para>You can display this data in many different ways, or hand it off to other applications for further processing. You can also apply a style sheet to display this information in a browser.</para> 
</sect2> 
</sect1> 
</chapter> 
<chapter id="chap_debrief_algorithms"> 
<title>Debrief Algorithms</title> 
<sect1 id="rng_brg_calcs"> 
<title>Range/Bearing calculations within Debrief</title> 
<para>Ranges and bearings within Debrief are calculated according to the Rhumb-Line formulae, taken from the Admiralty Manual of Navigation, Volume 2, BR 45(2), Revised 1973, pages 5-11.</para> 
<para>The Rhumb-line calculation is used both for the display of measured range-bearing and for the projection of data onto the monitor. Briefly, the to convert from real-world to screen coordinates the following procedure is followed:</para> 
<para>
          <orderedlist>
            <listitem>
              <para>Determine the area represented by the current viewed data in world coordinates</para> 
</listitem> 
<listitem> 
<para>Determine the centre of this data area - this is used as the origin of the data</para> 
</listitem> 
<listitem> 
<para>For each data point to be plotted, find its range and bearing from the origin</para> 
</listitem> 
<listitem> 
<para>Convert this range and bearing into a delta-x and delta-y in screen coordinates</para> 
</listitem> 
<listitem> 
<para>Produce a data point in screen coordinates by adding these deltas to the centre of the screen</para> 
</listitem> 
</orderedlist> </para> 
<note> 
<para>The result of this projection algorithm (as with most others) is that whilst the information plotted at the centre horizontal section (mid-latitude) of the screen is an accurate representation, travelling further north and south from it degrades the accuracy.  This is negligible in data areas near the equator or where only a small area is covered (less than a couple of hundred nautical miles).  With greater data areas, and nearer the poles, the effects are more noticeable, however.  </para> 
</note> 
<para>For those without access to the Admiralty Manual of Navigation, here is an abbreviated snippet from it:</para> 
<sect2> 
<title>The Rhumb-Line Formulae</title> 
<para>A line on the earth's surface whihc cuts all meridians at the same angle is called a rhumb line.</para> 
<para>With his knowledge of the distance along a parallel of latitude and the departure between two places, the navigator can find the course he must steer in order to follow the rhumb line joining the two places, and also the distance he will travel along whilst doing so. In
            <xref linkend="rhumb_line_parts"/> FT is the rhumb-line divided into a large number of equal parts FA, AB, BC...
            <figure float="0" id="rhumb_line_parts">
              <title>Rhumb line parts</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/rhumb_line_segments.gif"/>
                </imageobject>
              </mediaobject>
            </figure>
          </para> 
<para>Af, Ba, Cb... are the arcs of parallels drawn through A, B, C ... and the angles at f, a, b ..., are therefore at right-angles.  If the divisions of FT are made sufficiently small, the triangles FaF, ABa, BbB ... are themselves small enough to be treated as plane triangles.  Also, since the course angle at F, A, B, C, ... remains constant by the definition of a rhumb-line, these smal triangles are equal.</para> 
</sect2> 
<sect2> 
<title>Short-distance sailing</title> 
<para>By the term
            <emphasis>short-distance sailing</emphasis> is meant the following of a rhumb-line track for a distance not greater than 600'. Within this limiting distance, the navigator can obtain all he wants to know about the track from the three formulae:
          </para> 
<para>
            <screen>
              <markup>departure = d.long cos (mean latitude)   (1)
departure = distance sin (course)     (2)
d.lat = distance cos (course)         (3)

The course is given by (2) divided by (3). Thus:
departure / d.lat = tan (course)</markup>
            </screen>
          </para> 
</sect2> 
</sect1> 
<sect1 id="contouring_algorithm"> 
<title>Contouring Algorithm</title> 
<para>The contouring algortihm employed within Debrief was originally produced by Paul Bourke back in 1987, for submission to the Byte magazine. Here's the article pretty much verbatim:</para> 
<sect2> 
<title>Introduction</title> 
<para>This article introduces a straightforward method of contouring some surface represented as a regular triangular mesh.</para> 
<para>  Contouring aids in visualizing three dimensional surfaces on a two dimensional medium (on paper or in this case a computer graphics screen). </para> 
<para>Two most common applications are displaying topological features of an area on a map or the air pressure on a weather map. In all cases some parameter is plotted as a function of two variables, the longitude and latitude or x and y axis. One problem with computer contouring is the process is usually CPU intensive and the algorithms often use advanced mathematical techniques making them susceptible to error. </para> 
</sect2> 
<sect2> 
<title>CONREC</title> 
<para>To do contouring in software you need to describe the data surface and the contour levels you want to have drawn. The software given this information must call the algorithm that calculates the line segments that make up a contour curve and then plot these line segments on whatever graphics device is available. </para> 
<para>CONREC satisfies the above description, it is relatively simple to implement, very reliable, and does not require sophisticated programming techniques or a high level of mathematics to understand how it works. </para> 
<para>The input parameters to the CONREC subroutine are as follows :
            <itemizedlist>
              <listitem>
                <para>The number of horizontal and vertical data points designated iub and jub.

                </para> 
</listitem> 
<listitem> 
<para>The number of contouring levels, nc. </para> 
</listitem> 
<listitem> 
<para>A one dimensional array z(0:nc-1) that saves as a list of the contour levels in increasing order. (The order of course can be relaxed if the program will sort the levels) </para> 
</listitem> 
<listitem> 
<para>A two dimensional array d(0:iub,0:jub) that contains the description of the data array to be contoured. Each element of the array is a sample of the surface being studied at a point (x,y) </para> 
</listitem> 
<listitem> 
<para>Two, one dimensional arrays x(0:iub) and y(0:jub) which contain the horizontal and vertical coordinates of each sample point. This allows for a rectangular grid of samples.

                </para> 
</listitem> 
</itemizedlist> 
<figure> 
<title>Some of the CONREC input parameters. </title> 
<screenshot> 
<mediaobject> 
<imageobject> <imagedata fileref="figures/contour_1.gif"/> 
</imageobject> 
</mediaobject> 
</screenshot> 
</figure> </para> 
<para></para> 
<para>The contouring subroutine CONREC does not assume anything about the device that will be used to plot the contours. It instead expects a user written subroutine called VECOUT. CONREC calls VECOUT with the horizontal and vertical coordinates of the start and end coordinates of a line segment along with the contour level for that line segment. In the simplest case this is very similar the the usual LINE (x1,y1)-(x2,y2) command in BASIC. See the source code listing below. </para> 
</sect2> 
<sect2> 
<title>Algorithm</title> 
<para>As already mentioned the samples of the three dimensional surface are stored in a two dimensional real array. This rectangular grid is considered four points at a time, namely the rectangle d(i,j), d(i+1,j), d(i,j+1), and d(i+1,j+1). The centre of each rectangle is assigned a value corresponding to the average values of each of the four vertices. Each rectangle is in turn divided into four triangular regions by cutting along the diagonals. Each of these triangular planes may be bisected by horizontal contour plane. The intersection of these two planes is a straight line segment, part of the the contour curve at that contour height. </para> 
<para>Depending on the value of a contour level with respect to the height at the vertices of a triangle, certain types of contour lines are drawn. The 10 possible cases which may occur are summarised below
            <orderedlist numeration="loweralpha">
              <listitem>
                <para>All the vertices lie below the contour level.
                </para> 
</listitem> 
<listitem> 
<para>Two vertices lie below and one on the contour level.
                </para> 
</listitem> 
<listitem> 
<para>Two vertices lie below and one above the contour level.</para> 
</listitem> 
<listitem> 
<para>One vertex lies below and two on the contour level.</para> 
</listitem> 
<listitem> 
<para>One vertex lies below, one on and one above the contour level.</para> 
</listitem> 
<listitem> 
<para>One vertex lies below and two above the contour level.
                </para> 
</listitem> 
<listitem> 
<para>Three vertices lie on the contour level.
                </para> 
</listitem> 
<listitem> 
<para>Two vertices lie on and one above the contour level.
                </para> 
</listitem> 
<listitem> 
<para>One vertex lies on and two above the contour level.
                </para> 
</listitem> 
<listitem> 
<para>All the vertices lie above the contour level.

                </para> 
</listitem> 
</orderedlist> </para> 
<para>In cases a, b, i and j the two planes do not intersect, ie: no line need be drawn. For cases d and h the two planes intersect along an edge of the triangle and therefore line is drawn between the two vertices that lie on the contour level. Case e requires that a line be drawn from the vertex on the contour level to a point on the opposite edge. This point is determined by the intersection of the contour level with the straight line between the other two vertices. Cases c and f are the most common situations where the line is drawn from one edge to another edge of the triangle. The last possibility or case g above has no really satisfactory solution and fortunately will occur rarely with real arithmetic.
            <figure>
              <title>Possible line orientations</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/contour_2.gif"/>
                </imageobject>
              </mediaobject>
            </figure>
          </para> 
</sect2> 
<sect2> 
<title>Example</title> 
<para>As a simple example consider one triangle with vertices labelled m1,m2 and m3 with heights 0, 2 and 3 respectively
            <figure>
              <title>Line permutations within contouring algorithm.</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/contour_3.gif"/>
                </imageobject>
              </mediaobject>
            </figure>
          </para> 
<para>To calculate where a contour line at a height of 1 should be drawn, it can be seen that this is case f described earlier. Level 1 intersects line segment m1-m2 half the way along and it intersects line segment m1-m3 one third of the way along. A line segment is drawn between these two points. Each rectangular mesh cell is treated this way. </para> 
</sect2> 
<sect2> 
<title>Subroutine</title> 
<para>An attempt is made at optimization by checking first to see if there are any contour levels within the present rectangle and second that there are some contour levels within the present triangle. The indices i and j are used to step through each rectangle in turn, k refers to each contour level and m to the four triangles in each rectangle.
            <figure>
              <title>Some of the notation used for identifying the rectangles and triangles in the subroutine</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/contour_4.gif"/>
                </imageobject>
              </mediaobject>
            </figure> Note that for large arrays the whole data array need not be stored in memory . Since the algorithm is a local one only requiring 4 points at a time, the data for each rectangle could be read from disk as required.
          </para> 
</sect2> 
<sect2> 
<title>Example</title> 
<para>Contour map and the following function
            <figure>
              <title>Function to be contoured</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/contour_5.gif"/>
                </imageobject>
              </mediaobject>
            </figure>
            <figure>
              <title>Sample contour plot using CONREC algorithm</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="figures/contour_6.gif"/>
                </imageobject>
                <caption></caption>
              </mediaobject>
            </figure>The sample contour plot itself
          </para> 
</sect2> 
<sect2> 
<title>Note</title> 
<para>On occasion users have reported gaps in their contour lines, this should of course never happen. There is however a pathological case that all local contouring algorithms suffer from (local meaning that they only use information in the immediate vicinity to determine the contour lines). The problem arises when all four vertices of a grid cell have the same value as the contour level under consideration. There are a number of strategies that can be employed to overcome this special event, the correct way is to consider a larger region in order to join up the contours on either side of the problem cell. CONREC doesn't do this and just leaves the cell without any contour lines thus resulting in a gap. This special case essentially never happens for real values data, it is most commonly associated with integer height datasets. The simplest solution is to offset the contour levels being drawn by a very small amount.
          </para> 
</sect2> 
</sect1> 
</chapter> 
</part>






  <!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<!--   License                                                             -->
<!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<appendix id="gfdl">
<title>GNU Free Documentation License</title>
    <!-- - GNU Project - Free Software Foundation (FSF) -->
<!-- LINK REV="made" HREF="mailto:webmasters@gnu.org" -->   <!-- sect1>
              <title>GNU Free Documentation License</title -->
<para>Version 1.1, March 2000</para> 
<blockquote> 
<para>Copyright (C) 2000  Free Software Foundation, Inc.
59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.</para> 
</blockquote> 
<sect1 id="gpl_0" label="0"> 
<title>PREAMBLE</title> 
<para>The purpose of this License is to make a manual, textbook,
    or other written document "free" in the sense of freedom: to
    assure everyone the effective freedom to copy and redistribute it,
    with or without modifying it, either commercially or
    noncommercially.  Secondarily, this License preserves for the
    author and publisher a way to get credit for their work, while not
    being considered responsible for modifications made by
    others.</para> 
<para>This License is a kind of "copyleft", which means that
    derivative works of the document must themselves be free in the
    same sense.  It complements the GNU General Public License, which
    is a copyleft license designed for free software.</para> 
<para>We have designed this License in order to use it for manuals
    for free software, because free software needs free documentation:
    a free program should come with manuals providing the same
    freedoms that the software does.  But this License is not limited
    to software manuals; it can be used for any textual work,
    regardless of subject matter or whether it is published as a
    printed book.  We recommend this License principally for works
    whose purpose is instruction or reference.</para> 
</sect1> 
<sect1 id="gpl_1" label="1"> 
<title>APPLICABILITY AND DEFINITIONS</title> 
<para>This License applies to any manual or other work that
    contains a notice placed by the copyright holder saying it can be
    distributed under the terms of this License.  The "Document",
    below, refers to any such manual or work.  Any member of the
    public is a licensee, and is addressed as "you".</para> 
<para>A "Modified Version" of the Document means any work
    containing the Document or a portion of it, either copied
    verbatim, or with modifications and/or translated into another
    language.</para> 
<para>A "Secondary Section" is a named appendix or a front-matter
    section of the Document that deals exclusively with the
    relationship of the publishers or authors of the Document to the
    Document&apos;s overall subject (or to related matters) and contains
    nothing that could fall directly within that overall subject.
    (For example, if the Document is in part a textbook of
    mathematics, a Secondary Section may not explain any mathematics.)
    The relationship could be a matter of historical connection with
    the subject or with related matters, or of legal, commercial,
    philosophical, ethical or political position regarding
    them.</para> 
<para>The "Invariant Sections" are certain Secondary Sections
    whose titles are designated, as being those of Invariant Sections,
    in the notice that says that the Document is released under this
    License.</para> 
<para>The "Cover Texts" are certain short passages of text that
    are listed, as Front-Cover Texts or Back-Cover Texts, in the
    notice that says that the Document is released under this
    License.</para> 
<para>A "Transparent" copy of the Document means a
    machine-readable copy, represented in a format whose specification
    is available to the general public, whose contents can be viewed
    and edited directly and straightforwardly with generic text
    editors or (for images composed of pixels) generic paint programs
    or (for drawings) some widely available drawing editor, and that
    is suitable for input to text formatters or for automatic
    translation to a variety of formats suitable for input to text
    formatters.  A copy made in an otherwise Transparent file format
    whose markup has been designed to thwart or discourage subsequent
    modification by readers is not Transparent.  A copy that is not
    "Transparent" is called "Opaque".</para> 
<para>Examples of suitable formats for Transparent copies include
    plain ASCII without markup, Texinfo input format, LaTeX input
    format, SGML or XML using a publicly available DTD, and
    standard-conforming simple HTML designed for human modification.
    Opaque formats include PostScript, PDF, proprietary formats that
    can be read and edited only by proprietary word processors, SGML
    or XML for which the DTD and/or processing tools are not generally
    available, and the machine-generated HTML produced by some word
    processors for output purposes only.</para> 
<para>The "Title Page" means, for a printed book, the title page
    itself, plus such following pages as are needed to hold, legibly,
    the material this License requires to appear in the title page.
    For works in formats which do not have any title page as such,
    "Title Page" means the text near the most prominent appearance of
    the work&apos;s title, preceding the beginning of the body of the
    text.</para> 
</sect1> 
<sect1 id="gpl_2" label="2"> 
<title>VERBATIM COPYING</title> 
<para>You may copy and distribute the Document in any medium,
    either commercially or noncommercially, provided that this
    License, the copyright notices, and the license notice saying this
    License applies to the Document are reproduced in all copies, and
    that you add no other conditions whatsoever to those of this
    License.  You may not use technical measures to obstruct or
    control the reading or further copying of the copies you make or
    distribute.  However, you may accept compensation in exchange for
    copies.  If you distribute a large enough number of copies you
    must also follow the conditions in section 3.</para> 
<para>You may also lend copies, under the same conditions stated
    above, and you may publicly display copies.</para> 
</sect1> 
<sect1 id="gpl_3" label="3"> 
<title>COPYING IN QUANTITY</title> 
<para>If you publish printed copies of the Document numbering more
    than 100, and the Document&apos;s license notice requires Cover Texts,
    you must enclose the copies in covers that carry, clearly and
    legibly, all these Cover Texts: Front-Cover Texts on the front
    cover, and Back-Cover Texts on the back cover.  Both covers must
    also clearly and legibly identify you as the publisher of these
    copies.  The front cover must present the full title with all
    words of the title equally prominent and visible.  You may add
    other material on the covers in addition.  Copying with changes
    limited to the covers, as long as they preserve the title of the
    Document and satisfy these conditions, can be treated as verbatim
    copying in other respects.</para> 
<para>If the required texts for either cover are too voluminous to
    fit legibly, you should put the first ones listed (as many as fit
    reasonably) on the actual cover, and continue the rest onto
    adjacent pages.</para> 
<para>If you publish or distribute Opaque copies of the Document
    numbering more than 100, you must either include a
    machine-readable Transparent copy along with each Opaque copy, or
    state in or with each Opaque copy a publicly-accessible
    computer-network location containing a complete Transparent copy
    of the Document, free of added material, which the general
    network-using public has access to download anonymously at no
    charge using public-standard network protocols.  If you use the
    latter option, you must take reasonably prudent steps, when you
    begin distribution of Opaque copies in quantity, to ensure that
    this Transparent copy will remain thus accessible at the stated
    location until at least one year after the last time you
    distribute an Opaque copy (directly or through your agents or
    retailers) of that edition to the public.</para> 
<para>It is requested, but not required, that you contact the
    authors of the Document well before redistributing any large
    number of copies, to give them a chance to provide you with an
    updated version of the Document.</para> 
</sect1> 
<sect1 id="gpl_4" label="4"> 
<title>MODIFICATIONS</title> 
<para>You may copy and distribute a Modified Version of the
    Document under the conditions of sections 2 and 3 above, provided
    that you release the Modified Version under precisely this
    License, with the Modified Version filling the role of the
    Document, thus licensing distribution and modification of the
    Modified Version to whoever possesses a copy of it.  In addition,
    you must do these things in the Modified Version:</para> 
<orderedlist numeration="upperalpha"> 
<listitem> 
<para>Use in the Title Page
      (and on the covers, if any) a title distinct from that of the
      Document, and from those of previous versions (which should, if
      there were any, be listed in the History section of the
      Document).  You may use the same title as a previous version if
      the original publisher of that version gives permission.</para> 
</listitem> 
<listitem> 
<para>List on the Title Page,
      as authors, one or more persons or entities responsible for
      authorship of the modifications in the Modified Version,
      together with at least five of the principal authors of the
      Document (all of its principal authors, if it has less than
      five).</para> 
</listitem> 
<listitem> 
<para>State on the Title page
      the name of the publisher of the Modified Version, as the
      publisher.</para> 
</listitem> 
<listitem> 
<para>Preserve all the
      copyright notices of the Document.</para> 
</listitem> 
<listitem> 
<para>Add an appropriate
      copyright notice for your modifications adjacent to the other
      copyright notices.</para> 
</listitem> 
<listitem> 
<para>Include, immediately
      after the copyright notices, a license notice giving the public
      permission to use the Modified Version under the terms of this
      License, in the form shown in the Addendum below.</para> 
</listitem> 
<listitem> 
<para>Preserve in that license
      notice the full lists of Invariant Sections and required Cover
      Texts given in the Document&apos;s license notice.</para> 
</listitem> 
<listitem> 
<para>Include an unaltered
      copy of this License.</para> 
</listitem> 
<listitem> 
<para>Preserve the section
      entitled "History", and its title, and add to it an item stating
      at least the title, year, new authors, and publisher of the
      Modified Version as given on the Title Page.  If there is no
      section entitled "History" in the Document, create one stating
      the title, year, authors, and publisher of the Document as given
      on its Title Page, then add an item describing the Modified
      Version as stated in the previous sentence.</para> 
</listitem> 
<listitem> 
<para>Preserve the network
      location, if any, given in the Document for public access to a
      Transparent copy of the Document, and likewise the network
      locations given in the Document for previous versions it was
      based on.  These may be placed in the "History" section.  You
      may omit a network location for a work that was published at
      least four years before the Document itself, or if the original
      publisher of the version it refers to gives permission.</para> 
</listitem> 
<listitem> 
<para>In any section entitled
      "Acknowledgements" or "Dedications", preserve the section&apos;s
      title, and preserve in the section all the substance and tone of
      each of the contributor acknowledgements and/or dedications
      given therein.</para> 
</listitem> 
<listitem> 
<para>Preserve all the
      Invariant Sections of the Document, unaltered in their text and
      in their titles.  Section numbers or the equivalent are not
      considered part of the section titles.</para> 
</listitem> 
<listitem> 
<para>Delete any section
      entitled "Endorsements".  Such a section may not be included in
      the Modified Version.</para> 
</listitem> 
<listitem> 
<para>Do not retitle any
      existing section as "Endorsements" or to conflict in title with
      any Invariant Section.</para> 
</listitem> 
</orderedlist> 
<para>If the Modified Version includes new front-matter sections
    or appendices that qualify as Secondary Sections and contain no
    material copied from the Document, you may at your option
    designate some or all of these sections as invariant.  To do this,
    add their titles to the list of Invariant Sections in the Modified
    Version&apos;s license notice.  These titles must be distinct from any
    other section titles.</para> 
<para>You may add a section entitled "Endorsements", provided it
    contains nothing but endorsements of your Modified Version by
    various parties--for example, statements of peer review or that
    the text has been approved by an organization as the authoritative
    definition of a standard.</para> 
<para>You may add a passage of up to five words as a Front-Cover
    Text, and a passage of up to 25 words as a Back-Cover Text, to the
    end of the list of Cover Texts in the Modified Version.  Only one
    passage of Front-Cover Text and one of Back-Cover Text may be
    added by (or through arrangements made by) any one entity.  If the
    Document already includes a cover text for the same cover,
    previously added by you or by arrangement made by the same entity
    you are acting on behalf of, you may not add another; but you may
    replace the old one, on explicit permission from the previous
    publisher that added the old one.</para> 
<para>The author(s) and publisher(s) of the Document do not by
    this License give permission to use their names for publicity for
    or to assert or imply endorsement of any Modified Version.</para> 
</sect1> 
<sect1 id="gpl_5" label="5"> 
<title>COMBINING DOCUMENTS</title> 
<para>You may combine the Document with other documents released
    under this License, under the terms defined in section 4 above for
    modified versions, provided that you include in the combination
    all of the Invariant Sections of all of the original documents,
    unmodified, and list them all as Invariant Sections of your
    combined work in its license notice.</para> 
<para>The combined work need only contain one copy of this
    License, and multiple identical Invariant Sections may be replaced
    with a single copy.  If there are multiple Invariant Sections with
    the same name but different contents, make the title of each such
    section unique by adding at the end of it, in parentheses, the
    name of the original author or publisher of that section if known,
    or else a unique number.  Make the same adjustment to the section
    titles in the list of Invariant Sections in the license notice of
    the combined work.</para> 
<para>In the combination, you must combine any sections entitled
    "History" in the various original documents, forming one section
    entitled "History"; likewise combine any sections entitled
    "Acknowledgements", and any sections entitled "Dedications".  You
    must delete all sections entitled "Endorsements."</para> 
</sect1> 
<sect1 id="gpl_6" label="6"> 
<title>COLLECTIONS OF DOCUMENTS</title> 
<para>You may make a collection consisting of the Document and
    other documents released under this License, and replace the
    individual copies of this License in the various documents with a
    single copy that is included in the collection, provided that you
    follow the rules of this License for verbatim copying of each of
    the documents in all other respects.</para> 
<para>You may extract a single document from such a collection,
    and distribute it individually under this License, provided you
    insert a copy of this License into the extracted document, and
    follow this License in all other respects regarding verbatim
    copying of that document.</para> 
</sect1> 
<sect1 id="gpl_7" label="7"> 
<title>AGGREGATION WITH INDEPENDENT WORKS</title> 
<para>A compilation of the Document or its derivatives with other
    separate and independent documents or works, in or on a volume of
    a storage or distribution medium, does not as a whole count as a
    Modified Version of the Document, provided no compilation
    copyright is claimed for the compilation.  Such a compilation is
    called an "aggregate", and this License does not apply to the
    other self-contained works thus compiled with the Document, on
    account of their being thus compiled, if they are not themselves
    derivative works of the Document.</para> 
<para>If the Cover Text requirement of section 3 is applicable to
    these copies of the Document, then if the Document is less than
    one quarter of the entire aggregate, the Document&apos;s Cover Texts
    may be placed on covers that surround only the Document within the
    aggregate.  Otherwise they must appear on covers around the whole
    aggregate.</para> 
</sect1> 
<sect1 id="gpl_8" label="8"> 
<title>TRANSLATION</title> 
<para>Translation is considered a kind of modification, so you may
    distribute translations of the Document under the terms of section
    4.  Replacing Invariant Sections with translations requires
    special permission from their copyright holders, but you may
    include translations of some or all Invariant Sections in addition
    to the original versions of these Invariant Sections.  You may
    include a translation of this License provided that you also
    include the original English version of this License.  In case of
    a disagreement between the translation and the original English
    version of this License, the original English version will
    prevail.</para> 
</sect1> 
<sect1 id="gpl_9" label="9"> 
<title>TERMINATION</title> 
<para>You may not copy, modify, sublicense, or distribute the
    Document except as expressly provided for under this License.  Any
    other attempt to copy, modify, sublicense or distribute the
    Document is void, and will automatically terminate your rights
    under this License.  However, parties who have received copies, or
    rights, from you under this License will not have their licenses
    terminated so long as such parties remain in full
    compliance.</para> 
</sect1> 
<sect1 id="gpl_10" label="10"> 
<title>FUTURE REVISIONS OF THIS LICENSE</title> 
<para>The Free Software Foundation may publish new, revised
    versions of the GNU Free Documentation License from time to time.
    Such new versions will be similar in spirit to the present
    version, but may differ in detail to address new problems or
    concerns.  See
        <ulink url="http://www.gnu.org/copyleft/">http://www.gnu.org/copyleft/</ulink>.
      </para> 
<para>Each version of the License is given a distinguishing
    version number.  If the Document specifies that a particular
    numbered version of this License "or any later version" applies to
    it, you have the option of following the terms and conditions
    either of that specified version or of any later version that has
    been published (not as a draft) by the Free Software Foundation.
    If the Document does not specify a version number of this License,
    you may choose any version ever published (not as a draft) by the
    Free Software Foundation.</para> 
</sect1> 
</appendix>
  <!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<!--   GLOSSARY                                                            -->
<!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<appendix id="app_glossary">
<title>Debrief Glossary</title> 
<sect1 id="gloss_intro"> 
<title>Glossary</title> 
<para>This section contains explanations of terms used within Debrief</para> 
</sect1> 
<glossary id="glossary"> 
<glossentry id="G_AUTEC"> 
<glossterm>AUTEC</glossterm> 
<glossdef> 
<para>Atlantic Underwater Test Facility.  Data files from this facility which are to be imported into Debrief should be suffixed with "RAO".  The origin of AUTEC is:
            <screen>
              <markup>
23º 26&apos; 37.6280" N
77º 38&apos; 6.8250" W
              </markup>
            </screen>
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="G_AFWTF"> 
<glossterm>AFWTF</glossterm> 
<glossdef> 
<para>Atlantic Fleet Weapons Training Facility.  Data files from this facility which are to be imported into Debrief should be suffixed with "PRN".  The origin of AFWTF is :
            <screen>
              <markup>
17º 38.1577&apos; N 
065º 4.2065&apos; W</markup>
            </screen>
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_annotation"> 
<glossterm>Annotation</glossterm> 
<glossdef> 
<para>An annotation is the generic term used to describe the graphic elements added to a plot which do not represent vehicle positions, or bearings recorded on vehicle-mounted sensors.  Examples of annotations are rectangles, ellipses and lines.</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_bearing_rate"> 
<glossterm>Bearing Rate</glossterm> 
<glossdef> 
<para>Bearing rate within the application is calculated using the following formula:
            <screen>
              <markup>Bdot = ((Tspd * sin(Tcrse) - Ospd * sin(Ocrse)) *
     cos(brg) - (Tspd * cos(Tcrse) - Ospd * cos(Ocrse)) *
            sin(brg)) / range * 60</markup>
            </screen>

            <screen>
              <markup>Rdot = Range Rate (yds/min)
Bdot = Bearing Rate (degs/min)
Tspd, Tcrse = Target course and speed (degs &amp; yps)
Ospd, Ocrse = Ownship course and speed (degs &amp; yps)
brg = Bearing to target from ownship (degs)
range = Range to target from ownship (yds)</markup>
            </screen>
          </para> 
<para>Positive and negative bearing rates are named Right and Left according to naval convention, abreviated to R and L in the tote.</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_buoyfields"> 
<glossterm>Buoyfields</glossterm> 
<glossdef> 
<para>A series of sonar buoys which are laid in a particular pattern during Anti-Submarine Warfare.</para> 
</glossdef> 
</glossentry> 
<glossentry id="G_BUILD_DATE"> 
<glossterm>Build Date</glossterm> 
<glossdef> 
<para>Each copy of Debrief is aware of the date is was built. Find this out by selecting <guimenuitem>About</guimenuitem> from the <guimenu>Help</guimenu> menu.</para> 
</glossdef> 
</glossentry>
<glossentry id="g_coastline_file"> 
<glossterm>Coastline File</glossterm> 
<glossdef> 
<para>Debrief expects to
            <indexterm>
              <primary>Coastline</primary>
              <secondary>File Format</secondary>
            </indexterm>find a coastline file (named
            <application>World.dat</application>) in its installation directory.  Debrief loads this file in the background as soon as it opens; regardless of whether the user has requested to add a coastline to the current plot.  Once the coastline is loaded (for the standard 1.2Mb file this takes around 8 seconds) there is no further performance penalty within the application.
          </para> 
<para>The coastline file should be formatted in the following way:
            <itemizedlist>
              <listitem>
                <para>The coastline consists of a series of coastline segments.  Each segment is drawn as a continuous polygon by the application.</para> 
</listitem> 
<listitem> 
<para>Each segment begins with the # -b separator on a line of its own</para> 
</listitem> 
<listitem> 
<para>Then there are a series of lines each containing a point in latitude and longitude expressed in decimal degrees (to 6 decimal places in the standard file).</para> 
</listitem> 
</itemizedlist> 
<screen>
              <markup>
# -b
-7.491098    4.257159
-7.523953    4.245425
-9.112761    5.008146
-9.464786    5.339050
-9.807424    5.681688
# -b
-9.807424    5.681688
-10.004558    5.845966
-11.152161    6.606341
-11.131039    6.639197
-11.163895    6.672052
-11.307052    6.761232
-11.351642    6.803475
              </markup>
            </screen>

</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_display_mode"> 
<glossterm>Display Mode</glossterm> 
<glossdef> 
<para>Each of the display modes used on the Debrief plot represents a different method of stepping through the plot.  When in the normal mode each track is shown in full, with a highlight drawn over the current point (as indicated in the Tote).  When in snail mode only the current point plus an optional back-track is plotted. </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_earth_model"> 
<glossterm>Earth Model</glossterm> 
<glossdef> 
<para>The Earth Model used by the application is modular and interchangeable.  In the initial release of the application the calculations use the Rhumb-Line Formulae, as described in &apos;Admiralty Manual of Navigation, Volume 2, 1973&apos;. Short-distance sailing is defined as "the following of a rhumb-line track for a distance not greater than 600"</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_dtg"> 
<glossterm>DTG</glossterm> 
<glossdef> 
<para>Acronym representing Date Time Group</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_highlighter"> 
<glossterm>Highlighter</glossterm> 
<glossdef> 
<para>The highlighter is the graphic used to indicate the current point on a track.  Use of different highlighters allows range rings or a vessel-specific symbol to be plotted at the current point</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_layer"> 
<glossterm>Layer</glossterm> 
<glossdef> 
<para>A
	    collection of objected plotted on the
            <application>Debrief</application> Plot. Each layer can be
	    switched on and off individually using the
            <link linkend="layer_mgr">Layer Manager</link>.  When written to a plot-file, each layer is stored separately - making it quite easy to copy individual layers out of a plot-file using a text-editor and collating them into a new file. (An example of this would be drawing exercise areas into one session, then moving them all into one layer, save the file to disk, copy this layer to a file of its own, then dropping this file of exercise areas into new files - an example of this is in the
            <link linkend="vpf_how_to">VPF best-practice</link>.)
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_MWC"> 
<glossterm>MWC</glossterm> 
<glossdef> 
<para>
[Extracts taken from MWC 2000 Flyer]
          </para> 
<para>
Under CinCFleet, the Maritime Warfare Centre (MWC) is a &apos;one-stop shop&apos; for the evolution and dissemination of maritime/joint doctrine and concepts through teaching, tactical development, operational analysis, force development and wargaming.
          </para> 
<para>
It also provides the focus for the development and practice of operational level warfighting, planning and decision making.
          </para> 
<para>
The MWC was formed on 1 October 1995 merging the activities of the Maritime Warfare Development Centre at HMS Dolphin and the Maritime Tactical School at HMS Dryad to create a focal point for doctrine and tactical development.
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_narrative"> 
<glossterm>Narrative</glossterm> 
<glossdef> 
<para>A series of time-related text messages.  Typically these may represent the narrative recorded in a control room during an exercise, but alternatively they may contain a series of status messages retrieved from a sensor or weapon.  All that is required is that the message have a DTG attached and that it may be represented in text form.</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_overview"> 
<glossterm>Overview</glossterm> 
<glossdef> 
<para>A zoomed out plot showing the full dataset currently loaded.  Double clicking on this plot forces the main plot to re-centre on the selected point, and dragging an area on this plot forces the main plot to zoom in on the selected area. The formatting on the overview chart is identical to (and unchangeable from) that on the main plot, with the exception that text is not plotted - to reduce clutter.</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_pfwtf"> 
<glossterm>PFWTF</glossterm> 
<glossdef> 
<para>Pacific Fleet Weapons Training Facility (see AFWTF).  The origin of PFWTF is :
            <screen>
              <markup>
22º 7.16646&apos; N
159º 55.17&apos; W
              </markup>
            </screen>
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_plt"> 
<glossterm>Plot</glossterm> 
<glossdef> 
<para>A graphic
            <emphasis>God&apos;s-eye</emphasis> representation of the current dataset.  By
	    default the plot has a black background but this may be
	    altered by the user.
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_plot_file"> 
<glossterm>Plot-File</glossterm> 
<glossdef> 
<para>A file containing the following:
            <itemizedlist>
              <listitem>
                <para>The data originally loaded from the
		  Replay file</para> 
</listitem> 
<listitem> 
<para>Any formatting applied to the data
		  originally loaded</para> 
</listitem> 
<listitem> 
<para>The details of any features added to the
		  plot from the toolbars</para> 
</listitem> 
<listitem> 
<para>The coordinates of the current view of
		  the data</para> 
</listitem> 
<listitem> 
<para>The settings of any controls used in
		  Debrief (time on the Tote, primary/secondary tracks,
		  etc)</para> 
</listitem> 
</itemizedlist> Plot-Files end with an XML suffix and may be viewed
in <application>Internet Explorer</application> or edited using
<application>Notepad</application>. </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_property_window"> 
<glossterm>Property Window</glossterm> 
<glossdef> 
<para>A GUI control which
	    contains a list of all of the editable properties for an
	    object within Debrief.  Where applicable, custom editors
	    are supplied (Color, Location, DTG, etc)</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_range_rate"> 
<glossterm>Range Rate</glossterm> 
<glossdef> 
<para>Rage rate within the application is calculated using the following formula:
            <screen>
              <markup>
Rdot = (Tspd * cos (Tcrse - brg) - Ospd * cos(Ocrse - brg) /*60
              </markup>
            </screen>
            <screen>
              <markup>Rdot = Range Rate (yds/min)
Tspd, Tcrse = Target course and speed (degs &amp; yps)
Ospd, Ocrse = Ownship course and speed (degs &amp; yps)
brg = Bearing to target from ownship (degs)
              </markup>
            </screen>
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_replay"> 
<glossterm>Replay</glossterm> 
<glossdef> 
<para>Replay is the name of the Unix application used for viewing tracks back in the early 90&apos;s at MWC</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_serial"> 
<glossterm>Serial</glossterm> 
<glossdef> 
<para>A
	    "block" of exercise time, typically a sub-section of an
	    exercise.  An analyst will normally analyse and exercise
	    one serial at a time, and it is usual for the exercise
	    data to be broken down into serials.</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_sensor"> 
<glossterm>Sensor</glossterm> 
<glossdef> 
<para>A sensor is defined as source of bearing-related information.  As such, it could clearly be an acoustic sensor such as a sonar, but could also be a periscope or radar.
            <application>Debrief</application> makes no specific assumptions regarding what type of sensor is being represented.
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_sensor_contact"> 
<glossterm>Sensor Contact</glossterm> 
<glossdef> 
<para>This is an individual contact recorded on a sensor, a single bearing line reaching from the sensor location (origin) along the contact bearing to the contact range.</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_session"> 
<glossterm>Session</glossterm> 
<glossdef> 
<para>The
	    layers, projection details, and settings of any
	    GUI-elements for the current view</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_snail_trail"> 
<glossterm>Snail Trail</glossterm> 
<glossdef> 
<para>A mode within
            <application>Debrief</application> where only the current
	    vessel position plus a short back-track of previous
	    positions is shown.
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_stepper_control"> 
<glossterm>Stepper Control</glossterm> 
<glossdef> 
<para>The Stepper Control is the collection of controls at the top of the Tote panel.  The Stepper Control provides controls to move the current time backwards and forwards, controls to edit the stepper itself (edit properties and change display mode), and convenience buttons such as
            <guibutton>View Layer Manager</guibutton> and
            <guibutton>View Track &amp; Time Toolbox</guibutton>.
            <figure float="0">
              <title>The Debrief Stepper Control</title>
              <screenshot>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="figures/Tote.gif"/>
                  </imageobject>
                </mediaobject>
              </screenshot>
            </figure>
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_symbology"> 
<glossterm>Symbology</glossterm> 
<glossdef> 
<para>This pair of text characters contained in an
            <filename>REP</filename> file indicate  the formatting to
	    be applied  to this particular track/fix/annotation,
	    although they can be over-ridden once the data is
	    open in
            <application>Debrief</application>.
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_tzero"> 
<glossterm>T-Zero</glossterm> 
<glossdef> 
<para>A specific time of interest, particularly the start of a particular event.  Contexts typically have their own convention of t-zero.  Lightweight torpedo launches use weapon-splash time. </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_tma_solution"> 
<glossterm>TMA Solution</glossterm> 
<glossdef> 
<para>Warships (submarines in particular) use Target Motion Analysis (TMA) to produce an estimate of target range. course and speed when the target is held on a bearing/frequency only sensor.   TMA solutions frequently represent uncertainty over target location by representing the location as an ellipse - given by a centre-point, an orientation and dimensions for the maximum and minimum axis (as diameter, not radius).</para> 
</glossdef> 
</glossentry> 
<glossentry id="g_track"> 
<glossterm>Track</glossterm> 
<glossdef> 
<para>A
	    series of positions recorded for a particular vehicle
	    (ship, submarine, helo, etc).  A track has its own
	    characteristics such as colour, label and symbol
	    frequency, and the symbol used to represent it when the
            <link linkend="stepping_keywords">symbol
	      highlighter</link> is in use.
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_tote"> 
<glossterm>Tote</glossterm> 
<glossdef> 
<para>A GUI
	    panel located by default at the lower-left hand side of
	    the
            <application>Debrief</application> window.  The Tote
	    contains the Time Stepper, beneath which are shown the
	    primary and secondary tracks, when assigned.  When
	    stepping forward through a
            <glossterm>serial</glossterm> the Tote contains data calculated from the current vessel positions.
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_vpf"> 
<glossterm>VPF</glossterm> 
<glossdef> 
<para>The Vector Product Format is the format of vectored data which may be viewed by
            <application>Debrief</application>.  The main type of VPF data is the Vector Map Level 0, an unclassified global database which includes coastlines, national borders and depth contours.  Its supplier
(
            <ulink url="http://www.nima.mil">WWW.NIMA.MIL</ulink>) describes it as:
            <quote>The Vector Product Format (VPF) is a standard format, structure, and organization for large geographic databases that are based on a georelational data model and are intended for direct use.
            </quote>
          </para> 
</glossdef> 
</glossentry> 
<glossentry id="g_xml"> 
<glossterm>XML</glossterm> 
<glossdef> 
<para>The
	    eXtensible Markup Language, as recommend by the World Wide
	    Web consortium.  See the
            <link linkend="intro_xml">XML
	      description</link> of the Debrief reference
	    guide
          </para> 
</glossdef> 
</glossentry> 
</glossary> 
</appendix>
  <!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<!-- Index-->
<!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<appendix id="app_index">
<title>Index</title> 
<para></para> 
<index> 
</index> 
</appendix>
  <!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<!-- Colophon                                                              -->
<!-- ********************************************************************** -->
<!-- ********************************************************************** -->
<colophon id="colophon"> 
<para>Debrief has been authored in DocBook XML version 4.2 using XMetal version 3.  Version 6.5.2 of Saxon used version 1.61.2 of the Docbook XSL stylesheets  and version 0.20.5 of fop to publish the document to PDF and HTML.
    </para> 
<para>The majority of the text was originally imported from previous
      <application>Debrief</application> help-files, but the reviews conducted in the transfer to DocBook have resulted in many corrections and clarifications.
    </para> 
</colophon> 
</book>

<!-- 
Local Variables:
mode: sgml
sgml-indent-step: 2
sgml-indent-data: t
sgml-set-face: t
End:
-->
